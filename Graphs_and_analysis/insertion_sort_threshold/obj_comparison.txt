Input: (minArrayLength, maxArrayLength, testCases) = 
#####################################################################
Debug: arrayLength                    = 0
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8798, 1202, 
Debug: bestThreshold[maxSpeedIndex]   = 8798

ir_sort is faster than std::sort 87.98 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.274804151826

#####################################################################
Debug: arrayLength                    = 1
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8505, 1495, 
Debug: bestThreshold[maxSpeedIndex]   = 8505

ir_sort is faster than std::sort 85.05 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.208681360095

#####################################################################
Debug: arrayLength                    = 2
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 1284, 8716, 
Debug: bestThreshold[maxSpeedIndex]   = 8716

std::sort is faster than ir_sort 87.16 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9829496901551

#####################################################################
Debug: arrayLength                    = 3
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 1625, 8375, 
Debug: bestThreshold[maxSpeedIndex]   = 8375

std::sort is faster than ir_sort 83.75 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.98259907696

#####################################################################
Debug: arrayLength                    = 4
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 1067, 8933, 
Debug: bestThreshold[maxSpeedIndex]   = 8933

std::sort is faster than ir_sort 89.33 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9861029543144

#####################################################################
Debug: arrayLength                    = 5
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 1484, 8516, 
Debug: bestThreshold[maxSpeedIndex]   = 8516

std::sort is faster than ir_sort 85.16 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9865648013825

#####################################################################
Debug: arrayLength                    = 6
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 1911, 8089, 
Debug: bestThreshold[maxSpeedIndex]   = 8089

std::sort is faster than ir_sort 80.89 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9887096162226

#####################################################################
Debug: arrayLength                    = 7
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 1613, 8387, 
Debug: bestThreshold[maxSpeedIndex]   = 8387

std::sort is faster than ir_sort 83.87 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9873943843252

#####################################################################
Debug: arrayLength                    = 8
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3116, 6884, 
Debug: bestThreshold[maxSpeedIndex]   = 6884

std::sort is faster than ir_sort 68.84 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9922413302529

#####################################################################
Debug: arrayLength                    = 9
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4649, 5351, 
Debug: bestThreshold[maxSpeedIndex]   = 5351

std::sort is faster than ir_sort 53.51 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9994801791331

#####################################################################
Debug: arrayLength                    = 10
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 1378, 8622, 
Debug: bestThreshold[maxSpeedIndex]   = 8622

std::sort is faster than ir_sort 86.22 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9813143530703

#####################################################################
Debug: arrayLength                    = 11
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 1374, 8626, 
Debug: bestThreshold[maxSpeedIndex]   = 8626

std::sort is faster than ir_sort 86.26 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9826594083076

#####################################################################
Debug: arrayLength                    = 12
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4715, 5285, 
Debug: bestThreshold[maxSpeedIndex]   = 5285

std::sort is faster than ir_sort 52.85 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9995393548169

#####################################################################
Debug: arrayLength                    = 13
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 2905, 7095, 
Debug: bestThreshold[maxSpeedIndex]   = 7095

std::sort is faster than ir_sort 70.95 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9947358076364

#####################################################################
Debug: arrayLength                    = 14
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3226, 6774, 
Debug: bestThreshold[maxSpeedIndex]   = 6774

std::sort is faster than ir_sort 67.74 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9951842429336

#####################################################################
Debug: arrayLength                    = 15
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4973, 5027, 
Debug: bestThreshold[maxSpeedIndex]   = 5027

std::sort is faster than ir_sort 50.27 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001154242365

#####################################################################
Debug: arrayLength                    = 16
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3051, 6949, 
Debug: bestThreshold[maxSpeedIndex]   = 6949

std::sort is faster than ir_sort 69.49 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9957378368893

#####################################################################
Debug: arrayLength                    = 17
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3162, 6838, 
Debug: bestThreshold[maxSpeedIndex]   = 6838

std::sort is faster than ir_sort 68.38 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9955555097101

#####################################################################
Debug: arrayLength                    = 18
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5120, 4880, 
Debug: bestThreshold[maxSpeedIndex]   = 5120

ir_sort is faster than std::sort 51.2 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00064356966

#####################################################################
Debug: arrayLength                    = 19
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3681, 6319, 
Debug: bestThreshold[maxSpeedIndex]   = 6319

std::sort is faster than ir_sort 63.19 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9974061797672

#####################################################################
Debug: arrayLength                    = 20
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 1861, 8139, 
Debug: bestThreshold[maxSpeedIndex]   = 8139

std::sort is faster than ir_sort 81.39 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9900367077757

#####################################################################
Debug: arrayLength                    = 21
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 2342, 7658, 
Debug: bestThreshold[maxSpeedIndex]   = 7658

std::sort is faster than ir_sort 76.58 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9932521891276

#####################################################################
Debug: arrayLength                    = 22
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3989, 6011, 
Debug: bestThreshold[maxSpeedIndex]   = 6011

std::sort is faster than ir_sort 60.11 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9984915446124

#####################################################################
Debug: arrayLength                    = 23
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4118, 5882, 
Debug: bestThreshold[maxSpeedIndex]   = 5882

std::sort is faster than ir_sort 58.82 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002115737317

#####################################################################
Debug: arrayLength                    = 24
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3429, 6571, 
Debug: bestThreshold[maxSpeedIndex]   = 6571

std::sort is faster than ir_sort 65.71 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9987129816859

#####################################################################
Debug: arrayLength                    = 25
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4083, 5917, 
Debug: bestThreshold[maxSpeedIndex]   = 5917

std::sort is faster than ir_sort 59.17 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000213056996

#####################################################################
Debug: arrayLength                    = 26
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5816, 4184, 
Debug: bestThreshold[maxSpeedIndex]   = 5816

ir_sort is faster than std::sort 58.16 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004646809838

#####################################################################
Debug: arrayLength                    = 27
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6064, 3936, 
Debug: bestThreshold[maxSpeedIndex]   = 6064

ir_sort is faster than std::sort 60.64 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003405624518

#####################################################################
Debug: arrayLength                    = 28
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4775, 5225, 
Debug: bestThreshold[maxSpeedIndex]   = 5225

std::sort is faster than ir_sort 52.25 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000759225901

#####################################################################
Debug: arrayLength                    = 29
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5744, 4256, 
Debug: bestThreshold[maxSpeedIndex]   = 5744

ir_sort is faster than std::sort 57.44 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003041582592

#####################################################################
Debug: arrayLength                    = 30
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6117, 3883, 
Debug: bestThreshold[maxSpeedIndex]   = 6117

ir_sort is faster than std::sort 61.17 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00386168025

#####################################################################
Debug: arrayLength                    = 31
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6731, 3269, 
Debug: bestThreshold[maxSpeedIndex]   = 6731

ir_sort is faster than std::sort 67.31 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005090839036

#####################################################################
Debug: arrayLength                    = 32
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5770, 4230, 
Debug: bestThreshold[maxSpeedIndex]   = 5770

ir_sort is faster than std::sort 57.7 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002278774919

#####################################################################
Debug: arrayLength                    = 33
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6074, 3926, 
Debug: bestThreshold[maxSpeedIndex]   = 6074

ir_sort is faster than std::sort 60.74 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003654028346

#####################################################################
Debug: arrayLength                    = 34
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7060, 2940, 
Debug: bestThreshold[maxSpeedIndex]   = 7060

ir_sort is faster than std::sort 70.6 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01286333605

#####################################################################
Debug: arrayLength                    = 35
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9449, 551, 
Debug: bestThreshold[maxSpeedIndex]   = 9449

ir_sort is faster than std::sort 94.49 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.023707732814

#####################################################################
Debug: arrayLength                    = 36
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8316, 1684, 
Debug: bestThreshold[maxSpeedIndex]   = 8316

ir_sort is faster than std::sort 83.16 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012430404974

#####################################################################
Debug: arrayLength                    = 37
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7847, 2153, 
Debug: bestThreshold[maxSpeedIndex]   = 7847

ir_sort is faster than std::sort 78.47 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009951047403

#####################################################################
Debug: arrayLength                    = 38
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8299, 1701, 
Debug: bestThreshold[maxSpeedIndex]   = 8299

ir_sort is faster than std::sort 82.99 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00920186442

#####################################################################
Debug: arrayLength                    = 39
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8146, 1854, 
Debug: bestThreshold[maxSpeedIndex]   = 8146

ir_sort is faster than std::sort 81.46 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008692041483

#####################################################################
Debug: arrayLength                    = 40
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 1410, 8590, 
Debug: bestThreshold[maxSpeedIndex]   = 8590

std::sort is faster than ir_sort 85.9 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9877733567111

#####################################################################
Debug: arrayLength                    = 41
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 2772, 7228, 
Debug: bestThreshold[maxSpeedIndex]   = 7228

std::sort is faster than ir_sort 72.28 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9931104718771

#####################################################################
Debug: arrayLength                    = 42
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3927, 6073, 
Debug: bestThreshold[maxSpeedIndex]   = 6073

std::sort is faster than ir_sort 60.73 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9972218584464

#####################################################################
Debug: arrayLength                    = 43
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4505, 5495, 
Debug: bestThreshold[maxSpeedIndex]   = 5495

std::sort is faster than ir_sort 54.95 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9989744818303

#####################################################################
Debug: arrayLength                    = 44
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4237, 5763, 
Debug: bestThreshold[maxSpeedIndex]   = 5763

std::sort is faster than ir_sort 57.63 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.999180458411

#####################################################################
Debug: arrayLength                    = 45
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4753, 5247, 
Debug: bestThreshold[maxSpeedIndex]   = 5247

std::sort is faster than ir_sort 52.47 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9996494091098

#####################################################################
Debug: arrayLength                    = 46
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4095, 5905, 
Debug: bestThreshold[maxSpeedIndex]   = 5905

std::sort is faster than ir_sort 59.05 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9984660212829

#####################################################################
Debug: arrayLength                    = 47
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4740, 5260, 
Debug: bestThreshold[maxSpeedIndex]   = 5260

std::sort is faster than ir_sort 52.6 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006124714223

#####################################################################
Debug: arrayLength                    = 48
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4720, 5280, 
Debug: bestThreshold[maxSpeedIndex]   = 5280

std::sort is faster than ir_sort 52.8 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003421732931

#####################################################################
Debug: arrayLength                    = 49
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4050, 5950, 
Debug: bestThreshold[maxSpeedIndex]   = 5950

std::sort is faster than ir_sort 59.5 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9979593529684

#####################################################################
Debug: arrayLength                    = 50
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4702, 5298, 
Debug: bestThreshold[maxSpeedIndex]   = 5298

std::sort is faster than ir_sort 52.98 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004684476246

#####################################################################
Debug: arrayLength                    = 51
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4903, 5097, 
Debug: bestThreshold[maxSpeedIndex]   = 5097

std::sort is faster than ir_sort 50.97 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.0010204357

#####################################################################
Debug: arrayLength                    = 52
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4649, 5351, 
Debug: bestThreshold[maxSpeedIndex]   = 5351

std::sort is faster than ir_sort 53.51 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001404846828

#####################################################################
Debug: arrayLength                    = 53
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4479, 5521, 
Debug: bestThreshold[maxSpeedIndex]   = 5521

std::sort is faster than ir_sort 55.21 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000395976065

#####################################################################
Debug: arrayLength                    = 54
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5195, 4805, 
Debug: bestThreshold[maxSpeedIndex]   = 5195

ir_sort is faster than std::sort 51.95 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001540137834

#####################################################################
Debug: arrayLength                    = 55
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5455, 4545, 
Debug: bestThreshold[maxSpeedIndex]   = 5455

ir_sort is faster than std::sort 54.55 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004130682133

#####################################################################
Debug: arrayLength                    = 56
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4759, 5241, 
Debug: bestThreshold[maxSpeedIndex]   = 5241

std::sort is faster than ir_sort 52.41 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003177589019

#####################################################################
Debug: arrayLength                    = 57
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4872, 5128, 
Debug: bestThreshold[maxSpeedIndex]   = 5128

std::sort is faster than ir_sort 51.28 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00577894534

#####################################################################
Debug: arrayLength                    = 58
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4431, 5569, 
Debug: bestThreshold[maxSpeedIndex]   = 5569

std::sort is faster than ir_sort 55.69 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002211753929

#####################################################################
Debug: arrayLength                    = 59
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4185, 5815, 
Debug: bestThreshold[maxSpeedIndex]   = 5815

std::sort is faster than ir_sort 58.15 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002356460109

#####################################################################
Debug: arrayLength                    = 60
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4608, 5392, 
Debug: bestThreshold[maxSpeedIndex]   = 5392

std::sort is faster than ir_sort 53.92 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000838184918

#####################################################################
Debug: arrayLength                    = 61
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6271, 3729, 
Debug: bestThreshold[maxSpeedIndex]   = 6271

ir_sort is faster than std::sort 62.71 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003522324105

#####################################################################
Debug: arrayLength                    = 62
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5535, 4465, 
Debug: bestThreshold[maxSpeedIndex]   = 5535

ir_sort is faster than std::sort 55.35 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004540479354

#####################################################################
Debug: arrayLength                    = 63
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4879, 5121, 
Debug: bestThreshold[maxSpeedIndex]   = 5121

std::sort is faster than ir_sort 51.21 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002645118504

#####################################################################
Debug: arrayLength                    = 64
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4521, 5479, 
Debug: bestThreshold[maxSpeedIndex]   = 5479

std::sort is faster than ir_sort 54.79 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002029579898

#####################################################################
Debug: arrayLength                    = 65
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5009, 4991, 
Debug: bestThreshold[maxSpeedIndex]   = 5009

ir_sort is faster than std::sort 50.09 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002893094337

#####################################################################
Debug: arrayLength                    = 66
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5503, 4497, 
Debug: bestThreshold[maxSpeedIndex]   = 5503

ir_sort is faster than std::sort 55.03 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002416326735

#####################################################################
Debug: arrayLength                    = 67
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3602, 6398, 
Debug: bestThreshold[maxSpeedIndex]   = 6398

std::sort is faster than ir_sort 63.98 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9985691532951

#####################################################################
Debug: arrayLength                    = 68
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4114, 5886, 
Debug: bestThreshold[maxSpeedIndex]   = 5886

std::sort is faster than ir_sort 58.86 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9995318314835

#####################################################################
Debug: arrayLength                    = 69
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5035, 4965, 
Debug: bestThreshold[maxSpeedIndex]   = 5035

ir_sort is faster than std::sort 50.35 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002210350358

#####################################################################
Debug: arrayLength                    = 70
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5237, 4763, 
Debug: bestThreshold[maxSpeedIndex]   = 5237

ir_sort is faster than std::sort 52.37 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001696815943

#####################################################################
Debug: arrayLength                    = 71
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7005, 2995, 
Debug: bestThreshold[maxSpeedIndex]   = 7005

ir_sort is faster than std::sort 70.05 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004247375397

#####################################################################
Debug: arrayLength                    = 72
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6402, 3598, 
Debug: bestThreshold[maxSpeedIndex]   = 6402

ir_sort is faster than std::sort 64.02 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005139168832

#####################################################################
Debug: arrayLength                    = 73
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6306, 3694, 
Debug: bestThreshold[maxSpeedIndex]   = 6306

ir_sort is faster than std::sort 63.06 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006081498367

#####################################################################
Debug: arrayLength                    = 74
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6174, 3826, 
Debug: bestThreshold[maxSpeedIndex]   = 6174

ir_sort is faster than std::sort 61.74 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006660803052

#####################################################################
Debug: arrayLength                    = 75
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6174, 3826, 
Debug: bestThreshold[maxSpeedIndex]   = 6174

ir_sort is faster than std::sort 61.74 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004866175237

#####################################################################
Debug: arrayLength                    = 76
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7561, 2439, 
Debug: bestThreshold[maxSpeedIndex]   = 7561

ir_sort is faster than std::sort 75.61 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015589602957

#####################################################################
Debug: arrayLength                    = 77
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6990, 3010, 
Debug: bestThreshold[maxSpeedIndex]   = 6990

ir_sort is faster than std::sort 69.9 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011606758884

#####################################################################
Debug: arrayLength                    = 78
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7093, 2907, 
Debug: bestThreshold[maxSpeedIndex]   = 7093

ir_sort is faster than std::sort 70.93 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006066556514

#####################################################################
Debug: arrayLength                    = 79
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7108, 2892, 
Debug: bestThreshold[maxSpeedIndex]   = 7108

ir_sort is faster than std::sort 71.08 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006520329481

#####################################################################
Debug: arrayLength                    = 80
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7215, 2785, 
Debug: bestThreshold[maxSpeedIndex]   = 7215

ir_sort is faster than std::sort 72.15 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004875447366

#####################################################################
Debug: arrayLength                    = 81
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4880, 5120, 
Debug: bestThreshold[maxSpeedIndex]   = 5120

std::sort is faster than ir_sort 51.2 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001210800484

#####################################################################
Debug: arrayLength                    = 82
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4614, 5386, 
Debug: bestThreshold[maxSpeedIndex]   = 5386

std::sort is faster than ir_sort 53.86 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9998374834797

#####################################################################
Debug: arrayLength                    = 83
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5231, 4769, 
Debug: bestThreshold[maxSpeedIndex]   = 5231

ir_sort is faster than std::sort 52.31 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001221090711

#####################################################################
Debug: arrayLength                    = 84
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5127, 4873, 
Debug: bestThreshold[maxSpeedIndex]   = 5127

ir_sort is faster than std::sort 51.27 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000645268755

#####################################################################
Debug: arrayLength                    = 85
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5182, 4818, 
Debug: bestThreshold[maxSpeedIndex]   = 5182

ir_sort is faster than std::sort 51.82 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000665068015

#####################################################################
Debug: arrayLength                    = 86
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6493, 3507, 
Debug: bestThreshold[maxSpeedIndex]   = 6493

ir_sort is faster than std::sort 64.93 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002923524203

#####################################################################
Debug: arrayLength                    = 87
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7588, 2412, 
Debug: bestThreshold[maxSpeedIndex]   = 7588

ir_sort is faster than std::sort 75.88 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005019990026

#####################################################################
Debug: arrayLength                    = 88
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7197, 2803, 
Debug: bestThreshold[maxSpeedIndex]   = 7197

ir_sort is faster than std::sort 71.97 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004850108004

#####################################################################
Debug: arrayLength                    = 89
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8536, 1464, 
Debug: bestThreshold[maxSpeedIndex]   = 8536

ir_sort is faster than std::sort 85.36 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00705827212

#####################################################################
Debug: arrayLength                    = 90
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7616, 2384, 
Debug: bestThreshold[maxSpeedIndex]   = 7616

ir_sort is faster than std::sort 76.16 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005054363502

#####################################################################
Debug: arrayLength                    = 91
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7369, 2631, 
Debug: bestThreshold[maxSpeedIndex]   = 7369

ir_sort is faster than std::sort 73.69 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004781002961

#####################################################################
Debug: arrayLength                    = 92
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8123, 1877, 
Debug: bestThreshold[maxSpeedIndex]   = 8123

ir_sort is faster than std::sort 81.23 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006193425718

#####################################################################
Debug: arrayLength                    = 93
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8246, 1754, 
Debug: bestThreshold[maxSpeedIndex]   = 8246

ir_sort is faster than std::sort 82.46 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006248205243

#####################################################################
Debug: arrayLength                    = 94
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8575, 1425, 
Debug: bestThreshold[maxSpeedIndex]   = 8575

ir_sort is faster than std::sort 85.75 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007015769834

#####################################################################
Debug: arrayLength                    = 95
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8803, 1197, 
Debug: bestThreshold[maxSpeedIndex]   = 8803

ir_sort is faster than std::sort 88.03 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007613132155

#####################################################################
Debug: arrayLength                    = 96
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8860, 1140, 
Debug: bestThreshold[maxSpeedIndex]   = 8860

ir_sort is faster than std::sort 88.6 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007987775336

#####################################################################
Debug: arrayLength                    = 97
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9057, 943, 
Debug: bestThreshold[maxSpeedIndex]   = 9057

ir_sort is faster than std::sort 90.57 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008621844852

#####################################################################
Debug: arrayLength                    = 98
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8930, 1070, 
Debug: bestThreshold[maxSpeedIndex]   = 8930

ir_sort is faster than std::sort 89.3 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008160310368

#####################################################################
Debug: arrayLength                    = 99
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8826, 1174, 
Debug: bestThreshold[maxSpeedIndex]   = 8826

ir_sort is faster than std::sort 88.26 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007444415766

#####################################################################
Debug: arrayLength                    = 100
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9058, 942, 
Debug: bestThreshold[maxSpeedIndex]   = 9058

ir_sort is faster than std::sort 90.58 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008710126617

#####################################################################
Debug: arrayLength                    = 101
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9188, 812, 
Debug: bestThreshold[maxSpeedIndex]   = 9188

ir_sort is faster than std::sort 91.88 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008219034742

#####################################################################
Debug: arrayLength                    = 102
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9284, 716, 
Debug: bestThreshold[maxSpeedIndex]   = 9284

ir_sort is faster than std::sort 92.84 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00873334333

#####################################################################
Debug: arrayLength                    = 103
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9070, 930, 
Debug: bestThreshold[maxSpeedIndex]   = 9070

ir_sort is faster than std::sort 90.7 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008332383965

#####################################################################
Debug: arrayLength                    = 104
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8834, 1166, 
Debug: bestThreshold[maxSpeedIndex]   = 8834

ir_sort is faster than std::sort 88.34 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007098517164

#####################################################################
Debug: arrayLength                    = 105
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8749, 1251, 
Debug: bestThreshold[maxSpeedIndex]   = 8749

ir_sort is faster than std::sort 87.49 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007024824733

#####################################################################
Debug: arrayLength                    = 106
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9226, 774, 
Debug: bestThreshold[maxSpeedIndex]   = 9226

ir_sort is faster than std::sort 92.26 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008680976168

#####################################################################
Debug: arrayLength                    = 107
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8835, 1165, 
Debug: bestThreshold[maxSpeedIndex]   = 8835

ir_sort is faster than std::sort 88.35 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01048195637

#####################################################################
Debug: arrayLength                    = 108
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9096, 904, 
Debug: bestThreshold[maxSpeedIndex]   = 9096

ir_sort is faster than std::sort 90.96 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008599134592

#####################################################################
Debug: arrayLength                    = 109
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9353, 647, 
Debug: bestThreshold[maxSpeedIndex]   = 9353

ir_sort is faster than std::sort 93.53 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008629608148

#####################################################################
Debug: arrayLength                    = 110
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9220, 780, 
Debug: bestThreshold[maxSpeedIndex]   = 9220

ir_sort is faster than std::sort 92.2 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008298535873

#####################################################################
Debug: arrayLength                    = 111
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9194, 806, 
Debug: bestThreshold[maxSpeedIndex]   = 9194

ir_sort is faster than std::sort 91.94 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008240461984

#####################################################################
Debug: arrayLength                    = 112
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8763, 1237, 
Debug: bestThreshold[maxSpeedIndex]   = 8763

ir_sort is faster than std::sort 87.63 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010547390301

#####################################################################
Debug: arrayLength                    = 113
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8652, 1348, 
Debug: bestThreshold[maxSpeedIndex]   = 8652

ir_sort is faster than std::sort 86.52 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010296748107

#####################################################################
Debug: arrayLength                    = 114
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9354, 646, 
Debug: bestThreshold[maxSpeedIndex]   = 9354

ir_sort is faster than std::sort 93.54 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010734884953

#####################################################################
Debug: arrayLength                    = 115
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9427, 573, 
Debug: bestThreshold[maxSpeedIndex]   = 9427

ir_sort is faster than std::sort 94.27 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009753097251

#####################################################################
Debug: arrayLength                    = 116
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9571, 429, 
Debug: bestThreshold[maxSpeedIndex]   = 9571

ir_sort is faster than std::sort 95.71 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010235449663

#####################################################################
Debug: arrayLength                    = 117
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9756, 244, 
Debug: bestThreshold[maxSpeedIndex]   = 9756

ir_sort is faster than std::sort 97.56 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013965462023

#####################################################################
Debug: arrayLength                    = 118
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9749, 251, 
Debug: bestThreshold[maxSpeedIndex]   = 9749

ir_sort is faster than std::sort 97.49 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013346873513

#####################################################################
Debug: arrayLength                    = 119
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9713, 287, 
Debug: bestThreshold[maxSpeedIndex]   = 9713

ir_sort is faster than std::sort 97.13 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012170627881

#####################################################################
Debug: arrayLength                    = 120
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9638, 362, 
Debug: bestThreshold[maxSpeedIndex]   = 9638

ir_sort is faster than std::sort 96.38 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012035505333

#####################################################################
Debug: arrayLength                    = 121
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9696, 304, 
Debug: bestThreshold[maxSpeedIndex]   = 9696

ir_sort is faster than std::sort 96.96 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012646127987

#####################################################################
Debug: arrayLength                    = 122
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9804, 196, 
Debug: bestThreshold[maxSpeedIndex]   = 9804

ir_sort is faster than std::sort 98.04 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016315268687

#####################################################################
Debug: arrayLength                    = 123
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9773, 227, 
Debug: bestThreshold[maxSpeedIndex]   = 9773

ir_sort is faster than std::sort 97.73 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015419420534

#####################################################################
Debug: arrayLength                    = 124
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9761, 239, 
Debug: bestThreshold[maxSpeedIndex]   = 9761

ir_sort is faster than std::sort 97.61 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015921446436

#####################################################################
Debug: arrayLength                    = 125
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9762, 238, 
Debug: bestThreshold[maxSpeedIndex]   = 9762

ir_sort is faster than std::sort 97.62 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01539569401

#####################################################################
Debug: arrayLength                    = 126
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9701, 299, 
Debug: bestThreshold[maxSpeedIndex]   = 9701

ir_sort is faster than std::sort 97.01 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014508643388

#####################################################################
Debug: arrayLength                    = 127
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9499, 501, 
Debug: bestThreshold[maxSpeedIndex]   = 9499

ir_sort is faster than std::sort 94.99 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013895140428

#####################################################################
Debug: arrayLength                    = 128
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9418, 582, 
Debug: bestThreshold[maxSpeedIndex]   = 9418

ir_sort is faster than std::sort 94.18 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01210746236

#####################################################################
Debug: arrayLength                    = 129
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9531, 469, 
Debug: bestThreshold[maxSpeedIndex]   = 9531

ir_sort is faster than std::sort 95.31 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012655532907

#####################################################################
Debug: arrayLength                    = 130
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9176, 824, 
Debug: bestThreshold[maxSpeedIndex]   = 9176

ir_sort is faster than std::sort 91.76 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013107978722

#####################################################################
Debug: arrayLength                    = 131
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9240, 760, 
Debug: bestThreshold[maxSpeedIndex]   = 9240

ir_sort is faster than std::sort 92.4 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012792359281

#####################################################################
Debug: arrayLength                    = 132
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9174, 826, 
Debug: bestThreshold[maxSpeedIndex]   = 9174

ir_sort is faster than std::sort 91.74 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012851701245

#####################################################################
Debug: arrayLength                    = 133
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9232, 768, 
Debug: bestThreshold[maxSpeedIndex]   = 9232

ir_sort is faster than std::sort 92.32 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013087446448

#####################################################################
Debug: arrayLength                    = 134
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9351, 649, 
Debug: bestThreshold[maxSpeedIndex]   = 9351

ir_sort is faster than std::sort 93.51 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013251363808

#####################################################################
Debug: arrayLength                    = 135
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9427, 573, 
Debug: bestThreshold[maxSpeedIndex]   = 9427

ir_sort is faster than std::sort 94.27 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014391000274

#####################################################################
Debug: arrayLength                    = 136
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9418, 582, 
Debug: bestThreshold[maxSpeedIndex]   = 9418

ir_sort is faster than std::sort 94.18 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014879540248

#####################################################################
Debug: arrayLength                    = 137
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9250, 750, 
Debug: bestThreshold[maxSpeedIndex]   = 9250

ir_sort is faster than std::sort 92.5 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015647089524

#####################################################################
Debug: arrayLength                    = 138
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9090, 910, 
Debug: bestThreshold[maxSpeedIndex]   = 9090

ir_sort is faster than std::sort 90.9 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.019708716046

#####################################################################
Debug: arrayLength                    = 139
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9427, 573, 
Debug: bestThreshold[maxSpeedIndex]   = 9427

ir_sort is faster than std::sort 94.27 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016581335686

#####################################################################
Debug: arrayLength                    = 140
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9183, 817, 
Debug: bestThreshold[maxSpeedIndex]   = 9183

ir_sort is faster than std::sort 91.83 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015107598116

#####################################################################
Debug: arrayLength                    = 141
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9406, 594, 
Debug: bestThreshold[maxSpeedIndex]   = 9406

ir_sort is faster than std::sort 94.06 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016062687312

#####################################################################
Debug: arrayLength                    = 142
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9356, 644, 
Debug: bestThreshold[maxSpeedIndex]   = 9356

ir_sort is faster than std::sort 93.56 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015587683652

#####################################################################
Debug: arrayLength                    = 143
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8303, 1697, 
Debug: bestThreshold[maxSpeedIndex]   = 8303

ir_sort is faster than std::sort 83.03 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014404232493

#####################################################################
Debug: arrayLength                    = 144
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9196, 804, 
Debug: bestThreshold[maxSpeedIndex]   = 9196

ir_sort is faster than std::sort 91.96 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015337688596

#####################################################################
Debug: arrayLength                    = 145
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9090, 910, 
Debug: bestThreshold[maxSpeedIndex]   = 9090

ir_sort is faster than std::sort 90.9 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014711800035

#####################################################################
Debug: arrayLength                    = 146
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8777, 1223, 
Debug: bestThreshold[maxSpeedIndex]   = 8777

ir_sort is faster than std::sort 87.77 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016808103316

#####################################################################
Debug: arrayLength                    = 147
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9192, 808, 
Debug: bestThreshold[maxSpeedIndex]   = 9192

ir_sort is faster than std::sort 91.92 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01621076669

#####################################################################
Debug: arrayLength                    = 148
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8975, 1025, 
Debug: bestThreshold[maxSpeedIndex]   = 8975

ir_sort is faster than std::sort 89.75 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015153695742

#####################################################################
Debug: arrayLength                    = 149
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9300, 700, 
Debug: bestThreshold[maxSpeedIndex]   = 9300

ir_sort is faster than std::sort 93 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017035400144

#####################################################################
Debug: arrayLength                    = 150
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9370, 630, 
Debug: bestThreshold[maxSpeedIndex]   = 9370

ir_sort is faster than std::sort 93.7 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015752558416

#####################################################################
Debug: arrayLength                    = 151
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9164, 836, 
Debug: bestThreshold[maxSpeedIndex]   = 9164

ir_sort is faster than std::sort 91.64 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014780648257

#####################################################################
Debug: arrayLength                    = 152
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8635, 1365, 
Debug: bestThreshold[maxSpeedIndex]   = 8635

ir_sort is faster than std::sort 86.35 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01325271331

#####################################################################
Debug: arrayLength                    = 153
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9323, 677, 
Debug: bestThreshold[maxSpeedIndex]   = 9323

ir_sort is faster than std::sort 93.23 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01625742474

#####################################################################
Debug: arrayLength                    = 154
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9477, 523, 
Debug: bestThreshold[maxSpeedIndex]   = 9477

ir_sort is faster than std::sort 94.77 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013800251822

#####################################################################
Debug: arrayLength                    = 155
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9617, 383, 
Debug: bestThreshold[maxSpeedIndex]   = 9617

ir_sort is faster than std::sort 96.17 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01469727789

#####################################################################
Debug: arrayLength                    = 156
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9666, 334, 
Debug: bestThreshold[maxSpeedIndex]   = 9666

ir_sort is faster than std::sort 96.66 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015722561025

#####################################################################
Debug: arrayLength                    = 157
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9695, 305, 
Debug: bestThreshold[maxSpeedIndex]   = 9695

ir_sort is faster than std::sort 96.95 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016405586343

#####################################################################
Debug: arrayLength                    = 158
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9658, 342, 
Debug: bestThreshold[maxSpeedIndex]   = 9658

ir_sort is faster than std::sort 96.58 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016590107816

#####################################################################
Debug: arrayLength                    = 159
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9713, 287, 
Debug: bestThreshold[maxSpeedIndex]   = 9713

ir_sort is faster than std::sort 97.13 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016787350604

#####################################################################
Debug: arrayLength                    = 160
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9679, 321, 
Debug: bestThreshold[maxSpeedIndex]   = 9679

ir_sort is faster than std::sort 96.79 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017582722388

#####################################################################
Debug: arrayLength                    = 161
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9727, 273, 
Debug: bestThreshold[maxSpeedIndex]   = 9727

ir_sort is faster than std::sort 97.27 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.018110018909

#####################################################################
Debug: arrayLength                    = 162
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9682, 318, 
Debug: bestThreshold[maxSpeedIndex]   = 9682

ir_sort is faster than std::sort 96.82 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016868055619

#####################################################################
Debug: arrayLength                    = 163
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9762, 238, 
Debug: bestThreshold[maxSpeedIndex]   = 9762

ir_sort is faster than std::sort 97.62 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.022675981192

#####################################################################
Debug: arrayLength                    = 164
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9792, 208, 
Debug: bestThreshold[maxSpeedIndex]   = 9792

ir_sort is faster than std::sort 97.92 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.021625106675

#####################################################################
Debug: arrayLength                    = 165
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9762, 238, 
Debug: bestThreshold[maxSpeedIndex]   = 9762

ir_sort is faster than std::sort 97.62 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.021857964621

#####################################################################
Debug: arrayLength                    = 166
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9742, 258, 
Debug: bestThreshold[maxSpeedIndex]   = 9742

ir_sort is faster than std::sort 97.42 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.021198478458

#####################################################################
Debug: arrayLength                    = 167
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9476, 524, 
Debug: bestThreshold[maxSpeedIndex]   = 9476

ir_sort is faster than std::sort 94.76 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.021047041831

#####################################################################
Debug: arrayLength                    = 168
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9339, 661, 
Debug: bestThreshold[maxSpeedIndex]   = 9339

ir_sort is faster than std::sort 93.39 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013754618105

#####################################################################
Debug: arrayLength                    = 169
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9467, 533, 
Debug: bestThreshold[maxSpeedIndex]   = 9467

ir_sort is faster than std::sort 94.67 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014898910036

#####################################################################
Debug: arrayLength                    = 170
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9430, 570, 
Debug: bestThreshold[maxSpeedIndex]   = 9430

ir_sort is faster than std::sort 94.3 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016657916622

#####################################################################
Debug: arrayLength                    = 171
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9586, 414, 
Debug: bestThreshold[maxSpeedIndex]   = 9586

ir_sort is faster than std::sort 95.86 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015646883494

#####################################################################
Debug: arrayLength                    = 172
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9572, 428, 
Debug: bestThreshold[maxSpeedIndex]   = 9572

ir_sort is faster than std::sort 95.72 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016150848294

#####################################################################
Debug: arrayLength                    = 173
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9582, 418, 
Debug: bestThreshold[maxSpeedIndex]   = 9582

ir_sort is faster than std::sort 95.82 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015823595395

#####################################################################
Debug: arrayLength                    = 174
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9577, 423, 
Debug: bestThreshold[maxSpeedIndex]   = 9577

ir_sort is faster than std::sort 95.77 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015602727304

#####################################################################
Debug: arrayLength                    = 175
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9570, 430, 
Debug: bestThreshold[maxSpeedIndex]   = 9570

ir_sort is faster than std::sort 95.7 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016785591084

#####################################################################
Debug: arrayLength                    = 176
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9631, 369, 
Debug: bestThreshold[maxSpeedIndex]   = 9631

ir_sort is faster than std::sort 96.31 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016000086218

#####################################################################
Debug: arrayLength                    = 177
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9617, 383, 
Debug: bestThreshold[maxSpeedIndex]   = 9617

ir_sort is faster than std::sort 96.17 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015130486029

#####################################################################
Debug: arrayLength                    = 178
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9644, 356, 
Debug: bestThreshold[maxSpeedIndex]   = 9644

ir_sort is faster than std::sort 96.44 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015636776808

#####################################################################
Debug: arrayLength                    = 179
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9622, 378, 
Debug: bestThreshold[maxSpeedIndex]   = 9622

ir_sort is faster than std::sort 96.22 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015482008029

#####################################################################
Debug: arrayLength                    = 180
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9482, 518, 
Debug: bestThreshold[maxSpeedIndex]   = 9482

ir_sort is faster than std::sort 94.82 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014682131418

#####################################################################
Debug: arrayLength                    = 181
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9558, 442, 
Debug: bestThreshold[maxSpeedIndex]   = 9558

ir_sort is faster than std::sort 95.58 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014204382793

#####################################################################
Debug: arrayLength                    = 182
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9538, 462, 
Debug: bestThreshold[maxSpeedIndex]   = 9538

ir_sort is faster than std::sort 95.38 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013749098387

#####################################################################
Debug: arrayLength                    = 183
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9625, 375, 
Debug: bestThreshold[maxSpeedIndex]   = 9625

ir_sort is faster than std::sort 96.25 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015170376386

#####################################################################
Debug: arrayLength                    = 184
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9597, 403, 
Debug: bestThreshold[maxSpeedIndex]   = 9597

ir_sort is faster than std::sort 95.97 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014598501651

#####################################################################
Debug: arrayLength                    = 185
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9572, 428, 
Debug: bestThreshold[maxSpeedIndex]   = 9572

ir_sort is faster than std::sort 95.72 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014686531287

#####################################################################
Debug: arrayLength                    = 186
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9611, 389, 
Debug: bestThreshold[maxSpeedIndex]   = 9611

ir_sort is faster than std::sort 96.11 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014865014815

#####################################################################
Debug: arrayLength                    = 187
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9361, 639, 
Debug: bestThreshold[maxSpeedIndex]   = 9361

ir_sort is faster than std::sort 93.61 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016605821179

#####################################################################
Debug: arrayLength                    = 188
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9639, 361, 
Debug: bestThreshold[maxSpeedIndex]   = 9639

ir_sort is faster than std::sort 96.39 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015637993874

#####################################################################
Debug: arrayLength                    = 189
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9609, 391, 
Debug: bestThreshold[maxSpeedIndex]   = 9609

ir_sort is faster than std::sort 96.09 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01570072883

#####################################################################
Debug: arrayLength                    = 190
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9646, 354, 
Debug: bestThreshold[maxSpeedIndex]   = 9646

ir_sort is faster than std::sort 96.46 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.018862919912

#####################################################################
Debug: arrayLength                    = 191
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9712, 288, 
Debug: bestThreshold[maxSpeedIndex]   = 9712

ir_sort is faster than std::sort 97.12 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.019014733558

#####################################################################
Debug: arrayLength                    = 192
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9684, 316, 
Debug: bestThreshold[maxSpeedIndex]   = 9684

ir_sort is faster than std::sort 96.84 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01837107387

#####################################################################
Debug: arrayLength                    = 193
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9668, 332, 
Debug: bestThreshold[maxSpeedIndex]   = 9668

ir_sort is faster than std::sort 96.68 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017981084555

#####################################################################
Debug: arrayLength                    = 194
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9699, 301, 
Debug: bestThreshold[maxSpeedIndex]   = 9699

ir_sort is faster than std::sort 96.99 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017469875174

#####################################################################
Debug: arrayLength                    = 195
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9655, 345, 
Debug: bestThreshold[maxSpeedIndex]   = 9655

ir_sort is faster than std::sort 96.55 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015976635784

#####################################################################
Debug: arrayLength                    = 196
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9665, 335, 
Debug: bestThreshold[maxSpeedIndex]   = 9665

ir_sort is faster than std::sort 96.65 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016566113426

#####################################################################
Debug: arrayLength                    = 197
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9667, 333, 
Debug: bestThreshold[maxSpeedIndex]   = 9667

ir_sort is faster than std::sort 96.67 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016383846584

#####################################################################
Debug: arrayLength                    = 198
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9684, 316, 
Debug: bestThreshold[maxSpeedIndex]   = 9684

ir_sort is faster than std::sort 96.84 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016033102252

#####################################################################
Debug: arrayLength                    = 199
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9683, 317, 
Debug: bestThreshold[maxSpeedIndex]   = 9683

ir_sort is faster than std::sort 96.83 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01726281115

#####################################################################
Debug: arrayLength                    = 200
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9678, 322, 
Debug: bestThreshold[maxSpeedIndex]   = 9678

ir_sort is faster than std::sort 96.78 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016273061703

#####################################################################
Debug: arrayLength                    = 201
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9662, 338, 
Debug: bestThreshold[maxSpeedIndex]   = 9662

ir_sort is faster than std::sort 96.62 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016284991936

#####################################################################
Debug: arrayLength                    = 202
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9699, 301, 
Debug: bestThreshold[maxSpeedIndex]   = 9699

ir_sort is faster than std::sort 96.99 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016812227805

#####################################################################
Debug: arrayLength                    = 203
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9677, 323, 
Debug: bestThreshold[maxSpeedIndex]   = 9677

ir_sort is faster than std::sort 96.77 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016940857

#####################################################################
Debug: arrayLength                    = 204
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9728, 272, 
Debug: bestThreshold[maxSpeedIndex]   = 9728

ir_sort is faster than std::sort 97.28 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.0183186087

#####################################################################
Debug: arrayLength                    = 205
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9679, 321, 
Debug: bestThreshold[maxSpeedIndex]   = 9679

ir_sort is faster than std::sort 96.79 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017264590901

#####################################################################
Debug: arrayLength                    = 206
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9696, 304, 
Debug: bestThreshold[maxSpeedIndex]   = 9696

ir_sort is faster than std::sort 96.96 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017589324061

#####################################################################
Debug: arrayLength                    = 207
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9509, 491, 
Debug: bestThreshold[maxSpeedIndex]   = 9509

ir_sort is faster than std::sort 95.09 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017049533961

#####################################################################
Debug: arrayLength                    = 208
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9639, 361, 
Debug: bestThreshold[maxSpeedIndex]   = 9639

ir_sort is faster than std::sort 96.39 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.018010642923

#####################################################################
Debug: arrayLength                    = 209
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9662, 338, 
Debug: bestThreshold[maxSpeedIndex]   = 9662

ir_sort is faster than std::sort 96.62 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015652460137

#####################################################################
Debug: arrayLength                    = 210
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9610, 390, 
Debug: bestThreshold[maxSpeedIndex]   = 9610

ir_sort is faster than std::sort 96.1 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014636325316

#####################################################################
Debug: arrayLength                    = 211
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9651, 349, 
Debug: bestThreshold[maxSpeedIndex]   = 9651

ir_sort is faster than std::sort 96.51 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014740918833

#####################################################################
Debug: arrayLength                    = 212
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9641, 359, 
Debug: bestThreshold[maxSpeedIndex]   = 9641

ir_sort is faster than std::sort 96.41 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014621819096

#####################################################################
Debug: arrayLength                    = 213
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9594, 406, 
Debug: bestThreshold[maxSpeedIndex]   = 9594

ir_sort is faster than std::sort 95.94 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014396216862

#####################################################################
Debug: arrayLength                    = 214
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9674, 326, 
Debug: bestThreshold[maxSpeedIndex]   = 9674

ir_sort is faster than std::sort 96.74 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01459960649

#####################################################################
Debug: arrayLength                    = 215
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9625, 375, 
Debug: bestThreshold[maxSpeedIndex]   = 9625

ir_sort is faster than std::sort 96.25 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014416488426

#####################################################################
Debug: arrayLength                    = 216
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9643, 357, 
Debug: bestThreshold[maxSpeedIndex]   = 9643

ir_sort is faster than std::sort 96.43 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013974595758

#####################################################################
Debug: arrayLength                    = 217
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9661, 339, 
Debug: bestThreshold[maxSpeedIndex]   = 9661

ir_sort is faster than std::sort 96.61 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01493256253

#####################################################################
Debug: arrayLength                    = 218
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9616, 384, 
Debug: bestThreshold[maxSpeedIndex]   = 9616

ir_sort is faster than std::sort 96.16 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014068068009

#####################################################################
Debug: arrayLength                    = 219
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9671, 329, 
Debug: bestThreshold[maxSpeedIndex]   = 9671

ir_sort is faster than std::sort 96.71 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014810368154

#####################################################################
Debug: arrayLength                    = 220
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9602, 398, 
Debug: bestThreshold[maxSpeedIndex]   = 9602

ir_sort is faster than std::sort 96.02 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013989654853

#####################################################################
Debug: arrayLength                    = 221
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9671, 329, 
Debug: bestThreshold[maxSpeedIndex]   = 9671

ir_sort is faster than std::sort 96.71 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014416826533

#####################################################################
Debug: arrayLength                    = 222
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9609, 391, 
Debug: bestThreshold[maxSpeedIndex]   = 9609

ir_sort is faster than std::sort 96.09 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013505212284

#####################################################################
Debug: arrayLength                    = 223
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9621, 379, 
Debug: bestThreshold[maxSpeedIndex]   = 9621

ir_sort is faster than std::sort 96.21 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014444704589

#####################################################################
Debug: arrayLength                    = 224
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9647, 353, 
Debug: bestThreshold[maxSpeedIndex]   = 9647

ir_sort is faster than std::sort 96.47 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014194157626

#####################################################################
Debug: arrayLength                    = 225
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9642, 358, 
Debug: bestThreshold[maxSpeedIndex]   = 9642

ir_sort is faster than std::sort 96.42 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014047567061

#####################################################################
Debug: arrayLength                    = 226
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9643, 357, 
Debug: bestThreshold[maxSpeedIndex]   = 9643

ir_sort is faster than std::sort 96.43 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014277936587

#####################################################################
Debug: arrayLength                    = 227
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9352, 648, 
Debug: bestThreshold[maxSpeedIndex]   = 9352

ir_sort is faster than std::sort 93.52 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015177982743

#####################################################################
Debug: arrayLength                    = 228
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9569, 431, 
Debug: bestThreshold[maxSpeedIndex]   = 9569

ir_sort is faster than std::sort 95.69 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014932985249

#####################################################################
Debug: arrayLength                    = 229
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9625, 375, 
Debug: bestThreshold[maxSpeedIndex]   = 9625

ir_sort is faster than std::sort 96.25 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013519018029

#####################################################################
Debug: arrayLength                    = 230
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9610, 390, 
Debug: bestThreshold[maxSpeedIndex]   = 9610

ir_sort is faster than std::sort 96.1 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01352792902

#####################################################################
Debug: arrayLength                    = 231
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9311, 689, 
Debug: bestThreshold[maxSpeedIndex]   = 9311

ir_sort is faster than std::sort 93.11 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010975666373

#####################################################################
Debug: arrayLength                    = 232
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9228, 772, 
Debug: bestThreshold[maxSpeedIndex]   = 9228

ir_sort is faster than std::sort 92.28 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012645002271

#####################################################################
Debug: arrayLength                    = 233
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9382, 618, 
Debug: bestThreshold[maxSpeedIndex]   = 9382

ir_sort is faster than std::sort 93.82 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011948058508

#####################################################################
Debug: arrayLength                    = 234
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9162, 838, 
Debug: bestThreshold[maxSpeedIndex]   = 9162

ir_sort is faster than std::sort 91.62 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011917150153

#####################################################################
Debug: arrayLength                    = 235
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8896, 1104, 
Debug: bestThreshold[maxSpeedIndex]   = 8896

ir_sort is faster than std::sort 88.96 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012365759233

#####################################################################
Debug: arrayLength                    = 236
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9293, 707, 
Debug: bestThreshold[maxSpeedIndex]   = 9293

ir_sort is faster than std::sort 92.93 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012029943537

#####################################################################
Debug: arrayLength                    = 237
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9119, 881, 
Debug: bestThreshold[maxSpeedIndex]   = 9119

ir_sort is faster than std::sort 91.19 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012213353718

#####################################################################
Debug: arrayLength                    = 238
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9500, 500, 
Debug: bestThreshold[maxSpeedIndex]   = 9500

ir_sort is faster than std::sort 95 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011577888865

#####################################################################
Debug: arrayLength                    = 239
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9204, 796, 
Debug: bestThreshold[maxSpeedIndex]   = 9204

ir_sort is faster than std::sort 92.04 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011626375665

#####################################################################
Debug: arrayLength                    = 240
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8839, 1161, 
Debug: bestThreshold[maxSpeedIndex]   = 8839

ir_sort is faster than std::sort 88.39 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013196192133

#####################################################################
Debug: arrayLength                    = 241
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9438, 562, 
Debug: bestThreshold[maxSpeedIndex]   = 9438

ir_sort is faster than std::sort 94.38 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011568212947

#####################################################################
Debug: arrayLength                    = 242
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9468, 532, 
Debug: bestThreshold[maxSpeedIndex]   = 9468

ir_sort is faster than std::sort 94.68 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011903061258

#####################################################################
Debug: arrayLength                    = 243
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9347, 653, 
Debug: bestThreshold[maxSpeedIndex]   = 9347

ir_sort is faster than std::sort 93.47 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012477080984

#####################################################################
Debug: arrayLength                    = 244
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9480, 520, 
Debug: bestThreshold[maxSpeedIndex]   = 9480

ir_sort is faster than std::sort 94.8 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01220871116

#####################################################################
Debug: arrayLength                    = 245
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9409, 591, 
Debug: bestThreshold[maxSpeedIndex]   = 9409

ir_sort is faster than std::sort 94.09 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014027131771

#####################################################################
Debug: arrayLength                    = 246
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9415, 585, 
Debug: bestThreshold[maxSpeedIndex]   = 9415

ir_sort is faster than std::sort 94.15 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013322263509

#####################################################################
Debug: arrayLength                    = 247
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9318, 682, 
Debug: bestThreshold[maxSpeedIndex]   = 9318

ir_sort is faster than std::sort 93.18 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012702242

#####################################################################
Debug: arrayLength                    = 248
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8961, 1039, 
Debug: bestThreshold[maxSpeedIndex]   = 8961

ir_sort is faster than std::sort 89.61 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012470889556

#####################################################################
Debug: arrayLength                    = 249
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9480, 520, 
Debug: bestThreshold[maxSpeedIndex]   = 9480

ir_sort is faster than std::sort 94.8 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013445610747

#####################################################################
Debug: arrayLength                    = 250
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9524, 476, 
Debug: bestThreshold[maxSpeedIndex]   = 9524

ir_sort is faster than std::sort 95.24 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016413965449

#####################################################################
Debug: arrayLength                    = 251
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9398, 602, 
Debug: bestThreshold[maxSpeedIndex]   = 9398

ir_sort is faster than std::sort 93.98 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017071747216

#####################################################################
Debug: arrayLength                    = 252
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9428, 572, 
Debug: bestThreshold[maxSpeedIndex]   = 9428

ir_sort is faster than std::sort 94.28 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017269859576

#####################################################################
Debug: arrayLength                    = 253
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9407, 593, 
Debug: bestThreshold[maxSpeedIndex]   = 9407

ir_sort is faster than std::sort 94.07 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015183744997

#####################################################################
Debug: arrayLength                    = 254
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9339, 661, 
Debug: bestThreshold[maxSpeedIndex]   = 9339

ir_sort is faster than std::sort 93.39 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013885318448

#####################################################################
Debug: arrayLength                    = 255
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9280, 720, 
Debug: bestThreshold[maxSpeedIndex]   = 9280

ir_sort is faster than std::sort 92.8 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013584815625

#####################################################################
Debug: arrayLength                    = 256
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9400, 600, 
Debug: bestThreshold[maxSpeedIndex]   = 9400

ir_sort is faster than std::sort 94 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01382145069

#####################################################################
Debug: arrayLength                    = 257
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9354, 646, 
Debug: bestThreshold[maxSpeedIndex]   = 9354

ir_sort is faster than std::sort 93.54 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01420715989

#####################################################################
Debug: arrayLength                    = 258
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9333, 667, 
Debug: bestThreshold[maxSpeedIndex]   = 9333

ir_sort is faster than std::sort 93.33 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01308901886

#####################################################################
Debug: arrayLength                    = 259
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9345, 655, 
Debug: bestThreshold[maxSpeedIndex]   = 9345

ir_sort is faster than std::sort 93.45 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014262610034

#####################################################################
Debug: arrayLength                    = 260
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9318, 682, 
Debug: bestThreshold[maxSpeedIndex]   = 9318

ir_sort is faster than std::sort 93.18 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013772887415

#####################################################################
Debug: arrayLength                    = 261
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9324, 676, 
Debug: bestThreshold[maxSpeedIndex]   = 9324

ir_sort is faster than std::sort 93.24 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014375247784

#####################################################################
Debug: arrayLength                    = 262
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9223, 777, 
Debug: bestThreshold[maxSpeedIndex]   = 9223

ir_sort is faster than std::sort 92.23 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014457924044

#####################################################################
Debug: arrayLength                    = 263
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9333, 667, 
Debug: bestThreshold[maxSpeedIndex]   = 9333

ir_sort is faster than std::sort 93.33 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01490178801

#####################################################################
Debug: arrayLength                    = 264
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9379, 621, 
Debug: bestThreshold[maxSpeedIndex]   = 9379

ir_sort is faster than std::sort 93.79 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015174639966

#####################################################################
Debug: arrayLength                    = 265
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9274, 726, 
Debug: bestThreshold[maxSpeedIndex]   = 9274

ir_sort is faster than std::sort 92.74 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014835738819

#####################################################################
Debug: arrayLength                    = 266
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9139, 861, 
Debug: bestThreshold[maxSpeedIndex]   = 9139

ir_sort is faster than std::sort 91.39 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014607074665

#####################################################################
Debug: arrayLength                    = 267
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9589, 411, 
Debug: bestThreshold[maxSpeedIndex]   = 9589

ir_sort is faster than std::sort 95.89 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014658419694

#####################################################################
Debug: arrayLength                    = 268
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9186, 814, 
Debug: bestThreshold[maxSpeedIndex]   = 9186

ir_sort is faster than std::sort 91.86 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014146202051

#####################################################################
Debug: arrayLength                    = 269
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8959, 1041, 
Debug: bestThreshold[maxSpeedIndex]   = 8959

ir_sort is faster than std::sort 89.59 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014771593703

#####################################################################
Debug: arrayLength                    = 270
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9424, 576, 
Debug: bestThreshold[maxSpeedIndex]   = 9424

ir_sort is faster than std::sort 94.24 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014099941447

#####################################################################
Debug: arrayLength                    = 271
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9601, 399, 
Debug: bestThreshold[maxSpeedIndex]   = 9601

ir_sort is faster than std::sort 96.01 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014147275213

#####################################################################
Debug: arrayLength                    = 272
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9575, 425, 
Debug: bestThreshold[maxSpeedIndex]   = 9575

ir_sort is faster than std::sort 95.75 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014026754618

#####################################################################
Debug: arrayLength                    = 273
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9640, 360, 
Debug: bestThreshold[maxSpeedIndex]   = 9640

ir_sort is faster than std::sort 96.4 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013990614134

#####################################################################
Debug: arrayLength                    = 274
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9590, 410, 
Debug: bestThreshold[maxSpeedIndex]   = 9590

ir_sort is faster than std::sort 95.9 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013228330861

#####################################################################
Debug: arrayLength                    = 275
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9645, 355, 
Debug: bestThreshold[maxSpeedIndex]   = 9645

ir_sort is faster than std::sort 96.45 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013545783287

#####################################################################
Debug: arrayLength                    = 276
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9529, 471, 
Debug: bestThreshold[maxSpeedIndex]   = 9529

ir_sort is faster than std::sort 95.29 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013723116519

#####################################################################
Debug: arrayLength                    = 277
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9596, 404, 
Debug: bestThreshold[maxSpeedIndex]   = 9596

ir_sort is faster than std::sort 95.96 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013125066418

#####################################################################
Debug: arrayLength                    = 278
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9616, 384, 
Debug: bestThreshold[maxSpeedIndex]   = 9616

ir_sort is faster than std::sort 96.16 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01305879896

#####################################################################
Debug: arrayLength                    = 279
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9611, 389, 
Debug: bestThreshold[maxSpeedIndex]   = 9611

ir_sort is faster than std::sort 96.11 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012200585217

#####################################################################
Debug: arrayLength                    = 280
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9616, 384, 
Debug: bestThreshold[maxSpeedIndex]   = 9616

ir_sort is faster than std::sort 96.16 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012807594266

#####################################################################
Debug: arrayLength                    = 281
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9625, 375, 
Debug: bestThreshold[maxSpeedIndex]   = 9625

ir_sort is faster than std::sort 96.25 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012560326851

#####################################################################
Debug: arrayLength                    = 282
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9634, 366, 
Debug: bestThreshold[maxSpeedIndex]   = 9634

ir_sort is faster than std::sort 96.34 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012333169865

#####################################################################
Debug: arrayLength                    = 283
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9649, 351, 
Debug: bestThreshold[maxSpeedIndex]   = 9649

ir_sort is faster than std::sort 96.49 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012587295431

#####################################################################
Debug: arrayLength                    = 284
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9599, 401, 
Debug: bestThreshold[maxSpeedIndex]   = 9599

ir_sort is faster than std::sort 95.99 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012288919359

#####################################################################
Debug: arrayLength                    = 285
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9610, 390, 
Debug: bestThreshold[maxSpeedIndex]   = 9610

ir_sort is faster than std::sort 96.1 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012739306495

#####################################################################
Debug: arrayLength                    = 286
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9645, 355, 
Debug: bestThreshold[maxSpeedIndex]   = 9645

ir_sort is faster than std::sort 96.45 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013815542222

#####################################################################
Debug: arrayLength                    = 287
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9626, 374, 
Debug: bestThreshold[maxSpeedIndex]   = 9626

ir_sort is faster than std::sort 96.26 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013708387188

#####################################################################
Debug: arrayLength                    = 288
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9586, 414, 
Debug: bestThreshold[maxSpeedIndex]   = 9586

ir_sort is faster than std::sort 95.86 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013050446342

#####################################################################
Debug: arrayLength                    = 289
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9393, 607, 
Debug: bestThreshold[maxSpeedIndex]   = 9393

ir_sort is faster than std::sort 93.93 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013455857487

#####################################################################
Debug: arrayLength                    = 290
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9621, 379, 
Debug: bestThreshold[maxSpeedIndex]   = 9621

ir_sort is faster than std::sort 96.21 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013012719672

#####################################################################
Debug: arrayLength                    = 291
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9629, 371, 
Debug: bestThreshold[maxSpeedIndex]   = 9629

ir_sort is faster than std::sort 96.29 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016242441089

#####################################################################
Debug: arrayLength                    = 292
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9604, 396, 
Debug: bestThreshold[maxSpeedIndex]   = 9604

ir_sort is faster than std::sort 96.04 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015244783497

#####################################################################
Debug: arrayLength                    = 293
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9633, 367, 
Debug: bestThreshold[maxSpeedIndex]   = 9633

ir_sort is faster than std::sort 96.33 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01485142057

#####################################################################
Debug: arrayLength                    = 294
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9621, 379, 
Debug: bestThreshold[maxSpeedIndex]   = 9621

ir_sort is faster than std::sort 96.21 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014515466568

#####################################################################
Debug: arrayLength                    = 295
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9620, 380, 
Debug: bestThreshold[maxSpeedIndex]   = 9620

ir_sort is faster than std::sort 96.2 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01408482631

#####################################################################
Debug: arrayLength                    = 296
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9344, 656, 
Debug: bestThreshold[maxSpeedIndex]   = 9344

ir_sort is faster than std::sort 93.44 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008833084373

#####################################################################
Debug: arrayLength                    = 297
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9375, 625, 
Debug: bestThreshold[maxSpeedIndex]   = 9375

ir_sort is faster than std::sort 93.75 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009756669297

#####################################################################
Debug: arrayLength                    = 298
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9439, 561, 
Debug: bestThreshold[maxSpeedIndex]   = 9439

ir_sort is faster than std::sort 94.39 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009619561053

#####################################################################
Debug: arrayLength                    = 299
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9468, 532, 
Debug: bestThreshold[maxSpeedIndex]   = 9468

ir_sort is faster than std::sort 94.68 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01042194396

#####################################################################
Debug: arrayLength                    = 300
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9488, 512, 
Debug: bestThreshold[maxSpeedIndex]   = 9488

ir_sort is faster than std::sort 94.88 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010005500478

#####################################################################
Debug: arrayLength                    = 301
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9467, 533, 
Debug: bestThreshold[maxSpeedIndex]   = 9467

ir_sort is faster than std::sort 94.67 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010606595645

#####################################################################
Debug: arrayLength                    = 302
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9496, 504, 
Debug: bestThreshold[maxSpeedIndex]   = 9496

ir_sort is faster than std::sort 94.96 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010873710514

#####################################################################
Debug: arrayLength                    = 303
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9535, 465, 
Debug: bestThreshold[maxSpeedIndex]   = 9535

ir_sort is faster than std::sort 95.35 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01163720522

#####################################################################
Debug: arrayLength                    = 304
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9504, 496, 
Debug: bestThreshold[maxSpeedIndex]   = 9504

ir_sort is faster than std::sort 95.04 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011344984097

#####################################################################
Debug: arrayLength                    = 305
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9508, 492, 
Debug: bestThreshold[maxSpeedIndex]   = 9508

ir_sort is faster than std::sort 95.08 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010743433986

#####################################################################
Debug: arrayLength                    = 306
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9543, 457, 
Debug: bestThreshold[maxSpeedIndex]   = 9543

ir_sort is faster than std::sort 95.43 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010807314363

#####################################################################
Debug: arrayLength                    = 307
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9516, 484, 
Debug: bestThreshold[maxSpeedIndex]   = 9516

ir_sort is faster than std::sort 95.16 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011100929374

#####################################################################
Debug: arrayLength                    = 308
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9488, 512, 
Debug: bestThreshold[maxSpeedIndex]   = 9488

ir_sort is faster than std::sort 94.88 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011697065749

#####################################################################
Debug: arrayLength                    = 309
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9228, 772, 
Debug: bestThreshold[maxSpeedIndex]   = 9228

ir_sort is faster than std::sort 92.28 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012139241606

#####################################################################
Debug: arrayLength                    = 310
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9521, 479, 
Debug: bestThreshold[maxSpeedIndex]   = 9521

ir_sort is faster than std::sort 95.21 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010878109852

#####################################################################
Debug: arrayLength                    = 311
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9568, 432, 
Debug: bestThreshold[maxSpeedIndex]   = 9568

ir_sort is faster than std::sort 95.68 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010956479783

#####################################################################
Debug: arrayLength                    = 312
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9547, 453, 
Debug: bestThreshold[maxSpeedIndex]   = 9547

ir_sort is faster than std::sort 95.47 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010971715917

#####################################################################
Debug: arrayLength                    = 313
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9527, 473, 
Debug: bestThreshold[maxSpeedIndex]   = 9527

ir_sort is faster than std::sort 95.27 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010770880259

#####################################################################
Debug: arrayLength                    = 314
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9519, 481, 
Debug: bestThreshold[maxSpeedIndex]   = 9519

ir_sort is faster than std::sort 95.19 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010439611648

#####################################################################
Debug: arrayLength                    = 315
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9558, 442, 
Debug: bestThreshold[maxSpeedIndex]   = 9558

ir_sort is faster than std::sort 95.58 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01162398149

#####################################################################
Debug: arrayLength                    = 316
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9571, 429, 
Debug: bestThreshold[maxSpeedIndex]   = 9571

ir_sort is faster than std::sort 95.71 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011532508754

#####################################################################
Debug: arrayLength                    = 317
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9583, 417, 
Debug: bestThreshold[maxSpeedIndex]   = 9583

ir_sort is faster than std::sort 95.83 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011282876379

#####################################################################
Debug: arrayLength                    = 318
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9551, 449, 
Debug: bestThreshold[maxSpeedIndex]   = 9551

ir_sort is faster than std::sort 95.51 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010983691836

#####################################################################
Debug: arrayLength                    = 319
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9550, 450, 
Debug: bestThreshold[maxSpeedIndex]   = 9550

ir_sort is faster than std::sort 95.5 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010776082738

#####################################################################
Debug: arrayLength                    = 320
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9534, 466, 
Debug: bestThreshold[maxSpeedIndex]   = 9534

ir_sort is faster than std::sort 95.34 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010939890561

#####################################################################
Debug: arrayLength                    = 321
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9518, 482, 
Debug: bestThreshold[maxSpeedIndex]   = 9518

ir_sort is faster than std::sort 95.18 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011461883543

#####################################################################
Debug: arrayLength                    = 322
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9579, 421, 
Debug: bestThreshold[maxSpeedIndex]   = 9579

ir_sort is faster than std::sort 95.79 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011799898444

#####################################################################
Debug: arrayLength                    = 323
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9559, 441, 
Debug: bestThreshold[maxSpeedIndex]   = 9559

ir_sort is faster than std::sort 95.59 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011167204789

#####################################################################
Debug: arrayLength                    = 324
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9579, 421, 
Debug: bestThreshold[maxSpeedIndex]   = 9579

ir_sort is faster than std::sort 95.79 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011648579756

#####################################################################
Debug: arrayLength                    = 325
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9601, 399, 
Debug: bestThreshold[maxSpeedIndex]   = 9601

ir_sort is faster than std::sort 96.01 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012470966472

#####################################################################
Debug: arrayLength                    = 326
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9566, 434, 
Debug: bestThreshold[maxSpeedIndex]   = 9566

ir_sort is faster than std::sort 95.66 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012674144447

#####################################################################
Debug: arrayLength                    = 327
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9598, 402, 
Debug: bestThreshold[maxSpeedIndex]   = 9598

ir_sort is faster than std::sort 95.98 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014092355052

#####################################################################
Debug: arrayLength                    = 328
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9564, 436, 
Debug: bestThreshold[maxSpeedIndex]   = 9564

ir_sort is faster than std::sort 95.64 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013816684188

#####################################################################
Debug: arrayLength                    = 329
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9475, 525, 
Debug: bestThreshold[maxSpeedIndex]   = 9475

ir_sort is faster than std::sort 94.75 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013657141766

#####################################################################
Debug: arrayLength                    = 330
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9493, 507, 
Debug: bestThreshold[maxSpeedIndex]   = 9493

ir_sort is faster than std::sort 94.93 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014543027517

#####################################################################
Debug: arrayLength                    = 331
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9532, 468, 
Debug: bestThreshold[maxSpeedIndex]   = 9532

ir_sort is faster than std::sort 95.32 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01491882327

#####################################################################
Debug: arrayLength                    = 332
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9571, 429, 
Debug: bestThreshold[maxSpeedIndex]   = 9571

ir_sort is faster than std::sort 95.71 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016414137308

#####################################################################
Debug: arrayLength                    = 333
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9565, 435, 
Debug: bestThreshold[maxSpeedIndex]   = 9565

ir_sort is faster than std::sort 95.65 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016470115648

#####################################################################
Debug: arrayLength                    = 334
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9583, 417, 
Debug: bestThreshold[maxSpeedIndex]   = 9583

ir_sort is faster than std::sort 95.83 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016080373412

#####################################################################
Debug: arrayLength                    = 335
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9581, 419, 
Debug: bestThreshold[maxSpeedIndex]   = 9581

ir_sort is faster than std::sort 95.81 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01463697978

#####################################################################
Debug: arrayLength                    = 336
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9519, 481, 
Debug: bestThreshold[maxSpeedIndex]   = 9519

ir_sort is faster than std::sort 95.19 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014252186874

#####################################################################
Debug: arrayLength                    = 337
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9594, 406, 
Debug: bestThreshold[maxSpeedIndex]   = 9594

ir_sort is faster than std::sort 95.94 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014409010278

#####################################################################
Debug: arrayLength                    = 338
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9544, 456, 
Debug: bestThreshold[maxSpeedIndex]   = 9544

ir_sort is faster than std::sort 95.44 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012799433686

#####################################################################
Debug: arrayLength                    = 339
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9580, 420, 
Debug: bestThreshold[maxSpeedIndex]   = 9580

ir_sort is faster than std::sort 95.8 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012440032881

#####################################################################
Debug: arrayLength                    = 340
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9587, 413, 
Debug: bestThreshold[maxSpeedIndex]   = 9587

ir_sort is faster than std::sort 95.87 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012855416865

#####################################################################
Debug: arrayLength                    = 341
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9562, 438, 
Debug: bestThreshold[maxSpeedIndex]   = 9562

ir_sort is faster than std::sort 95.62 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012965973252

#####################################################################
Debug: arrayLength                    = 342
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9545, 455, 
Debug: bestThreshold[maxSpeedIndex]   = 9545

ir_sort is faster than std::sort 95.45 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012743101985

#####################################################################
Debug: arrayLength                    = 343
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9585, 415, 
Debug: bestThreshold[maxSpeedIndex]   = 9585

ir_sort is faster than std::sort 95.85 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013358001815

#####################################################################
Debug: arrayLength                    = 344
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9537, 463, 
Debug: bestThreshold[maxSpeedIndex]   = 9537

ir_sort is faster than std::sort 95.37 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013071009088

#####################################################################
Debug: arrayLength                    = 345
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9573, 427, 
Debug: bestThreshold[maxSpeedIndex]   = 9573

ir_sort is faster than std::sort 95.73 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013540607271

#####################################################################
Debug: arrayLength                    = 346
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9584, 416, 
Debug: bestThreshold[maxSpeedIndex]   = 9584

ir_sort is faster than std::sort 95.84 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013508813338

#####################################################################
Debug: arrayLength                    = 347
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9549, 451, 
Debug: bestThreshold[maxSpeedIndex]   = 9549

ir_sort is faster than std::sort 95.49 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013241096223

#####################################################################
Debug: arrayLength                    = 348
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9542, 458, 
Debug: bestThreshold[maxSpeedIndex]   = 9542

ir_sort is faster than std::sort 95.42 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013581335238

#####################################################################
Debug: arrayLength                    = 349
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9373, 627, 
Debug: bestThreshold[maxSpeedIndex]   = 9373

ir_sort is faster than std::sort 93.73 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013559614747

#####################################################################
Debug: arrayLength                    = 350
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9476, 524, 
Debug: bestThreshold[maxSpeedIndex]   = 9476

ir_sort is faster than std::sort 94.76 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013943281119

#####################################################################
Debug: arrayLength                    = 351
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9535, 465, 
Debug: bestThreshold[maxSpeedIndex]   = 9535

ir_sort is faster than std::sort 95.35 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013708697066

#####################################################################
Debug: arrayLength                    = 352
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9571, 429, 
Debug: bestThreshold[maxSpeedIndex]   = 9571

ir_sort is faster than std::sort 95.71 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013374069711

#####################################################################
Debug: arrayLength                    = 353
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9529, 471, 
Debug: bestThreshold[maxSpeedIndex]   = 9529

ir_sort is faster than std::sort 95.29 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012884937238

#####################################################################
Debug: arrayLength                    = 354
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9550, 450, 
Debug: bestThreshold[maxSpeedIndex]   = 9550

ir_sort is faster than std::sort 95.5 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012981848649

#####################################################################
Debug: arrayLength                    = 355
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9521, 479, 
Debug: bestThreshold[maxSpeedIndex]   = 9521

ir_sort is faster than std::sort 95.21 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012141651656

#####################################################################
Debug: arrayLength                    = 356
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9535, 465, 
Debug: bestThreshold[maxSpeedIndex]   = 9535

ir_sort is faster than std::sort 95.35 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012854027078

#####################################################################
Debug: arrayLength                    = 357
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9458, 542, 
Debug: bestThreshold[maxSpeedIndex]   = 9458

ir_sort is faster than std::sort 94.58 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012024862306

#####################################################################
Debug: arrayLength                    = 358
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9529, 471, 
Debug: bestThreshold[maxSpeedIndex]   = 9529

ir_sort is faster than std::sort 95.29 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012554037036

#####################################################################
Debug: arrayLength                    = 359
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9411, 589, 
Debug: bestThreshold[maxSpeedIndex]   = 9411

ir_sort is faster than std::sort 94.11 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010464368288

#####################################################################
Debug: arrayLength                    = 360
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9505, 495, 
Debug: bestThreshold[maxSpeedIndex]   = 9505

ir_sort is faster than std::sort 95.05 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01041172854

#####################################################################
Debug: arrayLength                    = 361
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9494, 506, 
Debug: bestThreshold[maxSpeedIndex]   = 9494

ir_sort is faster than std::sort 94.94 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010383197008

#####################################################################
Debug: arrayLength                    = 362
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9517, 483, 
Debug: bestThreshold[maxSpeedIndex]   = 9517

ir_sort is faster than std::sort 95.17 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010745885364

#####################################################################
Debug: arrayLength                    = 363
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9520, 480, 
Debug: bestThreshold[maxSpeedIndex]   = 9520

ir_sort is faster than std::sort 95.2 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009948683784

#####################################################################
Debug: arrayLength                    = 364
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9492, 508, 
Debug: bestThreshold[maxSpeedIndex]   = 9492

ir_sort is faster than std::sort 94.92 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01046634096

#####################################################################
Debug: arrayLength                    = 365
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9524, 476, 
Debug: bestThreshold[maxSpeedIndex]   = 9524

ir_sort is faster than std::sort 95.24 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010586936191

#####################################################################
Debug: arrayLength                    = 366
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9527, 473, 
Debug: bestThreshold[maxSpeedIndex]   = 9527

ir_sort is faster than std::sort 95.27 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010742777901

#####################################################################
Debug: arrayLength                    = 367
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9571, 429, 
Debug: bestThreshold[maxSpeedIndex]   = 9571

ir_sort is faster than std::sort 95.71 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011560993235

#####################################################################
Debug: arrayLength                    = 368
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9543, 457, 
Debug: bestThreshold[maxSpeedIndex]   = 9543

ir_sort is faster than std::sort 95.43 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012175655579

#####################################################################
Debug: arrayLength                    = 369
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9505, 495, 
Debug: bestThreshold[maxSpeedIndex]   = 9505

ir_sort is faster than std::sort 95.05 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011260191434

#####################################################################
Debug: arrayLength                    = 370
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9399, 601, 
Debug: bestThreshold[maxSpeedIndex]   = 9399

ir_sort is faster than std::sort 93.99 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012314057563

#####################################################################
Debug: arrayLength                    = 371
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9509, 491, 
Debug: bestThreshold[maxSpeedIndex]   = 9509

ir_sort is faster than std::sort 95.09 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012183528451

#####################################################################
Debug: arrayLength                    = 372
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9497, 503, 
Debug: bestThreshold[maxSpeedIndex]   = 9497

ir_sort is faster than std::sort 94.97 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011535516334

#####################################################################
Debug: arrayLength                    = 373
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9513, 487, 
Debug: bestThreshold[maxSpeedIndex]   = 9513

ir_sort is faster than std::sort 95.13 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013013967136

#####################################################################
Debug: arrayLength                    = 374
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9532, 468, 
Debug: bestThreshold[maxSpeedIndex]   = 9532

ir_sort is faster than std::sort 95.32 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012605014231

#####################################################################
Debug: arrayLength                    = 375
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9544, 456, 
Debug: bestThreshold[maxSpeedIndex]   = 9544

ir_sort is faster than std::sort 95.44 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012337731781

#####################################################################
Debug: arrayLength                    = 376
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9547, 453, 
Debug: bestThreshold[maxSpeedIndex]   = 9547

ir_sort is faster than std::sort 95.47 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012710142288

#####################################################################
Debug: arrayLength                    = 377
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9552, 448, 
Debug: bestThreshold[maxSpeedIndex]   = 9552

ir_sort is faster than std::sort 95.52 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012208001943

#####################################################################
Debug: arrayLength                    = 378
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9553, 447, 
Debug: bestThreshold[maxSpeedIndex]   = 9553

ir_sort is faster than std::sort 95.53 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014241458229

#####################################################################
Debug: arrayLength                    = 379
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9536, 464, 
Debug: bestThreshold[maxSpeedIndex]   = 9536

ir_sort is faster than std::sort 95.36 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013242478872

#####################################################################
Debug: arrayLength                    = 380
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9553, 447, 
Debug: bestThreshold[maxSpeedIndex]   = 9553

ir_sort is faster than std::sort 95.53 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013917369948

#####################################################################
Debug: arrayLength                    = 381
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9531, 469, 
Debug: bestThreshold[maxSpeedIndex]   = 9531

ir_sort is faster than std::sort 95.31 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013193034941

#####################################################################
Debug: arrayLength                    = 382
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9528, 472, 
Debug: bestThreshold[maxSpeedIndex]   = 9528

ir_sort is faster than std::sort 95.28 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012847911245

#####################################################################
Debug: arrayLength                    = 383
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9542, 458, 
Debug: bestThreshold[maxSpeedIndex]   = 9542

ir_sort is faster than std::sort 95.42 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012000586377

#####################################################################
Debug: arrayLength                    = 384
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9534, 466, 
Debug: bestThreshold[maxSpeedIndex]   = 9534

ir_sort is faster than std::sort 95.34 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012241924368

#####################################################################
Debug: arrayLength                    = 385
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9503, 497, 
Debug: bestThreshold[maxSpeedIndex]   = 9503

ir_sort is faster than std::sort 95.03 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012179144327

#####################################################################
Debug: arrayLength                    = 386
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9490, 510, 
Debug: bestThreshold[maxSpeedIndex]   = 9490

ir_sort is faster than std::sort 94.9 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011110860753

#####################################################################
Debug: arrayLength                    = 387
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9539, 461, 
Debug: bestThreshold[maxSpeedIndex]   = 9539

ir_sort is faster than std::sort 95.39 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011760899516

#####################################################################
Debug: arrayLength                    = 388
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9491, 509, 
Debug: bestThreshold[maxSpeedIndex]   = 9491

ir_sort is faster than std::sort 94.91 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01118865492

#####################################################################
Debug: arrayLength                    = 389
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9545, 455, 
Debug: bestThreshold[maxSpeedIndex]   = 9545

ir_sort is faster than std::sort 95.45 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011474933547

#####################################################################
Debug: arrayLength                    = 390
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9279, 721, 
Debug: bestThreshold[maxSpeedIndex]   = 9279

ir_sort is faster than std::sort 92.79 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011487568105

#####################################################################
Debug: arrayLength                    = 391
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9496, 504, 
Debug: bestThreshold[maxSpeedIndex]   = 9496

ir_sort is faster than std::sort 94.96 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011456038816

#####################################################################
Debug: arrayLength                    = 392
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9496, 504, 
Debug: bestThreshold[maxSpeedIndex]   = 9496

ir_sort is faster than std::sort 94.96 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010733128031

#####################################################################
Debug: arrayLength                    = 393
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9528, 472, 
Debug: bestThreshold[maxSpeedIndex]   = 9528

ir_sort is faster than std::sort 95.28 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01074698377

#####################################################################
Debug: arrayLength                    = 394
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9494, 506, 
Debug: bestThreshold[maxSpeedIndex]   = 9494

ir_sort is faster than std::sort 94.94 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010176218649

#####################################################################
Debug: arrayLength                    = 395
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9504, 496, 
Debug: bestThreshold[maxSpeedIndex]   = 9504

ir_sort is faster than std::sort 95.04 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010570716145

#####################################################################
Debug: arrayLength                    = 396
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9503, 497, 
Debug: bestThreshold[maxSpeedIndex]   = 9503

ir_sort is faster than std::sort 95.03 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00922193713

#####################################################################
Debug: arrayLength                    = 397
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9500, 500, 
Debug: bestThreshold[maxSpeedIndex]   = 9500

ir_sort is faster than std::sort 95 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009944644447

#####################################################################
Debug: arrayLength                    = 398
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9475, 525, 
Debug: bestThreshold[maxSpeedIndex]   = 9475

ir_sort is faster than std::sort 94.75 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008956493384

#####################################################################
Debug: arrayLength                    = 399
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9477, 523, 
Debug: bestThreshold[maxSpeedIndex]   = 9477

ir_sort is faster than std::sort 94.77 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009370450019

#####################################################################
Debug: arrayLength                    = 400
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9475, 525, 
Debug: bestThreshold[maxSpeedIndex]   = 9475

ir_sort is faster than std::sort 94.75 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009561768009

#####################################################################
Debug: arrayLength                    = 401
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9463, 537, 
Debug: bestThreshold[maxSpeedIndex]   = 9463

ir_sort is faster than std::sort 94.63 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009096772698

#####################################################################
Debug: arrayLength                    = 402
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9476, 524, 
Debug: bestThreshold[maxSpeedIndex]   = 9476

ir_sort is faster than std::sort 94.76 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008842985785

#####################################################################
Debug: arrayLength                    = 403
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9473, 527, 
Debug: bestThreshold[maxSpeedIndex]   = 9473

ir_sort is faster than std::sort 94.73 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008741299045

#####################################################################
Debug: arrayLength                    = 404
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9464, 536, 
Debug: bestThreshold[maxSpeedIndex]   = 9464

ir_sort is faster than std::sort 94.64 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008658777753

#####################################################################
Debug: arrayLength                    = 405
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9375, 625, 
Debug: bestThreshold[maxSpeedIndex]   = 9375

ir_sort is faster than std::sort 93.75 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007966318138

#####################################################################
Debug: arrayLength                    = 406
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9409, 591, 
Debug: bestThreshold[maxSpeedIndex]   = 9409

ir_sort is faster than std::sort 94.09 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008229004969

#####################################################################
Debug: arrayLength                    = 407
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9170, 830, 
Debug: bestThreshold[maxSpeedIndex]   = 9170

ir_sort is faster than std::sort 91.7 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006635889816

#####################################################################
Debug: arrayLength                    = 408
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9247, 753, 
Debug: bestThreshold[maxSpeedIndex]   = 9247

ir_sort is faster than std::sort 92.47 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00683456562

#####################################################################
Debug: arrayLength                    = 409
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9276, 724, 
Debug: bestThreshold[maxSpeedIndex]   = 9276

ir_sort is faster than std::sort 92.76 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00702913618

#####################################################################
Debug: arrayLength                    = 410
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9128, 872, 
Debug: bestThreshold[maxSpeedIndex]   = 9128

ir_sort is faster than std::sort 91.28 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006308225442

#####################################################################
Debug: arrayLength                    = 411
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8873, 1127, 
Debug: bestThreshold[maxSpeedIndex]   = 8873

ir_sort is faster than std::sort 88.73 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006787450488

#####################################################################
Debug: arrayLength                    = 412
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9128, 872, 
Debug: bestThreshold[maxSpeedIndex]   = 9128

ir_sort is faster than std::sort 91.28 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006949116085

#####################################################################
Debug: arrayLength                    = 413
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9234, 766, 
Debug: bestThreshold[maxSpeedIndex]   = 9234

ir_sort is faster than std::sort 92.34 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006974762218

#####################################################################
Debug: arrayLength                    = 414
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9297, 703, 
Debug: bestThreshold[maxSpeedIndex]   = 9297

ir_sort is faster than std::sort 92.97 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007275516417

#####################################################################
Debug: arrayLength                    = 415
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9310, 690, 
Debug: bestThreshold[maxSpeedIndex]   = 9310

ir_sort is faster than std::sort 93.1 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007588762047

#####################################################################
Debug: arrayLength                    = 416
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9290, 710, 
Debug: bestThreshold[maxSpeedIndex]   = 9290

ir_sort is faster than std::sort 92.9 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007240253795

#####################################################################
Debug: arrayLength                    = 417
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9322, 678, 
Debug: bestThreshold[maxSpeedIndex]   = 9322

ir_sort is faster than std::sort 93.22 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006911144411

#####################################################################
Debug: arrayLength                    = 418
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9307, 693, 
Debug: bestThreshold[maxSpeedIndex]   = 9307

ir_sort is faster than std::sort 93.07 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00772309779

#####################################################################
Debug: arrayLength                    = 419
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9485, 515, 
Debug: bestThreshold[maxSpeedIndex]   = 9485

ir_sort is faster than std::sort 94.85 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009968964473

#####################################################################
Debug: arrayLength                    = 420
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9441, 559, 
Debug: bestThreshold[maxSpeedIndex]   = 9441

ir_sort is faster than std::sort 94.41 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009494029053

#####################################################################
Debug: arrayLength                    = 421
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9446, 554, 
Debug: bestThreshold[maxSpeedIndex]   = 9446

ir_sort is faster than std::sort 94.46 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008820152129

#####################################################################
Debug: arrayLength                    = 422
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9411, 589, 
Debug: bestThreshold[maxSpeedIndex]   = 9411

ir_sort is faster than std::sort 94.11 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008548431274

#####################################################################
Debug: arrayLength                    = 423
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9396, 604, 
Debug: bestThreshold[maxSpeedIndex]   = 9396

ir_sort is faster than std::sort 93.96 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008646800554

#####################################################################
Debug: arrayLength                    = 424
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7875, 2125, 
Debug: bestThreshold[maxSpeedIndex]   = 7875

ir_sort is faster than std::sort 78.75 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004340860346

#####################################################################
Debug: arrayLength                    = 425
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8499, 1501, 
Debug: bestThreshold[maxSpeedIndex]   = 8499

ir_sort is faster than std::sort 84.99 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00478647096

#####################################################################
Debug: arrayLength                    = 426
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8492, 1508, 
Debug: bestThreshold[maxSpeedIndex]   = 8492

ir_sort is faster than std::sort 84.92 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005148058852

#####################################################################
Debug: arrayLength                    = 427
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8674, 1326, 
Debug: bestThreshold[maxSpeedIndex]   = 8674

ir_sort is faster than std::sort 86.74 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005489321425

#####################################################################
Debug: arrayLength                    = 428
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8707, 1293, 
Debug: bestThreshold[maxSpeedIndex]   = 8707

ir_sort is faster than std::sort 87.07 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005632989709

#####################################################################
Debug: arrayLength                    = 429
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8794, 1206, 
Debug: bestThreshold[maxSpeedIndex]   = 8794

ir_sort is faster than std::sort 87.94 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00546921472

#####################################################################
Debug: arrayLength                    = 430
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8811, 1189, 
Debug: bestThreshold[maxSpeedIndex]   = 8811

ir_sort is faster than std::sort 88.11 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005672627011

#####################################################################
Debug: arrayLength                    = 431
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8595, 1405, 
Debug: bestThreshold[maxSpeedIndex]   = 8595

ir_sort is faster than std::sort 85.95 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00645943455

#####################################################################
Debug: arrayLength                    = 432
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8800, 1200, 
Debug: bestThreshold[maxSpeedIndex]   = 8800

ir_sort is faster than std::sort 88 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005724544708

#####################################################################
Debug: arrayLength                    = 433
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8766, 1234, 
Debug: bestThreshold[maxSpeedIndex]   = 8766

ir_sort is faster than std::sort 87.66 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005755761146

#####################################################################
Debug: arrayLength                    = 434
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8689, 1311, 
Debug: bestThreshold[maxSpeedIndex]   = 8689

ir_sort is faster than std::sort 86.89 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005458054288

#####################################################################
Debug: arrayLength                    = 435
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8837, 1163, 
Debug: bestThreshold[maxSpeedIndex]   = 8837

ir_sort is faster than std::sort 88.37 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005624228862

#####################################################################
Debug: arrayLength                    = 436
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8935, 1065, 
Debug: bestThreshold[maxSpeedIndex]   = 8935

ir_sort is faster than std::sort 89.35 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005595672157

#####################################################################
Debug: arrayLength                    = 437
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8671, 1329, 
Debug: bestThreshold[maxSpeedIndex]   = 8671

ir_sort is faster than std::sort 86.71 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004961366859

#####################################################################
Debug: arrayLength                    = 438
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8715, 1285, 
Debug: bestThreshold[maxSpeedIndex]   = 8715

ir_sort is faster than std::sort 87.15 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005445217437

#####################################################################
Debug: arrayLength                    = 439
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8823, 1177, 
Debug: bestThreshold[maxSpeedIndex]   = 8823

ir_sort is faster than std::sort 88.23 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00483180199

#####################################################################
Debug: arrayLength                    = 440
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8829, 1171, 
Debug: bestThreshold[maxSpeedIndex]   = 8829

ir_sort is faster than std::sort 88.29 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005496365147

#####################################################################
Debug: arrayLength                    = 441
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8828, 1172, 
Debug: bestThreshold[maxSpeedIndex]   = 8828

ir_sort is faster than std::sort 88.28 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005609074015

#####################################################################
Debug: arrayLength                    = 442
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8700, 1300, 
Debug: bestThreshold[maxSpeedIndex]   = 8700

ir_sort is faster than std::sort 87 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005194671474

#####################################################################
Debug: arrayLength                    = 443
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8803, 1197, 
Debug: bestThreshold[maxSpeedIndex]   = 8803

ir_sort is faster than std::sort 88.03 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005145694438

#####################################################################
Debug: arrayLength                    = 444
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8776, 1224, 
Debug: bestThreshold[maxSpeedIndex]   = 8776

ir_sort is faster than std::sort 87.76 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00518070872

#####################################################################
Debug: arrayLength                    = 445
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8873, 1127, 
Debug: bestThreshold[maxSpeedIndex]   = 8873

ir_sort is faster than std::sort 88.73 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005514548652

#####################################################################
Debug: arrayLength                    = 446
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8738, 1262, 
Debug: bestThreshold[maxSpeedIndex]   = 8738

ir_sort is faster than std::sort 87.38 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005067916354

#####################################################################
Debug: arrayLength                    = 447
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8801, 1199, 
Debug: bestThreshold[maxSpeedIndex]   = 8801

ir_sort is faster than std::sort 88.01 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005847794065

#####################################################################
Debug: arrayLength                    = 448
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8783, 1217, 
Debug: bestThreshold[maxSpeedIndex]   = 8783

ir_sort is faster than std::sort 87.83 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005040059898

#####################################################################
Debug: arrayLength                    = 449
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8915, 1085, 
Debug: bestThreshold[maxSpeedIndex]   = 8915

ir_sort is faster than std::sort 89.15 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005366713793

#####################################################################
Debug: arrayLength                    = 450
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8927, 1073, 
Debug: bestThreshold[maxSpeedIndex]   = 8927

ir_sort is faster than std::sort 89.27 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00582303095

#####################################################################
Debug: arrayLength                    = 451
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8751, 1249, 
Debug: bestThreshold[maxSpeedIndex]   = 8751

ir_sort is faster than std::sort 87.51 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004989403024

#####################################################################
Debug: arrayLength                    = 452
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8554, 1446, 
Debug: bestThreshold[maxSpeedIndex]   = 8554

ir_sort is faster than std::sort 85.54 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004993468495

#####################################################################
Debug: arrayLength                    = 453
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8795, 1205, 
Debug: bestThreshold[maxSpeedIndex]   = 8795

ir_sort is faster than std::sort 87.95 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005779615539

#####################################################################
Debug: arrayLength                    = 454
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8734, 1266, 
Debug: bestThreshold[maxSpeedIndex]   = 8734

ir_sort is faster than std::sort 87.34 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005251179612

#####################################################################
Debug: arrayLength                    = 455
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9029, 971, 
Debug: bestThreshold[maxSpeedIndex]   = 9029

ir_sort is faster than std::sort 90.29 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005913852733

#####################################################################
Debug: arrayLength                    = 456
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8854, 1146, 
Debug: bestThreshold[maxSpeedIndex]   = 8854

ir_sort is faster than std::sort 88.54 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005354373776

#####################################################################
Debug: arrayLength                    = 457
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8940, 1060, 
Debug: bestThreshold[maxSpeedIndex]   = 8940

ir_sort is faster than std::sort 89.4 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00615439508

#####################################################################
Debug: arrayLength                    = 458
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8899, 1101, 
Debug: bestThreshold[maxSpeedIndex]   = 8899

ir_sort is faster than std::sort 88.99 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005514831172

#####################################################################
Debug: arrayLength                    = 459
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8865, 1135, 
Debug: bestThreshold[maxSpeedIndex]   = 8865

ir_sort is faster than std::sort 88.65 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005520344437

#####################################################################
Debug: arrayLength                    = 460
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9192, 808, 
Debug: bestThreshold[maxSpeedIndex]   = 9192

ir_sort is faster than std::sort 91.92 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007154952213

#####################################################################
Debug: arrayLength                    = 461
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9153, 847, 
Debug: bestThreshold[maxSpeedIndex]   = 9153

ir_sort is faster than std::sort 91.53 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006418279889

#####################################################################
Debug: arrayLength                    = 462
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9114, 886, 
Debug: bestThreshold[maxSpeedIndex]   = 9114

ir_sort is faster than std::sort 91.14 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006335177285

#####################################################################
Debug: arrayLength                    = 463
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9045, 955, 
Debug: bestThreshold[maxSpeedIndex]   = 9045

ir_sort is faster than std::sort 90.45 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005965973399

#####################################################################
Debug: arrayLength                    = 464
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9037, 963, 
Debug: bestThreshold[maxSpeedIndex]   = 9037

ir_sort is faster than std::sort 90.37 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006003797539

#####################################################################
Debug: arrayLength                    = 465
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8812, 1188, 
Debug: bestThreshold[maxSpeedIndex]   = 8812

ir_sort is faster than std::sort 88.12 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005317834873

#####################################################################
Debug: arrayLength                    = 466
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8757, 1243, 
Debug: bestThreshold[maxSpeedIndex]   = 8757

ir_sort is faster than std::sort 87.57 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006112786654

#####################################################################
Debug: arrayLength                    = 467
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8836, 1164, 
Debug: bestThreshold[maxSpeedIndex]   = 8836

ir_sort is faster than std::sort 88.36 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005624789975

#####################################################################
Debug: arrayLength                    = 468
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8746, 1254, 
Debug: bestThreshold[maxSpeedIndex]   = 8746

ir_sort is faster than std::sort 87.46 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005409829174

#####################################################################
Debug: arrayLength                    = 469
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8831, 1169, 
Debug: bestThreshold[maxSpeedIndex]   = 8831

ir_sort is faster than std::sort 88.31 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004917000658

#####################################################################
Debug: arrayLength                    = 470
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8781, 1219, 
Debug: bestThreshold[maxSpeedIndex]   = 8781

ir_sort is faster than std::sort 87.81 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005003710825

#####################################################################
Debug: arrayLength                    = 471
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8828, 1172, 
Debug: bestThreshold[maxSpeedIndex]   = 8828

ir_sort is faster than std::sort 88.28 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005471858424

#####################################################################
Debug: arrayLength                    = 472
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8590, 1410, 
Debug: bestThreshold[maxSpeedIndex]   = 8590

ir_sort is faster than std::sort 85.9 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006860581398

#####################################################################
Debug: arrayLength                    = 473
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8783, 1217, 
Debug: bestThreshold[maxSpeedIndex]   = 8783

ir_sort is faster than std::sort 87.83 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005324555628

#####################################################################
Debug: arrayLength                    = 474
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8787, 1213, 
Debug: bestThreshold[maxSpeedIndex]   = 8787

ir_sort is faster than std::sort 87.87 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005279838024

#####################################################################
Debug: arrayLength                    = 475
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8831, 1169, 
Debug: bestThreshold[maxSpeedIndex]   = 8831

ir_sort is faster than std::sort 88.31 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005120388146

#####################################################################
Debug: arrayLength                    = 476
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8770, 1230, 
Debug: bestThreshold[maxSpeedIndex]   = 8770

ir_sort is faster than std::sort 87.7 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005487089698

#####################################################################
Debug: arrayLength                    = 477
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8799, 1201, 
Debug: bestThreshold[maxSpeedIndex]   = 8799

ir_sort is faster than std::sort 87.99 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005061508257

#####################################################################
Debug: arrayLength                    = 478
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8845, 1155, 
Debug: bestThreshold[maxSpeedIndex]   = 8845

ir_sort is faster than std::sort 88.45 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005016020672

#####################################################################
Debug: arrayLength                    = 479
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8879, 1121, 
Debug: bestThreshold[maxSpeedIndex]   = 8879

ir_sort is faster than std::sort 88.79 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005616214065

#####################################################################
Debug: arrayLength                    = 480
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8927, 1073, 
Debug: bestThreshold[maxSpeedIndex]   = 8927

ir_sort is faster than std::sort 89.27 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.0048893343

#####################################################################
Debug: arrayLength                    = 481
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8995, 1005, 
Debug: bestThreshold[maxSpeedIndex]   = 8995

ir_sort is faster than std::sort 89.95 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005019632432

#####################################################################
Debug: arrayLength                    = 482
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9003, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 9003

ir_sort is faster than std::sort 90.03 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00629168806

#####################################################################
Debug: arrayLength                    = 483
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9003, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 9003

ir_sort is faster than std::sort 90.03 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005535452272

#####################################################################
Debug: arrayLength                    = 484
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8955, 1045, 
Debug: bestThreshold[maxSpeedIndex]   = 8955

ir_sort is faster than std::sort 89.55 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005717553627

#####################################################################
Debug: arrayLength                    = 485
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8911, 1089, 
Debug: bestThreshold[maxSpeedIndex]   = 8911

ir_sort is faster than std::sort 89.11 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004832744848

#####################################################################
Debug: arrayLength                    = 486
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8966, 1034, 
Debug: bestThreshold[maxSpeedIndex]   = 8966

ir_sort is faster than std::sort 89.66 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005593367686

#####################################################################
Debug: arrayLength                    = 487
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9305, 695, 
Debug: bestThreshold[maxSpeedIndex]   = 9305

ir_sort is faster than std::sort 93.05 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007219115315

#####################################################################
Debug: arrayLength                    = 488
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9292, 708, 
Debug: bestThreshold[maxSpeedIndex]   = 9292

ir_sort is faster than std::sort 92.92 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007632243204

#####################################################################
Debug: arrayLength                    = 489
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9281, 719, 
Debug: bestThreshold[maxSpeedIndex]   = 9281

ir_sort is faster than std::sort 92.81 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00714960455

#####################################################################
Debug: arrayLength                    = 490
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9281, 719, 
Debug: bestThreshold[maxSpeedIndex]   = 9281

ir_sort is faster than std::sort 92.81 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007703132733

#####################################################################
Debug: arrayLength                    = 491
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9259, 741, 
Debug: bestThreshold[maxSpeedIndex]   = 9259

ir_sort is faster than std::sort 92.59 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007260734664

#####################################################################
Debug: arrayLength                    = 492
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9237, 763, 
Debug: bestThreshold[maxSpeedIndex]   = 9237

ir_sort is faster than std::sort 92.37 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006824304974

#####################################################################
Debug: arrayLength                    = 493
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8982, 1018, 
Debug: bestThreshold[maxSpeedIndex]   = 8982

ir_sort is faster than std::sort 89.82 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007887344202

#####################################################################
Debug: arrayLength                    = 494
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9261, 739, 
Debug: bestThreshold[maxSpeedIndex]   = 9261

ir_sort is faster than std::sort 92.61 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006983218151

#####################################################################
Debug: arrayLength                    = 495
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9233, 767, 
Debug: bestThreshold[maxSpeedIndex]   = 9233

ir_sort is faster than std::sort 92.33 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007354976365

#####################################################################
Debug: arrayLength                    = 496
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9312, 688, 
Debug: bestThreshold[maxSpeedIndex]   = 9312

ir_sort is faster than std::sort 93.12 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007512767754

#####################################################################
Debug: arrayLength                    = 497
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9306, 694, 
Debug: bestThreshold[maxSpeedIndex]   = 9306

ir_sort is faster than std::sort 93.06 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007440030704

#####################################################################
Debug: arrayLength                    = 498
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9270, 730, 
Debug: bestThreshold[maxSpeedIndex]   = 9270

ir_sort is faster than std::sort 92.7 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007455188576

#####################################################################
Debug: arrayLength                    = 499
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9265, 735, 
Debug: bestThreshold[maxSpeedIndex]   = 9265

ir_sort is faster than std::sort 92.65 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007748162924

#####################################################################
Debug: arrayLength                    = 500
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9249, 751, 
Debug: bestThreshold[maxSpeedIndex]   = 9249

ir_sort is faster than std::sort 92.49 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006940186088

#####################################################################
Debug: arrayLength                    = 501
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9317, 683, 
Debug: bestThreshold[maxSpeedIndex]   = 9317

ir_sort is faster than std::sort 93.17 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008607882427

#####################################################################
Debug: arrayLength                    = 502
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9326, 674, 
Debug: bestThreshold[maxSpeedIndex]   = 9326

ir_sort is faster than std::sort 93.26 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007943544455

#####################################################################
Debug: arrayLength                    = 503
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9282, 718, 
Debug: bestThreshold[maxSpeedIndex]   = 9282

ir_sort is faster than std::sort 92.82 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007873996259

#####################################################################
Debug: arrayLength                    = 504
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9316, 684, 
Debug: bestThreshold[maxSpeedIndex]   = 9316

ir_sort is faster than std::sort 93.16 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007692504091

#####################################################################
Debug: arrayLength                    = 505
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9340, 660, 
Debug: bestThreshold[maxSpeedIndex]   = 9340

ir_sort is faster than std::sort 93.4 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00765193667

#####################################################################
Debug: arrayLength                    = 506
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9378, 622, 
Debug: bestThreshold[maxSpeedIndex]   = 9378

ir_sort is faster than std::sort 93.78 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009965627032

#####################################################################
Debug: arrayLength                    = 507
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9393, 607, 
Debug: bestThreshold[maxSpeedIndex]   = 9393

ir_sort is faster than std::sort 93.93 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009120094965

#####################################################################
Debug: arrayLength                    = 508
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9406, 594, 
Debug: bestThreshold[maxSpeedIndex]   = 9406

ir_sort is faster than std::sort 94.06 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008902102124

#####################################################################
Debug: arrayLength                    = 509
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9375, 625, 
Debug: bestThreshold[maxSpeedIndex]   = 9375

ir_sort is faster than std::sort 93.75 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008857648525

#####################################################################
Debug: arrayLength                    = 510
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9325, 675, 
Debug: bestThreshold[maxSpeedIndex]   = 9325

ir_sort is faster than std::sort 93.25 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008088860612

#####################################################################
Debug: arrayLength                    = 511
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9344, 656, 
Debug: bestThreshold[maxSpeedIndex]   = 9344

ir_sort is faster than std::sort 93.44 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008416116695

#####################################################################
Debug: arrayLength                    = 512
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9336, 664, 
Debug: bestThreshold[maxSpeedIndex]   = 9336

ir_sort is faster than std::sort 93.36 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008309414907

#####################################################################
Debug: arrayLength                    = 513
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9002, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 9002

ir_sort is faster than std::sort 90.02 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008215890504

#####################################################################
Debug: arrayLength                    = 514
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9283, 717, 
Debug: bestThreshold[maxSpeedIndex]   = 9283

ir_sort is faster than std::sort 92.83 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007664043363

#####################################################################
Debug: arrayLength                    = 515
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9327, 673, 
Debug: bestThreshold[maxSpeedIndex]   = 9327

ir_sort is faster than std::sort 93.27 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008045974846

#####################################################################
Debug: arrayLength                    = 516
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9276, 724, 
Debug: bestThreshold[maxSpeedIndex]   = 9276

ir_sort is faster than std::sort 92.76 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007573244131

#####################################################################
Debug: arrayLength                    = 517
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9237, 763, 
Debug: bestThreshold[maxSpeedIndex]   = 9237

ir_sort is faster than std::sort 92.37 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007685671751

#####################################################################
Debug: arrayLength                    = 518
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9330, 670, 
Debug: bestThreshold[maxSpeedIndex]   = 9330

ir_sort is faster than std::sort 93.3 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008610274509

#####################################################################
Debug: arrayLength                    = 519
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9316, 684, 
Debug: bestThreshold[maxSpeedIndex]   = 9316

ir_sort is faster than std::sort 93.16 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008179799584

#####################################################################
Debug: arrayLength                    = 520
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9291, 709, 
Debug: bestThreshold[maxSpeedIndex]   = 9291

ir_sort is faster than std::sort 92.91 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007750011653

#####################################################################
Debug: arrayLength                    = 521
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9295, 705, 
Debug: bestThreshold[maxSpeedIndex]   = 9295

ir_sort is faster than std::sort 92.95 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007989746403

#####################################################################
Debug: arrayLength                    = 522
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9318, 682, 
Debug: bestThreshold[maxSpeedIndex]   = 9318

ir_sort is faster than std::sort 93.18 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007957926999

#####################################################################
Debug: arrayLength                    = 523
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9234, 766, 
Debug: bestThreshold[maxSpeedIndex]   = 9234

ir_sort is faster than std::sort 92.34 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007149763855

#####################################################################
Debug: arrayLength                    = 524
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9285, 715, 
Debug: bestThreshold[maxSpeedIndex]   = 9285

ir_sort is faster than std::sort 92.85 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007520554916

#####################################################################
Debug: arrayLength                    = 525
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9287, 713, 
Debug: bestThreshold[maxSpeedIndex]   = 9287

ir_sort is faster than std::sort 92.87 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007623936651

#####################################################################
Debug: arrayLength                    = 526
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9303, 697, 
Debug: bestThreshold[maxSpeedIndex]   = 9303

ir_sort is faster than std::sort 93.03 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007686028186

#####################################################################
Debug: arrayLength                    = 527
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9322, 678, 
Debug: bestThreshold[maxSpeedIndex]   = 9322

ir_sort is faster than std::sort 93.22 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007282262154

#####################################################################
Debug: arrayLength                    = 528
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9382, 618, 
Debug: bestThreshold[maxSpeedIndex]   = 9382

ir_sort is faster than std::sort 93.82 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010265231647

#####################################################################
Debug: arrayLength                    = 529
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9352, 648, 
Debug: bestThreshold[maxSpeedIndex]   = 9352

ir_sort is faster than std::sort 93.52 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009577086391

#####################################################################
Debug: arrayLength                    = 530
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9370, 630, 
Debug: bestThreshold[maxSpeedIndex]   = 9370

ir_sort is faster than std::sort 93.7 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010341649975

#####################################################################
Debug: arrayLength                    = 531
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9340, 660, 
Debug: bestThreshold[maxSpeedIndex]   = 9340

ir_sort is faster than std::sort 93.4 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010139068386

#####################################################################
Debug: arrayLength                    = 532
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9329, 671, 
Debug: bestThreshold[maxSpeedIndex]   = 9329

ir_sort is faster than std::sort 93.29 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010805022936

#####################################################################
Debug: arrayLength                    = 533
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9155, 845, 
Debug: bestThreshold[maxSpeedIndex]   = 9155

ir_sort is faster than std::sort 91.55 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009692992656

#####################################################################
Debug: arrayLength                    = 534
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9315, 685, 
Debug: bestThreshold[maxSpeedIndex]   = 9315

ir_sort is faster than std::sort 93.15 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009981319264

#####################################################################
Debug: arrayLength                    = 535
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9344, 656, 
Debug: bestThreshold[maxSpeedIndex]   = 9344

ir_sort is faster than std::sort 93.44 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009753455792

#####################################################################
Debug: arrayLength                    = 536
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9381, 619, 
Debug: bestThreshold[maxSpeedIndex]   = 9381

ir_sort is faster than std::sort 93.81 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009676234554

#####################################################################
Debug: arrayLength                    = 537
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9349, 651, 
Debug: bestThreshold[maxSpeedIndex]   = 9349

ir_sort is faster than std::sort 93.49 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009494496086

#####################################################################
Debug: arrayLength                    = 538
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9353, 647, 
Debug: bestThreshold[maxSpeedIndex]   = 9353

ir_sort is faster than std::sort 93.53 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008897662717

#####################################################################
Debug: arrayLength                    = 539
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9341, 659, 
Debug: bestThreshold[maxSpeedIndex]   = 9341

ir_sort is faster than std::sort 93.41 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00982161245

#####################################################################
Debug: arrayLength                    = 540
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9337, 663, 
Debug: bestThreshold[maxSpeedIndex]   = 9337

ir_sort is faster than std::sort 93.37 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008735811571

#####################################################################
Debug: arrayLength                    = 541
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9302, 698, 
Debug: bestThreshold[maxSpeedIndex]   = 9302

ir_sort is faster than std::sort 93.02 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008722000539

#####################################################################
Debug: arrayLength                    = 542
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9325, 675, 
Debug: bestThreshold[maxSpeedIndex]   = 9325

ir_sort is faster than std::sort 93.25 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009328828825

#####################################################################
Debug: arrayLength                    = 543
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9319, 681, 
Debug: bestThreshold[maxSpeedIndex]   = 9319

ir_sort is faster than std::sort 93.19 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009427787403

#####################################################################
Debug: arrayLength                    = 544
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9303, 697, 
Debug: bestThreshold[maxSpeedIndex]   = 9303

ir_sort is faster than std::sort 93.03 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008547367546

#####################################################################
Debug: arrayLength                    = 545
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9284, 716, 
Debug: bestThreshold[maxSpeedIndex]   = 9284

ir_sort is faster than std::sort 92.84 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008674923973

#####################################################################
Debug: arrayLength                    = 546
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9340, 660, 
Debug: bestThreshold[maxSpeedIndex]   = 9340

ir_sort is faster than std::sort 93.4 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008401843247

#####################################################################
Debug: arrayLength                    = 547
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9394, 606, 
Debug: bestThreshold[maxSpeedIndex]   = 9394

ir_sort is faster than std::sort 93.94 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010986582684

#####################################################################
Debug: arrayLength                    = 548
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9330, 670, 
Debug: bestThreshold[maxSpeedIndex]   = 9330

ir_sort is faster than std::sort 93.3 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010733298337

#####################################################################
Debug: arrayLength                    = 549
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9351, 649, 
Debug: bestThreshold[maxSpeedIndex]   = 9351

ir_sort is faster than std::sort 93.51 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009983699087

#####################################################################
Debug: arrayLength                    = 550
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9357, 643, 
Debug: bestThreshold[maxSpeedIndex]   = 9357

ir_sort is faster than std::sort 93.57 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010106893766

#####################################################################
Debug: arrayLength                    = 551
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9399, 601, 
Debug: bestThreshold[maxSpeedIndex]   = 9399

ir_sort is faster than std::sort 93.99 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010345795851

#####################################################################
Debug: arrayLength                    = 552
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9046, 954, 
Debug: bestThreshold[maxSpeedIndex]   = 9046

ir_sort is faster than std::sort 90.46 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006590866291

#####################################################################
Debug: arrayLength                    = 553
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9182, 818, 
Debug: bestThreshold[maxSpeedIndex]   = 9182

ir_sort is faster than std::sort 91.82 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007201457159

#####################################################################
Debug: arrayLength                    = 554
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8933, 1067, 
Debug: bestThreshold[maxSpeedIndex]   = 8933

ir_sort is faster than std::sort 89.33 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006773195565

#####################################################################
Debug: arrayLength                    = 555
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9157, 843, 
Debug: bestThreshold[maxSpeedIndex]   = 9157

ir_sort is faster than std::sort 91.57 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006971246337

#####################################################################
Debug: arrayLength                    = 556
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9219, 781, 
Debug: bestThreshold[maxSpeedIndex]   = 9219

ir_sort is faster than std::sort 92.19 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007185434068

#####################################################################
Debug: arrayLength                    = 557
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9180, 820, 
Debug: bestThreshold[maxSpeedIndex]   = 9180

ir_sort is faster than std::sort 91.8 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007737534162

#####################################################################
Debug: arrayLength                    = 558
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9233, 767, 
Debug: bestThreshold[maxSpeedIndex]   = 9233

ir_sort is faster than std::sort 92.33 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007592355585

#####################################################################
Debug: arrayLength                    = 559
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9232, 768, 
Debug: bestThreshold[maxSpeedIndex]   = 9232

ir_sort is faster than std::sort 92.32 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007613481115

#####################################################################
Debug: arrayLength                    = 560
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9228, 772, 
Debug: bestThreshold[maxSpeedIndex]   = 9228

ir_sort is faster than std::sort 92.28 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007823169579

#####################################################################
Debug: arrayLength                    = 561
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9176, 824, 
Debug: bestThreshold[maxSpeedIndex]   = 9176

ir_sort is faster than std::sort 91.76 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007583505594

#####################################################################
Debug: arrayLength                    = 562
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9203, 797, 
Debug: bestThreshold[maxSpeedIndex]   = 9203

ir_sort is faster than std::sort 92.03 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007948597053

#####################################################################
Debug: arrayLength                    = 563
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9212, 788, 
Debug: bestThreshold[maxSpeedIndex]   = 9212

ir_sort is faster than std::sort 92.12 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007548244933

#####################################################################
Debug: arrayLength                    = 564
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9237, 763, 
Debug: bestThreshold[maxSpeedIndex]   = 9237

ir_sort is faster than std::sort 92.37 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007740854575

#####################################################################
Debug: arrayLength                    = 565
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9232, 768, 
Debug: bestThreshold[maxSpeedIndex]   = 9232

ir_sort is faster than std::sort 92.32 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006998617887

#####################################################################
Debug: arrayLength                    = 566
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9236, 764, 
Debug: bestThreshold[maxSpeedIndex]   = 9236

ir_sort is faster than std::sort 92.36 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00748035021

#####################################################################
Debug: arrayLength                    = 567
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9254, 746, 
Debug: bestThreshold[maxSpeedIndex]   = 9254

ir_sort is faster than std::sort 92.54 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007596170064

#####################################################################
Debug: arrayLength                    = 568
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9244, 756, 
Debug: bestThreshold[maxSpeedIndex]   = 9244

ir_sort is faster than std::sort 92.44 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00795859351

#####################################################################
Debug: arrayLength                    = 569
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9203, 797, 
Debug: bestThreshold[maxSpeedIndex]   = 9203

ir_sort is faster than std::sort 92.03 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008029442792

#####################################################################
Debug: arrayLength                    = 570
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9212, 788, 
Debug: bestThreshold[maxSpeedIndex]   = 9212

ir_sort is faster than std::sort 92.12 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007066705698

#####################################################################
Debug: arrayLength                    = 571
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9190, 810, 
Debug: bestThreshold[maxSpeedIndex]   = 9190

ir_sort is faster than std::sort 91.9 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00731171459

#####################################################################
Debug: arrayLength                    = 572
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9187, 813, 
Debug: bestThreshold[maxSpeedIndex]   = 9187

ir_sort is faster than std::sort 91.87 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007127335369

#####################################################################
Debug: arrayLength                    = 573
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9142, 858, 
Debug: bestThreshold[maxSpeedIndex]   = 9142

ir_sort is faster than std::sort 91.42 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007534161314

#####################################################################
Debug: arrayLength                    = 574
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8925, 1075, 
Debug: bestThreshold[maxSpeedIndex]   = 8925

ir_sort is faster than std::sort 89.25 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007785464068

#####################################################################
Debug: arrayLength                    = 575
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9155, 845, 
Debug: bestThreshold[maxSpeedIndex]   = 9155

ir_sort is faster than std::sort 91.55 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00718895516

#####################################################################
Debug: arrayLength                    = 576
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9151, 849, 
Debug: bestThreshold[maxSpeedIndex]   = 9151

ir_sort is faster than std::sort 91.51 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006842258591

#####################################################################
Debug: arrayLength                    = 577
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9168, 832, 
Debug: bestThreshold[maxSpeedIndex]   = 9168

ir_sort is faster than std::sort 91.68 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006854537953

#####################################################################
Debug: arrayLength                    = 578
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9141, 859, 
Debug: bestThreshold[maxSpeedIndex]   = 9141

ir_sort is faster than std::sort 91.41 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006820441949

#####################################################################
Debug: arrayLength                    = 579
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9101, 899, 
Debug: bestThreshold[maxSpeedIndex]   = 9101

ir_sort is faster than std::sort 91.01 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006368357009

#####################################################################
Debug: arrayLength                    = 580
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9142, 858, 
Debug: bestThreshold[maxSpeedIndex]   = 9142

ir_sort is faster than std::sort 91.42 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006572909363

#####################################################################
Debug: arrayLength                    = 581
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9127, 873, 
Debug: bestThreshold[maxSpeedIndex]   = 9127

ir_sort is faster than std::sort 91.27 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006597528538

#####################################################################
Debug: arrayLength                    = 582
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9126, 874, 
Debug: bestThreshold[maxSpeedIndex]   = 9126

ir_sort is faster than std::sort 91.26 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006747864223

#####################################################################
Debug: arrayLength                    = 583
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9235, 765, 
Debug: bestThreshold[maxSpeedIndex]   = 9235

ir_sort is faster than std::sort 92.35 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008145213272

#####################################################################
Debug: arrayLength                    = 584
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9146, 854, 
Debug: bestThreshold[maxSpeedIndex]   = 9146

ir_sort is faster than std::sort 91.46 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006950872077

#####################################################################
Debug: arrayLength                    = 585
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9154, 846, 
Debug: bestThreshold[maxSpeedIndex]   = 9154

ir_sort is faster than std::sort 91.54 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006735233299

#####################################################################
Debug: arrayLength                    = 586
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9145, 855, 
Debug: bestThreshold[maxSpeedIndex]   = 9145

ir_sort is faster than std::sort 91.45 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007354302498

#####################################################################
Debug: arrayLength                    = 587
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9065, 935, 
Debug: bestThreshold[maxSpeedIndex]   = 9065

ir_sort is faster than std::sort 90.65 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00643784728

#####################################################################
Debug: arrayLength                    = 588
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9272, 728, 
Debug: bestThreshold[maxSpeedIndex]   = 9272

ir_sort is faster than std::sort 92.72 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008252867431

#####################################################################
Debug: arrayLength                    = 589
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9223, 777, 
Debug: bestThreshold[maxSpeedIndex]   = 9223

ir_sort is faster than std::sort 92.23 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008038879548

#####################################################################
Debug: arrayLength                    = 590
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9205, 795, 
Debug: bestThreshold[maxSpeedIndex]   = 9205

ir_sort is faster than std::sort 92.05 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007836420955

#####################################################################
Debug: arrayLength                    = 591
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9234, 766, 
Debug: bestThreshold[maxSpeedIndex]   = 9234

ir_sort is faster than std::sort 92.34 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008233610638

#####################################################################
Debug: arrayLength                    = 592
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9199, 801, 
Debug: bestThreshold[maxSpeedIndex]   = 9199

ir_sort is faster than std::sort 91.99 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008374340523

#####################################################################
Debug: arrayLength                    = 593
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9107, 893, 
Debug: bestThreshold[maxSpeedIndex]   = 9107

ir_sort is faster than std::sort 91.07 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007234140311

#####################################################################
Debug: arrayLength                    = 594
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9084, 916, 
Debug: bestThreshold[maxSpeedIndex]   = 9084

ir_sort is faster than std::sort 90.84 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007051131471

#####################################################################
Debug: arrayLength                    = 595
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8865, 1135, 
Debug: bestThreshold[maxSpeedIndex]   = 8865

ir_sort is faster than std::sort 88.65 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006824944747

#####################################################################
Debug: arrayLength                    = 596
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9074, 926, 
Debug: bestThreshold[maxSpeedIndex]   = 9074

ir_sort is faster than std::sort 90.74 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006661052216

#####################################################################
Debug: arrayLength                    = 597
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9132, 868, 
Debug: bestThreshold[maxSpeedIndex]   = 9132

ir_sort is faster than std::sort 91.32 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006514978393

#####################################################################
Debug: arrayLength                    = 598
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9116, 884, 
Debug: bestThreshold[maxSpeedIndex]   = 9116

ir_sort is faster than std::sort 91.16 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00704912914

#####################################################################
Debug: arrayLength                    = 599
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9070, 930, 
Debug: bestThreshold[maxSpeedIndex]   = 9070

ir_sort is faster than std::sort 90.7 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006214861474

#####################################################################
Debug: arrayLength                    = 600
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9055, 945, 
Debug: bestThreshold[maxSpeedIndex]   = 9055

ir_sort is faster than std::sort 90.55 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006900584325

#####################################################################
Debug: arrayLength                    = 601
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9075, 925, 
Debug: bestThreshold[maxSpeedIndex]   = 9075

ir_sort is faster than std::sort 90.75 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006672712038

#####################################################################
Debug: arrayLength                    = 602
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9066, 934, 
Debug: bestThreshold[maxSpeedIndex]   = 9066

ir_sort is faster than std::sort 90.66 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006270234918

#####################################################################
Debug: arrayLength                    = 603
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9048, 952, 
Debug: bestThreshold[maxSpeedIndex]   = 9048

ir_sort is faster than std::sort 90.48 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006695179203

#####################################################################
Debug: arrayLength                    = 604
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9044, 956, 
Debug: bestThreshold[maxSpeedIndex]   = 9044

ir_sort is faster than std::sort 90.44 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006999654666

#####################################################################
Debug: arrayLength                    = 605
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9056, 944, 
Debug: bestThreshold[maxSpeedIndex]   = 9056

ir_sort is faster than std::sort 90.56 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00646692253

#####################################################################
Debug: arrayLength                    = 606
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9058, 942, 
Debug: bestThreshold[maxSpeedIndex]   = 9058

ir_sort is faster than std::sort 90.58 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006420503504

#####################################################################
Debug: arrayLength                    = 607
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9075, 925, 
Debug: bestThreshold[maxSpeedIndex]   = 9075

ir_sort is faster than std::sort 90.75 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006511840491

#####################################################################
Debug: arrayLength                    = 608
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9059, 941, 
Debug: bestThreshold[maxSpeedIndex]   = 9059

ir_sort is faster than std::sort 90.59 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006013115792

#####################################################################
Debug: arrayLength                    = 609
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9028, 972, 
Debug: bestThreshold[maxSpeedIndex]   = 9028

ir_sort is faster than std::sort 90.28 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006769831715

#####################################################################
Debug: arrayLength                    = 610
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9035, 965, 
Debug: bestThreshold[maxSpeedIndex]   = 9035

ir_sort is faster than std::sort 90.35 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005986583944

#####################################################################
Debug: arrayLength                    = 611
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9018, 982, 
Debug: bestThreshold[maxSpeedIndex]   = 9018

ir_sort is faster than std::sort 90.18 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006658429831

#####################################################################
Debug: arrayLength                    = 612
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8948, 1052, 
Debug: bestThreshold[maxSpeedIndex]   = 8948

ir_sort is faster than std::sort 89.48 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006567619047

#####################################################################
Debug: arrayLength                    = 613
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9005, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 9005

ir_sort is faster than std::sort 90.05 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005982831371

#####################################################################
Debug: arrayLength                    = 614
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8996, 1004, 
Debug: bestThreshold[maxSpeedIndex]   = 8996

ir_sort is faster than std::sort 89.96 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006042615514

#####################################################################
Debug: arrayLength                    = 615
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8735, 1265, 
Debug: bestThreshold[maxSpeedIndex]   = 8735

ir_sort is faster than std::sort 87.35 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006348622252

#####################################################################
Debug: arrayLength                    = 616
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8864, 1136, 
Debug: bestThreshold[maxSpeedIndex]   = 8864

ir_sort is faster than std::sort 88.64 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005454967302

#####################################################################
Debug: arrayLength                    = 617
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8891, 1109, 
Debug: bestThreshold[maxSpeedIndex]   = 8891

ir_sort is faster than std::sort 88.91 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005522090639

#####################################################################
Debug: arrayLength                    = 618
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8861, 1139, 
Debug: bestThreshold[maxSpeedIndex]   = 8861

ir_sort is faster than std::sort 88.61 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005634569107

#####################################################################
Debug: arrayLength                    = 619
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8830, 1170, 
Debug: bestThreshold[maxSpeedIndex]   = 8830

ir_sort is faster than std::sort 88.3 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005398439255

#####################################################################
Debug: arrayLength                    = 620
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8650, 1350, 
Debug: bestThreshold[maxSpeedIndex]   = 8650

ir_sort is faster than std::sort 86.5 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005413906552

#####################################################################
Debug: arrayLength                    = 621
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8761, 1239, 
Debug: bestThreshold[maxSpeedIndex]   = 8761

ir_sort is faster than std::sort 87.61 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005224789256

#####################################################################
Debug: arrayLength                    = 622
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8734, 1266, 
Debug: bestThreshold[maxSpeedIndex]   = 8734

ir_sort is faster than std::sort 87.34 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004744440336

#####################################################################
Debug: arrayLength                    = 623
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8708, 1292, 
Debug: bestThreshold[maxSpeedIndex]   = 8708

ir_sort is faster than std::sort 87.08 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005217880719

#####################################################################
Debug: arrayLength                    = 624
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8766, 1234, 
Debug: bestThreshold[maxSpeedIndex]   = 8766

ir_sort is faster than std::sort 87.66 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004882710441

#####################################################################
Debug: arrayLength                    = 625
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8849, 1151, 
Debug: bestThreshold[maxSpeedIndex]   = 8849

ir_sort is faster than std::sort 88.49 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005972349159

#####################################################################
Debug: arrayLength                    = 626
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8899, 1101, 
Debug: bestThreshold[maxSpeedIndex]   = 8899

ir_sort is faster than std::sort 88.99 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005315243833

#####################################################################
Debug: arrayLength                    = 627
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8810, 1190, 
Debug: bestThreshold[maxSpeedIndex]   = 8810

ir_sort is faster than std::sort 88.1 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005333367707

#####################################################################
Debug: arrayLength                    = 628
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8893, 1107, 
Debug: bestThreshold[maxSpeedIndex]   = 8893

ir_sort is faster than std::sort 88.93 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005879127821

#####################################################################
Debug: arrayLength                    = 629
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9050, 950, 
Debug: bestThreshold[maxSpeedIndex]   = 9050

ir_sort is faster than std::sort 90.5 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007092842376

#####################################################################
Debug: arrayLength                    = 630
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8979, 1021, 
Debug: bestThreshold[maxSpeedIndex]   = 8979

ir_sort is faster than std::sort 89.79 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005895366837

#####################################################################
Debug: arrayLength                    = 631
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8904, 1096, 
Debug: bestThreshold[maxSpeedIndex]   = 8904

ir_sort is faster than std::sort 89.04 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006009904028

#####################################################################
Debug: arrayLength                    = 632
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8931, 1069, 
Debug: bestThreshold[maxSpeedIndex]   = 8931

ir_sort is faster than std::sort 89.31 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005929368323

#####################################################################
Debug: arrayLength                    = 633
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8899, 1101, 
Debug: bestThreshold[maxSpeedIndex]   = 8899

ir_sort is faster than std::sort 88.99 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005779506578

#####################################################################
Debug: arrayLength                    = 634
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9120, 880, 
Debug: bestThreshold[maxSpeedIndex]   = 9120

ir_sort is faster than std::sort 91.2 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007265179719

#####################################################################
Debug: arrayLength                    = 635
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8939, 1061, 
Debug: bestThreshold[maxSpeedIndex]   = 8939

ir_sort is faster than std::sort 89.39 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00650330687

#####################################################################
Debug: arrayLength                    = 636
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8971, 1029, 
Debug: bestThreshold[maxSpeedIndex]   = 8971

ir_sort is faster than std::sort 89.71 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006785749343

#####################################################################
Debug: arrayLength                    = 637
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9041, 959, 
Debug: bestThreshold[maxSpeedIndex]   = 9041

ir_sort is faster than std::sort 90.41 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006169289415

#####################################################################
Debug: arrayLength                    = 638
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 9047, 953, 
Debug: bestThreshold[maxSpeedIndex]   = 9047

ir_sort is faster than std::sort 90.47 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006022198307

#####################################################################
Debug: arrayLength                    = 639
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8991, 1009, 
Debug: bestThreshold[maxSpeedIndex]   = 8991

ir_sort is faster than std::sort 89.91 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005988602341

#####################################################################
Debug: arrayLength                    = 640
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8969, 1031, 
Debug: bestThreshold[maxSpeedIndex]   = 8969

ir_sort is faster than std::sort 89.69 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005557492138

#####################################################################
Debug: arrayLength                    = 641
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8890, 1110, 
Debug: bestThreshold[maxSpeedIndex]   = 8890

ir_sort is faster than std::sort 88.9 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005504770041

#####################################################################
Debug: arrayLength                    = 642
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8829, 1171, 
Debug: bestThreshold[maxSpeedIndex]   = 8829

ir_sort is faster than std::sort 88.29 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005165026185

#####################################################################
Debug: arrayLength                    = 643
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8785, 1215, 
Debug: bestThreshold[maxSpeedIndex]   = 8785

ir_sort is faster than std::sort 87.85 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004998094118

#####################################################################
Debug: arrayLength                    = 644
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8781, 1219, 
Debug: bestThreshold[maxSpeedIndex]   = 8781

ir_sort is faster than std::sort 87.81 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005240932805

#####################################################################
Debug: arrayLength                    = 645
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8765, 1235, 
Debug: bestThreshold[maxSpeedIndex]   = 8765

ir_sort is faster than std::sort 87.65 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005863078828

#####################################################################
Debug: arrayLength                    = 646
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8779, 1221, 
Debug: bestThreshold[maxSpeedIndex]   = 8779

ir_sort is faster than std::sort 87.79 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005458015093

#####################################################################
Debug: arrayLength                    = 647
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8756, 1244, 
Debug: bestThreshold[maxSpeedIndex]   = 8756

ir_sort is faster than std::sort 87.56 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005616356272

#####################################################################
Debug: arrayLength                    = 648
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8797, 1203, 
Debug: bestThreshold[maxSpeedIndex]   = 8797

ir_sort is faster than std::sort 87.97 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004695086996

#####################################################################
Debug: arrayLength                    = 649
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8702, 1298, 
Debug: bestThreshold[maxSpeedIndex]   = 8702

ir_sort is faster than std::sort 87.02 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005516519551

#####################################################################
Debug: arrayLength                    = 650
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8740, 1260, 
Debug: bestThreshold[maxSpeedIndex]   = 8740

ir_sort is faster than std::sort 87.4 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005234031897

#####################################################################
Debug: arrayLength                    = 651
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8758, 1242, 
Debug: bestThreshold[maxSpeedIndex]   = 8758

ir_sort is faster than std::sort 87.58 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00508462386

#####################################################################
Debug: arrayLength                    = 652
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8700, 1300, 
Debug: bestThreshold[maxSpeedIndex]   = 8700

ir_sort is faster than std::sort 87 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004874578993

#####################################################################
Debug: arrayLength                    = 653
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8660, 1340, 
Debug: bestThreshold[maxSpeedIndex]   = 8660

ir_sort is faster than std::sort 86.6 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004515778552

#####################################################################
Debug: arrayLength                    = 654
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8648, 1352, 
Debug: bestThreshold[maxSpeedIndex]   = 8648

ir_sort is faster than std::sort 86.48 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004634537296

#####################################################################
Debug: arrayLength                    = 655
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8551, 1449, 
Debug: bestThreshold[maxSpeedIndex]   = 8551

ir_sort is faster than std::sort 85.51 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005133974639

#####################################################################
Debug: arrayLength                    = 656
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8521, 1479, 
Debug: bestThreshold[maxSpeedIndex]   = 8521

ir_sort is faster than std::sort 85.21 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005714283375

#####################################################################
Debug: arrayLength                    = 657
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8595, 1405, 
Debug: bestThreshold[maxSpeedIndex]   = 8595

ir_sort is faster than std::sort 85.95 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004408362907

#####################################################################
Debug: arrayLength                    = 658
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8550, 1450, 
Debug: bestThreshold[maxSpeedIndex]   = 8550

ir_sort is faster than std::sort 85.5 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004463920862

#####################################################################
Debug: arrayLength                    = 659
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8551, 1449, 
Debug: bestThreshold[maxSpeedIndex]   = 8551

ir_sort is faster than std::sort 85.51 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004538250144

#####################################################################
Debug: arrayLength                    = 660
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8453, 1547, 
Debug: bestThreshold[maxSpeedIndex]   = 8453

ir_sort is faster than std::sort 84.53 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004185699054

#####################################################################
Debug: arrayLength                    = 661
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8242, 1758, 
Debug: bestThreshold[maxSpeedIndex]   = 8242

ir_sort is faster than std::sort 82.42 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004262253345

#####################################################################
Debug: arrayLength                    = 662
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8315, 1685, 
Debug: bestThreshold[maxSpeedIndex]   = 8315

ir_sort is faster than std::sort 83.15 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004016392426

#####################################################################
Debug: arrayLength                    = 663
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8299, 1701, 
Debug: bestThreshold[maxSpeedIndex]   = 8299

ir_sort is faster than std::sort 82.99 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004241333652

#####################################################################
Debug: arrayLength                    = 664
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8230, 1770, 
Debug: bestThreshold[maxSpeedIndex]   = 8230

ir_sort is faster than std::sort 82.3 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003898014755

#####################################################################
Debug: arrayLength                    = 665
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8387, 1613, 
Debug: bestThreshold[maxSpeedIndex]   = 8387

ir_sort is faster than std::sort 83.87 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003914984303

#####################################################################
Debug: arrayLength                    = 666
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8144, 1856, 
Debug: bestThreshold[maxSpeedIndex]   = 8144

ir_sort is faster than std::sort 81.44 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004143918129

#####################################################################
Debug: arrayLength                    = 667
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8208, 1792, 
Debug: bestThreshold[maxSpeedIndex]   = 8208

ir_sort is faster than std::sort 82.08 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004067642113

#####################################################################
Debug: arrayLength                    = 668
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8158, 1842, 
Debug: bestThreshold[maxSpeedIndex]   = 8158

ir_sort is faster than std::sort 81.58 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003990332112

#####################################################################
Debug: arrayLength                    = 669
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8229, 1771, 
Debug: bestThreshold[maxSpeedIndex]   = 8229

ir_sort is faster than std::sort 82.29 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004015185924

#####################################################################
Debug: arrayLength                    = 670
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8381, 1619, 
Debug: bestThreshold[maxSpeedIndex]   = 8381

ir_sort is faster than std::sort 83.81 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004258373793

#####################################################################
Debug: arrayLength                    = 671
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8435, 1565, 
Debug: bestThreshold[maxSpeedIndex]   = 8435

ir_sort is faster than std::sort 84.35 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004953198579

#####################################################################
Debug: arrayLength                    = 672
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8430, 1570, 
Debug: bestThreshold[maxSpeedIndex]   = 8430

ir_sort is faster than std::sort 84.3 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004715262911

#####################################################################
Debug: arrayLength                    = 673
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8420, 1580, 
Debug: bestThreshold[maxSpeedIndex]   = 8420

ir_sort is faster than std::sort 84.2 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004396735508

#####################################################################
Debug: arrayLength                    = 674
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8393, 1607, 
Debug: bestThreshold[maxSpeedIndex]   = 8393

ir_sort is faster than std::sort 83.93 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004231450857

#####################################################################
Debug: arrayLength                    = 675
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8863, 1137, 
Debug: bestThreshold[maxSpeedIndex]   = 8863

ir_sort is faster than std::sort 88.63 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006406221016

#####################################################################
Debug: arrayLength                    = 676
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8815, 1185, 
Debug: bestThreshold[maxSpeedIndex]   = 8815

ir_sort is faster than std::sort 88.15 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006324176944

#####################################################################
Debug: arrayLength                    = 677
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8823, 1177, 
Debug: bestThreshold[maxSpeedIndex]   = 8823

ir_sort is faster than std::sort 88.23 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005445914943

#####################################################################
Debug: arrayLength                    = 678
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8843, 1157, 
Debug: bestThreshold[maxSpeedIndex]   = 8843

ir_sort is faster than std::sort 88.43 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005186339185

#####################################################################
Debug: arrayLength                    = 679
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8839, 1161, 
Debug: bestThreshold[maxSpeedIndex]   = 8839

ir_sort is faster than std::sort 88.39 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005380531894

#####################################################################
Debug: arrayLength                    = 680
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6953, 3047, 
Debug: bestThreshold[maxSpeedIndex]   = 6953

ir_sort is faster than std::sort 69.53 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002978504828

#####################################################################
Debug: arrayLength                    = 681
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7623, 2377, 
Debug: bestThreshold[maxSpeedIndex]   = 7623

ir_sort is faster than std::sort 76.23 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003097348301

#####################################################################
Debug: arrayLength                    = 682
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7569, 2431, 
Debug: bestThreshold[maxSpeedIndex]   = 7569

ir_sort is faster than std::sort 75.69 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002877014529

#####################################################################
Debug: arrayLength                    = 683
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7750, 2250, 
Debug: bestThreshold[maxSpeedIndex]   = 7750

ir_sort is faster than std::sort 77.5 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003219302481

#####################################################################
Debug: arrayLength                    = 684
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7655, 2345, 
Debug: bestThreshold[maxSpeedIndex]   = 7655

ir_sort is faster than std::sort 76.55 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003605471198

#####################################################################
Debug: arrayLength                    = 685
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7768, 2232, 
Debug: bestThreshold[maxSpeedIndex]   = 7768

ir_sort is faster than std::sort 77.68 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003354366629

#####################################################################
Debug: arrayLength                    = 686
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7707, 2293, 
Debug: bestThreshold[maxSpeedIndex]   = 7707

ir_sort is faster than std::sort 77.07 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003575807655

#####################################################################
Debug: arrayLength                    = 687
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7863, 2137, 
Debug: bestThreshold[maxSpeedIndex]   = 7863

ir_sort is faster than std::sort 78.63 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003676048514

#####################################################################
Debug: arrayLength                    = 688
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7688, 2312, 
Debug: bestThreshold[maxSpeedIndex]   = 7688

ir_sort is faster than std::sort 76.88 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004169637535

#####################################################################
Debug: arrayLength                    = 689
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7699, 2301, 
Debug: bestThreshold[maxSpeedIndex]   = 7699

ir_sort is faster than std::sort 76.99 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003644706813

#####################################################################
Debug: arrayLength                    = 690
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7708, 2292, 
Debug: bestThreshold[maxSpeedIndex]   = 7708

ir_sort is faster than std::sort 77.08 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00279634921

#####################################################################
Debug: arrayLength                    = 691
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7740, 2260, 
Debug: bestThreshold[maxSpeedIndex]   = 7740

ir_sort is faster than std::sort 77.4 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003469048415

#####################################################################
Debug: arrayLength                    = 692
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7717, 2283, 
Debug: bestThreshold[maxSpeedIndex]   = 7717

ir_sort is faster than std::sort 77.17 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003376076577

#####################################################################
Debug: arrayLength                    = 693
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7732, 2268, 
Debug: bestThreshold[maxSpeedIndex]   = 7732

ir_sort is faster than std::sort 77.32 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003631721144

#####################################################################
Debug: arrayLength                    = 694
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7885, 2115, 
Debug: bestThreshold[maxSpeedIndex]   = 7885

ir_sort is faster than std::sort 78.85 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00374129393

#####################################################################
Debug: arrayLength                    = 695
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7964, 2036, 
Debug: bestThreshold[maxSpeedIndex]   = 7964

ir_sort is faster than std::sort 79.64 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004008618802

#####################################################################
Debug: arrayLength                    = 696
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7792, 2208, 
Debug: bestThreshold[maxSpeedIndex]   = 7792

ir_sort is faster than std::sort 77.92 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003958675458

#####################################################################
Debug: arrayLength                    = 697
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7867, 2133, 
Debug: bestThreshold[maxSpeedIndex]   = 7867

ir_sort is faster than std::sort 78.67 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003747106771

#####################################################################
Debug: arrayLength                    = 698
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7954, 2046, 
Debug: bestThreshold[maxSpeedIndex]   = 7954

ir_sort is faster than std::sort 79.54 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003589631595

#####################################################################
Debug: arrayLength                    = 699
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7997, 2003, 
Debug: bestThreshold[maxSpeedIndex]   = 7997

ir_sort is faster than std::sort 79.97 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003788391639

#####################################################################
Debug: arrayLength                    = 700
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7925, 2075, 
Debug: bestThreshold[maxSpeedIndex]   = 7925

ir_sort is faster than std::sort 79.25 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003795153188

#####################################################################
Debug: arrayLength                    = 701
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7981, 2019, 
Debug: bestThreshold[maxSpeedIndex]   = 7981

ir_sort is faster than std::sort 79.81 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003102815252

#####################################################################
Debug: arrayLength                    = 702
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7902, 2098, 
Debug: bestThreshold[maxSpeedIndex]   = 7902

ir_sort is faster than std::sort 79.02 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003706733219

#####################################################################
Debug: arrayLength                    = 703
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8056, 1944, 
Debug: bestThreshold[maxSpeedIndex]   = 8056

ir_sort is faster than std::sort 80.56 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004045963657

#####################################################################
Debug: arrayLength                    = 704
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7927, 2073, 
Debug: bestThreshold[maxSpeedIndex]   = 7927

ir_sort is faster than std::sort 79.27 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003523723933

#####################################################################
Debug: arrayLength                    = 705
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7981, 2019, 
Debug: bestThreshold[maxSpeedIndex]   = 7981

ir_sort is faster than std::sort 79.81 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00385939259

#####################################################################
Debug: arrayLength                    = 706
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8027, 1973, 
Debug: bestThreshold[maxSpeedIndex]   = 8027

ir_sort is faster than std::sort 80.27 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003668861236

#####################################################################
Debug: arrayLength                    = 707
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7721, 2279, 
Debug: bestThreshold[maxSpeedIndex]   = 7721

ir_sort is faster than std::sort 77.21 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003455748491

#####################################################################
Debug: arrayLength                    = 708
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7680, 2320, 
Debug: bestThreshold[maxSpeedIndex]   = 7680

ir_sort is faster than std::sort 76.8 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003946279457

#####################################################################
Debug: arrayLength                    = 709
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7611, 2389, 
Debug: bestThreshold[maxSpeedIndex]   = 7611

ir_sort is faster than std::sort 76.11 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002952114797

#####################################################################
Debug: arrayLength                    = 710
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7656, 2344, 
Debug: bestThreshold[maxSpeedIndex]   = 7656

ir_sort is faster than std::sort 76.56 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003418719505

#####################################################################
Debug: arrayLength                    = 711
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8015, 1985, 
Debug: bestThreshold[maxSpeedIndex]   = 8015

ir_sort is faster than std::sort 80.15 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003764720939

#####################################################################
Debug: arrayLength                    = 712
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8041, 1959, 
Debug: bestThreshold[maxSpeedIndex]   = 8041

ir_sort is faster than std::sort 80.41 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004247712897

#####################################################################
Debug: arrayLength                    = 713
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8003, 1997, 
Debug: bestThreshold[maxSpeedIndex]   = 8003

ir_sort is faster than std::sort 80.03 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002924501251

#####################################################################
Debug: arrayLength                    = 714
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7979, 2021, 
Debug: bestThreshold[maxSpeedIndex]   = 7979

ir_sort is faster than std::sort 79.79 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003352813411

#####################################################################
Debug: arrayLength                    = 715
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7779, 2221, 
Debug: bestThreshold[maxSpeedIndex]   = 7779

ir_sort is faster than std::sort 77.79 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003066201529

#####################################################################
Debug: arrayLength                    = 716
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8138, 1862, 
Debug: bestThreshold[maxSpeedIndex]   = 8138

ir_sort is faster than std::sort 81.38 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00484895663

#####################################################################
Debug: arrayLength                    = 717
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8030, 1970, 
Debug: bestThreshold[maxSpeedIndex]   = 8030

ir_sort is faster than std::sort 80.3 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003979999672

#####################################################################
Debug: arrayLength                    = 718
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8009, 1991, 
Debug: bestThreshold[maxSpeedIndex]   = 8009

ir_sort is faster than std::sort 80.09 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004228852295

#####################################################################
Debug: arrayLength                    = 719
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7843, 2157, 
Debug: bestThreshold[maxSpeedIndex]   = 7843

ir_sort is faster than std::sort 78.43 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003679726595

#####################################################################
Debug: arrayLength                    = 720
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7848, 2152, 
Debug: bestThreshold[maxSpeedIndex]   = 7848

ir_sort is faster than std::sort 78.48 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003303985031

#####################################################################
Debug: arrayLength                    = 721
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7449, 2551, 
Debug: bestThreshold[maxSpeedIndex]   = 7449

ir_sort is faster than std::sort 74.49 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002959869523

#####################################################################
Debug: arrayLength                    = 722
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7311, 2689, 
Debug: bestThreshold[maxSpeedIndex]   = 7311

ir_sort is faster than std::sort 73.11 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003188584122

#####################################################################
Debug: arrayLength                    = 723
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7242, 2758, 
Debug: bestThreshold[maxSpeedIndex]   = 7242

ir_sort is faster than std::sort 72.42 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002980306593

#####################################################################
Debug: arrayLength                    = 724
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7255, 2745, 
Debug: bestThreshold[maxSpeedIndex]   = 7255

ir_sort is faster than std::sort 72.55 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003387971734

#####################################################################
Debug: arrayLength                    = 725
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7214, 2786, 
Debug: bestThreshold[maxSpeedIndex]   = 7214

ir_sort is faster than std::sort 72.14 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002405273231

#####################################################################
Debug: arrayLength                    = 726
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7239, 2761, 
Debug: bestThreshold[maxSpeedIndex]   = 7239

ir_sort is faster than std::sort 72.39 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00291281176

#####################################################################
Debug: arrayLength                    = 727
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7298, 2702, 
Debug: bestThreshold[maxSpeedIndex]   = 7298

ir_sort is faster than std::sort 72.98 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002415424018

#####################################################################
Debug: arrayLength                    = 728
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7340, 2660, 
Debug: bestThreshold[maxSpeedIndex]   = 7340

ir_sort is faster than std::sort 73.4 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00283771328

#####################################################################
Debug: arrayLength                    = 729
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7336, 2664, 
Debug: bestThreshold[maxSpeedIndex]   = 7336

ir_sort is faster than std::sort 73.36 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003179286372

#####################################################################
Debug: arrayLength                    = 730
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7275, 2725, 
Debug: bestThreshold[maxSpeedIndex]   = 7275

ir_sort is faster than std::sort 72.75 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002984122993

#####################################################################
Debug: arrayLength                    = 731
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7329, 2671, 
Debug: bestThreshold[maxSpeedIndex]   = 7329

ir_sort is faster than std::sort 73.29 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003005037259

#####################################################################
Debug: arrayLength                    = 732
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7411, 2589, 
Debug: bestThreshold[maxSpeedIndex]   = 7411

ir_sort is faster than std::sort 74.11 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002946155035

#####################################################################
Debug: arrayLength                    = 733
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7346, 2654, 
Debug: bestThreshold[maxSpeedIndex]   = 7346

ir_sort is faster than std::sort 73.46 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002897726066

#####################################################################
Debug: arrayLength                    = 734
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7392, 2608, 
Debug: bestThreshold[maxSpeedIndex]   = 7392

ir_sort is faster than std::sort 73.92 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003343274234

#####################################################################
Debug: arrayLength                    = 735
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7244, 2756, 
Debug: bestThreshold[maxSpeedIndex]   = 7244

ir_sort is faster than std::sort 72.44 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002478383298

#####################################################################
Debug: arrayLength                    = 736
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7252, 2748, 
Debug: bestThreshold[maxSpeedIndex]   = 7252

ir_sort is faster than std::sort 72.52 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002607607711

#####################################################################
Debug: arrayLength                    = 737
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6991, 3009, 
Debug: bestThreshold[maxSpeedIndex]   = 6991

ir_sort is faster than std::sort 69.91 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002699569062

#####################################################################
Debug: arrayLength                    = 738
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7172, 2828, 
Debug: bestThreshold[maxSpeedIndex]   = 7172

ir_sort is faster than std::sort 71.72 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002755593477

#####################################################################
Debug: arrayLength                    = 739
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7262, 2738, 
Debug: bestThreshold[maxSpeedIndex]   = 7262

ir_sort is faster than std::sort 72.62 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00279838608

#####################################################################
Debug: arrayLength                    = 740
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7271, 2729, 
Debug: bestThreshold[maxSpeedIndex]   = 7271

ir_sort is faster than std::sort 72.71 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00338571427

#####################################################################
Debug: arrayLength                    = 741
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7264, 2736, 
Debug: bestThreshold[maxSpeedIndex]   = 7264

ir_sort is faster than std::sort 72.64 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003052129212

#####################################################################
Debug: arrayLength                    = 742
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7492, 2508, 
Debug: bestThreshold[maxSpeedIndex]   = 7492

ir_sort is faster than std::sort 74.92 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003840168488

#####################################################################
Debug: arrayLength                    = 743
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7570, 2430, 
Debug: bestThreshold[maxSpeedIndex]   = 7570

ir_sort is faster than std::sort 75.7 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003505258466

#####################################################################
Debug: arrayLength                    = 744
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7558, 2442, 
Debug: bestThreshold[maxSpeedIndex]   = 7558

ir_sort is faster than std::sort 75.58 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003759747947

#####################################################################
Debug: arrayLength                    = 745
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7540, 2460, 
Debug: bestThreshold[maxSpeedIndex]   = 7540

ir_sort is faster than std::sort 75.4 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002868515891

#####################################################################
Debug: arrayLength                    = 746
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7499, 2501, 
Debug: bestThreshold[maxSpeedIndex]   = 7499

ir_sort is faster than std::sort 74.99 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002994750972

#####################################################################
Debug: arrayLength                    = 747
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7571, 2429, 
Debug: bestThreshold[maxSpeedIndex]   = 7571

ir_sort is faster than std::sort 75.71 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003291979598

#####################################################################
Debug: arrayLength                    = 748
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7333, 2667, 
Debug: bestThreshold[maxSpeedIndex]   = 7333

ir_sort is faster than std::sort 73.33 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002863717646

#####################################################################
Debug: arrayLength                    = 749
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7298, 2702, 
Debug: bestThreshold[maxSpeedIndex]   = 7298

ir_sort is faster than std::sort 72.98 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002759268008

#####################################################################
Debug: arrayLength                    = 750
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7043, 2957, 
Debug: bestThreshold[maxSpeedIndex]   = 7043

ir_sort is faster than std::sort 70.43 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002627845172

#####################################################################
Debug: arrayLength                    = 751
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7110, 2890, 
Debug: bestThreshold[maxSpeedIndex]   = 7110

ir_sort is faster than std::sort 71.1 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003247421802

#####################################################################
Debug: arrayLength                    = 752
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7484, 2516, 
Debug: bestThreshold[maxSpeedIndex]   = 7484

ir_sort is faster than std::sort 74.84 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00265999121

#####################################################################
Debug: arrayLength                    = 753
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7281, 2719, 
Debug: bestThreshold[maxSpeedIndex]   = 7281

ir_sort is faster than std::sort 72.81 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003004261044

#####################################################################
Debug: arrayLength                    = 754
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7377, 2623, 
Debug: bestThreshold[maxSpeedIndex]   = 7377

ir_sort is faster than std::sort 73.77 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002504402673

#####################################################################
Debug: arrayLength                    = 755
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7195, 2805, 
Debug: bestThreshold[maxSpeedIndex]   = 7195

ir_sort is faster than std::sort 71.95 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002483057237

#####################################################################
Debug: arrayLength                    = 756
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7242, 2758, 
Debug: bestThreshold[maxSpeedIndex]   = 7242

ir_sort is faster than std::sort 72.42 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00269857882

#####################################################################
Debug: arrayLength                    = 757
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7675, 2325, 
Debug: bestThreshold[maxSpeedIndex]   = 7675

ir_sort is faster than std::sort 76.75 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004394294892

#####################################################################
Debug: arrayLength                    = 758
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7542, 2458, 
Debug: bestThreshold[maxSpeedIndex]   = 7542

ir_sort is faster than std::sort 75.42 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003742382527

#####################################################################
Debug: arrayLength                    = 759
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7693, 2307, 
Debug: bestThreshold[maxSpeedIndex]   = 7693

ir_sort is faster than std::sort 76.93 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003316405411

#####################################################################
Debug: arrayLength                    = 760
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7500, 2500, 
Debug: bestThreshold[maxSpeedIndex]   = 7500

ir_sort is faster than std::sort 75 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002666499455

#####################################################################
Debug: arrayLength                    = 761
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7435, 2565, 
Debug: bestThreshold[maxSpeedIndex]   = 7435

ir_sort is faster than std::sort 74.35 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003674845144

#####################################################################
Debug: arrayLength                    = 762
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8329, 1671, 
Debug: bestThreshold[maxSpeedIndex]   = 8329

ir_sort is faster than std::sort 83.29 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00378046879

#####################################################################
Debug: arrayLength                    = 763
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8193, 1807, 
Debug: bestThreshold[maxSpeedIndex]   = 8193

ir_sort is faster than std::sort 81.93 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003510222302

#####################################################################
Debug: arrayLength                    = 764
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8102, 1898, 
Debug: bestThreshold[maxSpeedIndex]   = 8102

ir_sort is faster than std::sort 81.02 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003895516755

#####################################################################
Debug: arrayLength                    = 765
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8152, 1848, 
Debug: bestThreshold[maxSpeedIndex]   = 8152

ir_sort is faster than std::sort 81.52 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003323923475

#####################################################################
Debug: arrayLength                    = 766
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8005, 1995, 
Debug: bestThreshold[maxSpeedIndex]   = 8005

ir_sort is faster than std::sort 80.05 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004255463656

#####################################################################
Debug: arrayLength                    = 767
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7842, 2158, 
Debug: bestThreshold[maxSpeedIndex]   = 7842

ir_sort is faster than std::sort 78.42 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003247369962

#####################################################################
Debug: arrayLength                    = 768
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7748, 2252, 
Debug: bestThreshold[maxSpeedIndex]   = 7748

ir_sort is faster than std::sort 77.48 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003552778304

#####################################################################
Debug: arrayLength                    = 769
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7650, 2350, 
Debug: bestThreshold[maxSpeedIndex]   = 7650

ir_sort is faster than std::sort 76.5 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003184358088

#####################################################################
Debug: arrayLength                    = 770
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7858, 2142, 
Debug: bestThreshold[maxSpeedIndex]   = 7858

ir_sort is faster than std::sort 78.58 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003972971763

#####################################################################
Debug: arrayLength                    = 771
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7851, 2149, 
Debug: bestThreshold[maxSpeedIndex]   = 7851

ir_sort is faster than std::sort 78.51 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003506843334

#####################################################################
Debug: arrayLength                    = 772
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7781, 2219, 
Debug: bestThreshold[maxSpeedIndex]   = 7781

ir_sort is faster than std::sort 77.81 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003828552657

#####################################################################
Debug: arrayLength                    = 773
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7709, 2291, 
Debug: bestThreshold[maxSpeedIndex]   = 7709

ir_sort is faster than std::sort 77.09 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003865991212

#####################################################################
Debug: arrayLength                    = 774
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7656, 2344, 
Debug: bestThreshold[maxSpeedIndex]   = 7656

ir_sort is faster than std::sort 76.56 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003478394897

#####################################################################
Debug: arrayLength                    = 775
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7437, 2563, 
Debug: bestThreshold[maxSpeedIndex]   = 7437

ir_sort is faster than std::sort 74.37 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002993141239

#####################################################################
Debug: arrayLength                    = 776
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7599, 2401, 
Debug: bestThreshold[maxSpeedIndex]   = 7599

ir_sort is faster than std::sort 75.99 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003044876491

#####################################################################
Debug: arrayLength                    = 777
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7232, 2768, 
Debug: bestThreshold[maxSpeedIndex]   = 7232

ir_sort is faster than std::sort 72.32 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003590397211

#####################################################################
Debug: arrayLength                    = 778
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7435, 2565, 
Debug: bestThreshold[maxSpeedIndex]   = 7435

ir_sort is faster than std::sort 74.35 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003151727261

#####################################################################
Debug: arrayLength                    = 779
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7483, 2517, 
Debug: bestThreshold[maxSpeedIndex]   = 7483

ir_sort is faster than std::sort 74.83 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002836813427

#####################################################################
Debug: arrayLength                    = 780
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7335, 2665, 
Debug: bestThreshold[maxSpeedIndex]   = 7335

ir_sort is faster than std::sort 73.35 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002869199619

#####################################################################
Debug: arrayLength                    = 781
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7293, 2707, 
Debug: bestThreshold[maxSpeedIndex]   = 7293

ir_sort is faster than std::sort 72.93 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003489443161

#####################################################################
Debug: arrayLength                    = 782
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7388, 2612, 
Debug: bestThreshold[maxSpeedIndex]   = 7388

ir_sort is faster than std::sort 73.88 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003025228737

#####################################################################
Debug: arrayLength                    = 783
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7257, 2743, 
Debug: bestThreshold[maxSpeedIndex]   = 7257

ir_sort is faster than std::sort 72.57 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003069914909

#####################################################################
Debug: arrayLength                    = 784
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7197, 2803, 
Debug: bestThreshold[maxSpeedIndex]   = 7197

ir_sort is faster than std::sort 71.97 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002673563759

#####################################################################
Debug: arrayLength                    = 785
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6940, 3060, 
Debug: bestThreshold[maxSpeedIndex]   = 6940

ir_sort is faster than std::sort 69.4 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004418049875

#####################################################################
Debug: arrayLength                    = 786
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6023, 3977, 
Debug: bestThreshold[maxSpeedIndex]   = 6023

ir_sort is faster than std::sort 60.23 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010825794475

#####################################################################
Debug: arrayLength                    = 787
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7332, 2668, 
Debug: bestThreshold[maxSpeedIndex]   = 7332

ir_sort is faster than std::sort 73.32 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006791528257

#####################################################################
Debug: arrayLength                    = 788
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7548, 2452, 
Debug: bestThreshold[maxSpeedIndex]   = 7548

ir_sort is faster than std::sort 75.48 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004407802697

#####################################################################
Debug: arrayLength                    = 789
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7542, 2458, 
Debug: bestThreshold[maxSpeedIndex]   = 7542

ir_sort is faster than std::sort 75.42 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003076384056

#####################################################################
Debug: arrayLength                    = 790
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7287, 2713, 
Debug: bestThreshold[maxSpeedIndex]   = 7287

ir_sort is faster than std::sort 72.87 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007553347839

#####################################################################
Debug: arrayLength                    = 791
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7595, 2405, 
Debug: bestThreshold[maxSpeedIndex]   = 7595

ir_sort is faster than std::sort 75.95 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005124498321

#####################################################################
Debug: arrayLength                    = 792
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7927, 2073, 
Debug: bestThreshold[maxSpeedIndex]   = 7927

ir_sort is faster than std::sort 79.27 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004152646945

#####################################################################
Debug: arrayLength                    = 793
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8034, 1966, 
Debug: bestThreshold[maxSpeedIndex]   = 8034

ir_sort is faster than std::sort 80.34 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003986514554

#####################################################################
Debug: arrayLength                    = 794
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8046, 1954, 
Debug: bestThreshold[maxSpeedIndex]   = 8046

ir_sort is faster than std::sort 80.46 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004051615906

#####################################################################
Debug: arrayLength                    = 795
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8166, 1834, 
Debug: bestThreshold[maxSpeedIndex]   = 8166

ir_sort is faster than std::sort 81.66 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004068040665

#####################################################################
Debug: arrayLength                    = 796
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8107, 1893, 
Debug: bestThreshold[maxSpeedIndex]   = 8107

ir_sort is faster than std::sort 81.07 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004768176119

#####################################################################
Debug: arrayLength                    = 797
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8188, 1812, 
Debug: bestThreshold[maxSpeedIndex]   = 8188

ir_sort is faster than std::sort 81.88 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003974950209

#####################################################################
Debug: arrayLength                    = 798
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8201, 1799, 
Debug: bestThreshold[maxSpeedIndex]   = 8201

ir_sort is faster than std::sort 82.01 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004812135092

#####################################################################
Debug: arrayLength                    = 799
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8487, 1513, 
Debug: bestThreshold[maxSpeedIndex]   = 8487

ir_sort is faster than std::sort 84.87 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004789043312

#####################################################################
Debug: arrayLength                    = 800
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8391, 1609, 
Debug: bestThreshold[maxSpeedIndex]   = 8391

ir_sort is faster than std::sort 83.91 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004634327409

#####################################################################
Debug: arrayLength                    = 801
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8215, 1785, 
Debug: bestThreshold[maxSpeedIndex]   = 8215

ir_sort is faster than std::sort 82.15 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004348138319

#####################################################################
Debug: arrayLength                    = 802
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8247, 1753, 
Debug: bestThreshold[maxSpeedIndex]   = 8247

ir_sort is faster than std::sort 82.47 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004797466071

#####################################################################
Debug: arrayLength                    = 803
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8849, 1151, 
Debug: bestThreshold[maxSpeedIndex]   = 8849

ir_sort is faster than std::sort 88.49 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005523033822

#####################################################################
Debug: arrayLength                    = 804
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8694, 1306, 
Debug: bestThreshold[maxSpeedIndex]   = 8694

ir_sort is faster than std::sort 86.94 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005168953582

#####################################################################
Debug: arrayLength                    = 805
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8675, 1325, 
Debug: bestThreshold[maxSpeedIndex]   = 8675

ir_sort is faster than std::sort 86.75 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005128621939

#####################################################################
Debug: arrayLength                    = 806
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8724, 1276, 
Debug: bestThreshold[maxSpeedIndex]   = 8724

ir_sort is faster than std::sort 87.24 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005407527049

#####################################################################
Debug: arrayLength                    = 807
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8661, 1339, 
Debug: bestThreshold[maxSpeedIndex]   = 8661

ir_sort is faster than std::sort 86.61 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005289442258

#####################################################################
Debug: arrayLength                    = 808
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6685, 3315, 
Debug: bestThreshold[maxSpeedIndex]   = 6685

ir_sort is faster than std::sort 66.85 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003028715577

#####################################################################
Debug: arrayLength                    = 809
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6892, 3108, 
Debug: bestThreshold[maxSpeedIndex]   = 6892

ir_sort is faster than std::sort 68.92 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002507433376

#####################################################################
Debug: arrayLength                    = 810
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7109, 2891, 
Debug: bestThreshold[maxSpeedIndex]   = 7109

ir_sort is faster than std::sort 71.09 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003504373715

#####################################################################
Debug: arrayLength                    = 811
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7156, 2844, 
Debug: bestThreshold[maxSpeedIndex]   = 7156

ir_sort is faster than std::sort 71.56 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003026514866

#####################################################################
Debug: arrayLength                    = 812
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7161, 2839, 
Debug: bestThreshold[maxSpeedIndex]   = 7161

ir_sort is faster than std::sort 71.61 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002868318595

#####################################################################
Debug: arrayLength                    = 813
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7213, 2787, 
Debug: bestThreshold[maxSpeedIndex]   = 7213

ir_sort is faster than std::sort 72.13 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00355033387

#####################################################################
Debug: arrayLength                    = 814
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7255, 2745, 
Debug: bestThreshold[maxSpeedIndex]   = 7255

ir_sort is faster than std::sort 72.55 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003208557582

#####################################################################
Debug: arrayLength                    = 815
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7255, 2745, 
Debug: bestThreshold[maxSpeedIndex]   = 7255

ir_sort is faster than std::sort 72.55 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003698142826

#####################################################################
Debug: arrayLength                    = 816
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7263, 2737, 
Debug: bestThreshold[maxSpeedIndex]   = 7263

ir_sort is faster than std::sort 72.63 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003088517059

#####################################################################
Debug: arrayLength                    = 817
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7232, 2768, 
Debug: bestThreshold[maxSpeedIndex]   = 7232

ir_sort is faster than std::sort 72.32 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003018783366

#####################################################################
Debug: arrayLength                    = 818
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7205, 2795, 
Debug: bestThreshold[maxSpeedIndex]   = 7205

ir_sort is faster than std::sort 72.05 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004256492861

#####################################################################
Debug: arrayLength                    = 819
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7241, 2759, 
Debug: bestThreshold[maxSpeedIndex]   = 7241

ir_sort is faster than std::sort 72.41 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003503934752

#####################################################################
Debug: arrayLength                    = 820
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7163, 2837, 
Debug: bestThreshold[maxSpeedIndex]   = 7163

ir_sort is faster than std::sort 71.63 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002895986748

#####################################################################
Debug: arrayLength                    = 821
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6957, 3043, 
Debug: bestThreshold[maxSpeedIndex]   = 6957

ir_sort is faster than std::sort 69.57 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002322016362

#####################################################################
Debug: arrayLength                    = 822
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6901, 3099, 
Debug: bestThreshold[maxSpeedIndex]   = 6901

ir_sort is faster than std::sort 69.01 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002366203908

#####################################################################
Debug: arrayLength                    = 823
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6990, 3010, 
Debug: bestThreshold[maxSpeedIndex]   = 6990

ir_sort is faster than std::sort 69.9 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00286380002

#####################################################################
Debug: arrayLength                    = 824
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6918, 3082, 
Debug: bestThreshold[maxSpeedIndex]   = 6918

ir_sort is faster than std::sort 69.18 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003018319296

#####################################################################
Debug: arrayLength                    = 825
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7014, 2986, 
Debug: bestThreshold[maxSpeedIndex]   = 7014

ir_sort is faster than std::sort 70.14 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003010123749

#####################################################################
Debug: arrayLength                    = 826
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6945, 3055, 
Debug: bestThreshold[maxSpeedIndex]   = 6945

ir_sort is faster than std::sort 69.45 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002837001066

#####################################################################
Debug: arrayLength                    = 827
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7004, 2996, 
Debug: bestThreshold[maxSpeedIndex]   = 7004

ir_sort is faster than std::sort 70.04 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003225591832

#####################################################################
Debug: arrayLength                    = 828
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6939, 3061, 
Debug: bestThreshold[maxSpeedIndex]   = 6939

ir_sort is faster than std::sort 69.39 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002875544845

#####################################################################
Debug: arrayLength                    = 829
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6848, 3152, 
Debug: bestThreshold[maxSpeedIndex]   = 6848

ir_sort is faster than std::sort 68.48 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002849497735

#####################################################################
Debug: arrayLength                    = 830
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6719, 3281, 
Debug: bestThreshold[maxSpeedIndex]   = 6719

ir_sort is faster than std::sort 67.19 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002905095247

#####################################################################
Debug: arrayLength                    = 831
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6819, 3181, 
Debug: bestThreshold[maxSpeedIndex]   = 6819

ir_sort is faster than std::sort 68.19 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002992553259

#####################################################################
Debug: arrayLength                    = 832
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6605, 3395, 
Debug: bestThreshold[maxSpeedIndex]   = 6605

ir_sort is faster than std::sort 66.05 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002638534708

#####################################################################
Debug: arrayLength                    = 833
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6788, 3212, 
Debug: bestThreshold[maxSpeedIndex]   = 6788

ir_sort is faster than std::sort 67.88 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002835606871

#####################################################################
Debug: arrayLength                    = 834
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6694, 3306, 
Debug: bestThreshold[maxSpeedIndex]   = 6694

ir_sort is faster than std::sort 66.94 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002601679968

#####################################################################
Debug: arrayLength                    = 835
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6194, 3806, 
Debug: bestThreshold[maxSpeedIndex]   = 6194

ir_sort is faster than std::sort 61.94 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002136591834

#####################################################################
Debug: arrayLength                    = 836
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6194, 3806, 
Debug: bestThreshold[maxSpeedIndex]   = 6194

ir_sort is faster than std::sort 61.94 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00223234124

#####################################################################
Debug: arrayLength                    = 837
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6098, 3902, 
Debug: bestThreshold[maxSpeedIndex]   = 6098

ir_sort is faster than std::sort 60.98 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002204042479

#####################################################################
Debug: arrayLength                    = 838
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6136, 3864, 
Debug: bestThreshold[maxSpeedIndex]   = 6136

ir_sort is faster than std::sort 61.36 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001929678809

#####################################################################
Debug: arrayLength                    = 839
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6463, 3537, 
Debug: bestThreshold[maxSpeedIndex]   = 6463

ir_sort is faster than std::sort 64.63 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002607385719

#####################################################################
Debug: arrayLength                    = 840
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6731, 3269, 
Debug: bestThreshold[maxSpeedIndex]   = 6731

ir_sort is faster than std::sort 67.31 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002422190352

#####################################################################
Debug: arrayLength                    = 841
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6674, 3326, 
Debug: bestThreshold[maxSpeedIndex]   = 6674

ir_sort is faster than std::sort 66.74 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002420506987

#####################################################################
Debug: arrayLength                    = 842
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6603, 3397, 
Debug: bestThreshold[maxSpeedIndex]   = 6603

ir_sort is faster than std::sort 66.03 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002611888367

#####################################################################
Debug: arrayLength                    = 843
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6793, 3207, 
Debug: bestThreshold[maxSpeedIndex]   = 6793

ir_sort is faster than std::sort 67.93 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00333953106

#####################################################################
Debug: arrayLength                    = 844
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7309, 2691, 
Debug: bestThreshold[maxSpeedIndex]   = 7309

ir_sort is faster than std::sort 73.09 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003683706033

#####################################################################
Debug: arrayLength                    = 845
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7253, 2747, 
Debug: bestThreshold[maxSpeedIndex]   = 7253

ir_sort is faster than std::sort 72.53 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003723039236

#####################################################################
Debug: arrayLength                    = 846
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7413, 2587, 
Debug: bestThreshold[maxSpeedIndex]   = 7413

ir_sort is faster than std::sort 74.13 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003225771079

#####################################################################
Debug: arrayLength                    = 847
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7436, 2564, 
Debug: bestThreshold[maxSpeedIndex]   = 7436

ir_sort is faster than std::sort 74.36 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003131401433

#####################################################################
Debug: arrayLength                    = 848
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7247, 2753, 
Debug: bestThreshold[maxSpeedIndex]   = 7247

ir_sort is faster than std::sort 72.47 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00266515513

#####################################################################
Debug: arrayLength                    = 849
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6573, 3427, 
Debug: bestThreshold[maxSpeedIndex]   = 6573

ir_sort is faster than std::sort 65.73 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001463608785

#####################################################################
Debug: arrayLength                    = 850
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6160, 3840, 
Debug: bestThreshold[maxSpeedIndex]   = 6160

ir_sort is faster than std::sort 61.6 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001970185586

#####################################################################
Debug: arrayLength                    = 851
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6295, 3705, 
Debug: bestThreshold[maxSpeedIndex]   = 6295

ir_sort is faster than std::sort 62.95 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002803171542

#####################################################################
Debug: arrayLength                    = 852
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6860, 3140, 
Debug: bestThreshold[maxSpeedIndex]   = 6860

ir_sort is faster than std::sort 68.6 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002971192063

#####################################################################
Debug: arrayLength                    = 853
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6746, 3254, 
Debug: bestThreshold[maxSpeedIndex]   = 6746

ir_sort is faster than std::sort 67.46 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003093626611

#####################################################################
Debug: arrayLength                    = 854
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6897, 3103, 
Debug: bestThreshold[maxSpeedIndex]   = 6897

ir_sort is faster than std::sort 68.97 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002461349642

#####################################################################
Debug: arrayLength                    = 855
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6929, 3071, 
Debug: bestThreshold[maxSpeedIndex]   = 6929

ir_sort is faster than std::sort 69.29 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002897675838

#####################################################################
Debug: arrayLength                    = 856
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6861, 3139, 
Debug: bestThreshold[maxSpeedIndex]   = 6861

ir_sort is faster than std::sort 68.61 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003045716628

#####################################################################
Debug: arrayLength                    = 857
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6692, 3308, 
Debug: bestThreshold[maxSpeedIndex]   = 6692

ir_sort is faster than std::sort 66.92 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002751049154

#####################################################################
Debug: arrayLength                    = 858
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6698, 3302, 
Debug: bestThreshold[maxSpeedIndex]   = 6698

ir_sort is faster than std::sort 66.98 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003134566298

#####################################################################
Debug: arrayLength                    = 859
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6358, 3642, 
Debug: bestThreshold[maxSpeedIndex]   = 6358

ir_sort is faster than std::sort 63.58 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001901942595

#####################################################################
Debug: arrayLength                    = 860
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6702, 3298, 
Debug: bestThreshold[maxSpeedIndex]   = 6702

ir_sort is faster than std::sort 67.02 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002698889533

#####################################################################
Debug: arrayLength                    = 861
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6683, 3317, 
Debug: bestThreshold[maxSpeedIndex]   = 6683

ir_sort is faster than std::sort 66.83 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002651704431

#####################################################################
Debug: arrayLength                    = 862
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6420, 3580, 
Debug: bestThreshold[maxSpeedIndex]   = 6420

ir_sort is faster than std::sort 64.2 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002981438619

#####################################################################
Debug: arrayLength                    = 863
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6565, 3435, 
Debug: bestThreshold[maxSpeedIndex]   = 6565

ir_sort is faster than std::sort 65.65 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002587250579

#####################################################################
Debug: arrayLength                    = 864
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6674, 3326, 
Debug: bestThreshold[maxSpeedIndex]   = 6674

ir_sort is faster than std::sort 66.74 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002362358144

#####################################################################
Debug: arrayLength                    = 865
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6685, 3315, 
Debug: bestThreshold[maxSpeedIndex]   = 6685

ir_sort is faster than std::sort 66.85 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002400640311

#####################################################################
Debug: arrayLength                    = 866
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6907, 3093, 
Debug: bestThreshold[maxSpeedIndex]   = 6907

ir_sort is faster than std::sort 69.07 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002595088371

#####################################################################
Debug: arrayLength                    = 867
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6802, 3198, 
Debug: bestThreshold[maxSpeedIndex]   = 6802

ir_sort is faster than std::sort 68.02 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002827188163

#####################################################################
Debug: arrayLength                    = 868
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6768, 3232, 
Debug: bestThreshold[maxSpeedIndex]   = 6768

ir_sort is faster than std::sort 67.68 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002345850848

#####################################################################
Debug: arrayLength                    = 869
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6484, 3516, 
Debug: bestThreshold[maxSpeedIndex]   = 6484

ir_sort is faster than std::sort 64.84 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002343930459

#####################################################################
Debug: arrayLength                    = 870
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6444, 3556, 
Debug: bestThreshold[maxSpeedIndex]   = 6444

ir_sort is faster than std::sort 64.44 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002388704723

#####################################################################
Debug: arrayLength                    = 871
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6354, 3646, 
Debug: bestThreshold[maxSpeedIndex]   = 6354

ir_sort is faster than std::sort 63.54 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002279540592

#####################################################################
Debug: arrayLength                    = 872
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6458, 3542, 
Debug: bestThreshold[maxSpeedIndex]   = 6458

ir_sort is faster than std::sort 64.58 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002395372293

#####################################################################
Debug: arrayLength                    = 873
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6297, 3703, 
Debug: bestThreshold[maxSpeedIndex]   = 6297

ir_sort is faster than std::sort 62.97 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002437471804

#####################################################################
Debug: arrayLength                    = 874
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6636, 3364, 
Debug: bestThreshold[maxSpeedIndex]   = 6636

ir_sort is faster than std::sort 66.36 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00322941074

#####################################################################
Debug: arrayLength                    = 875
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6690, 3310, 
Debug: bestThreshold[maxSpeedIndex]   = 6690

ir_sort is faster than std::sort 66.9 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002215253277

#####################################################################
Debug: arrayLength                    = 876
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6568, 3432, 
Debug: bestThreshold[maxSpeedIndex]   = 6568

ir_sort is faster than std::sort 65.68 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002250539276

#####################################################################
Debug: arrayLength                    = 877
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6528, 3472, 
Debug: bestThreshold[maxSpeedIndex]   = 6528

ir_sort is faster than std::sort 65.28 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00265240698

#####################################################################
Debug: arrayLength                    = 878
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6634, 3366, 
Debug: bestThreshold[maxSpeedIndex]   = 6634

ir_sort is faster than std::sort 66.34 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002531684234

#####################################################################
Debug: arrayLength                    = 879
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6175, 3825, 
Debug: bestThreshold[maxSpeedIndex]   = 6175

ir_sort is faster than std::sort 61.75 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001960633642

#####################################################################
Debug: arrayLength                    = 880
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6927, 3073, 
Debug: bestThreshold[maxSpeedIndex]   = 6927

ir_sort is faster than std::sort 69.27 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002005767568

#####################################################################
Debug: arrayLength                    = 881
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6963, 3037, 
Debug: bestThreshold[maxSpeedIndex]   = 6963

ir_sort is faster than std::sort 69.63 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003122736473

#####################################################################
Debug: arrayLength                    = 882
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6810, 3190, 
Debug: bestThreshold[maxSpeedIndex]   = 6810

ir_sort is faster than std::sort 68.1 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002400029514

#####################################################################
Debug: arrayLength                    = 883
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6597, 3403, 
Debug: bestThreshold[maxSpeedIndex]   = 6597

ir_sort is faster than std::sort 65.97 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002082905676

#####################################################################
Debug: arrayLength                    = 884
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6636, 3364, 
Debug: bestThreshold[maxSpeedIndex]   = 6636

ir_sort is faster than std::sort 66.36 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002931567722

#####################################################################
Debug: arrayLength                    = 885
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7024, 2976, 
Debug: bestThreshold[maxSpeedIndex]   = 7024

ir_sort is faster than std::sort 70.24 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00252034658

#####################################################################
Debug: arrayLength                    = 886
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6888, 3112, 
Debug: bestThreshold[maxSpeedIndex]   = 6888

ir_sort is faster than std::sort 68.88 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002751486813

#####################################################################
Debug: arrayLength                    = 887
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5696, 4304, 
Debug: bestThreshold[maxSpeedIndex]   = 5696

ir_sort is faster than std::sort 56.96 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000274337585

#####################################################################
Debug: arrayLength                    = 888
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 2897, 7103, 
Debug: bestThreshold[maxSpeedIndex]   = 7103

std::sort is faster than ir_sort 71.03 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9841206780715

#####################################################################
Debug: arrayLength                    = 889
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6884, 3116, 
Debug: bestThreshold[maxSpeedIndex]   = 6884

ir_sort is faster than std::sort 68.84 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001684351082

#####################################################################
Debug: arrayLength                    = 890
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 8017, 1983, 
Debug: bestThreshold[maxSpeedIndex]   = 8017

ir_sort is faster than std::sort 80.17 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00286877484

#####################################################################
Debug: arrayLength                    = 891
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7829, 2171, 
Debug: bestThreshold[maxSpeedIndex]   = 7829

ir_sort is faster than std::sort 78.29 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002557570519

#####################################################################
Debug: arrayLength                    = 892
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7703, 2297, 
Debug: bestThreshold[maxSpeedIndex]   = 7703

ir_sort is faster than std::sort 77.03 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002411685468

#####################################################################
Debug: arrayLength                    = 893
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7669, 2331, 
Debug: bestThreshold[maxSpeedIndex]   = 7669

ir_sort is faster than std::sort 76.69 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002824826648

#####################################################################
Debug: arrayLength                    = 894
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7544, 2456, 
Debug: bestThreshold[maxSpeedIndex]   = 7544

ir_sort is faster than std::sort 75.44 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002225112079

#####################################################################
Debug: arrayLength                    = 895
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7335, 2665, 
Debug: bestThreshold[maxSpeedIndex]   = 7335

ir_sort is faster than std::sort 73.35 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002321303719

#####################################################################
Debug: arrayLength                    = 896
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6596, 3404, 
Debug: bestThreshold[maxSpeedIndex]   = 6596

ir_sort is faster than std::sort 65.96 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004499529167

#####################################################################
Debug: arrayLength                    = 897
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5426, 4574, 
Debug: bestThreshold[maxSpeedIndex]   = 5426

ir_sort is faster than std::sort 54.26 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011245397874

#####################################################################
Debug: arrayLength                    = 898
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7004, 2996, 
Debug: bestThreshold[maxSpeedIndex]   = 7004

ir_sort is faster than std::sort 70.04 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002380673447

#####################################################################
Debug: arrayLength                    = 899
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7154, 2846, 
Debug: bestThreshold[maxSpeedIndex]   = 7154

ir_sort is faster than std::sort 71.54 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001752015394

#####################################################################
Debug: arrayLength                    = 900
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6849, 3151, 
Debug: bestThreshold[maxSpeedIndex]   = 6849

ir_sort is faster than std::sort 68.49 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002778838913

#####################################################################
Debug: arrayLength                    = 901
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7280, 2720, 
Debug: bestThreshold[maxSpeedIndex]   = 7280

ir_sort is faster than std::sort 72.8 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002702123366

#####################################################################
Debug: arrayLength                    = 902
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7190, 2810, 
Debug: bestThreshold[maxSpeedIndex]   = 7190

ir_sort is faster than std::sort 71.9 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002218149666

#####################################################################
Debug: arrayLength                    = 903
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7267, 2733, 
Debug: bestThreshold[maxSpeedIndex]   = 7267

ir_sort is faster than std::sort 72.67 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002427398958

#####################################################################
Debug: arrayLength                    = 904
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7040, 2960, 
Debug: bestThreshold[maxSpeedIndex]   = 7040

ir_sort is faster than std::sort 70.4 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00267712298

#####################################################################
Debug: arrayLength                    = 905
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6308, 3692, 
Debug: bestThreshold[maxSpeedIndex]   = 6308

ir_sort is faster than std::sort 63.08 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005053700123

#####################################################################
Debug: arrayLength                    = 906
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7258, 2742, 
Debug: bestThreshold[maxSpeedIndex]   = 7258

ir_sort is faster than std::sort 72.58 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003183920155

#####################################################################
Debug: arrayLength                    = 907
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5633, 4367, 
Debug: bestThreshold[maxSpeedIndex]   = 5633

ir_sort is faster than std::sort 56.33 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01600811932

#####################################################################
Debug: arrayLength                    = 908
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5789, 4211, 
Debug: bestThreshold[maxSpeedIndex]   = 5789

ir_sort is faster than std::sort 57.89 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01328481081

#####################################################################
Debug: arrayLength                    = 909
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6931, 3069, 
Debug: bestThreshold[maxSpeedIndex]   = 6931

ir_sort is faster than std::sort 69.31 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00394989536

#####################################################################
Debug: arrayLength                    = 910
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7220, 2780, 
Debug: bestThreshold[maxSpeedIndex]   = 7220

ir_sort is faster than std::sort 72.2 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00231433028

#####################################################################
Debug: arrayLength                    = 911
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7295, 2705, 
Debug: bestThreshold[maxSpeedIndex]   = 7295

ir_sort is faster than std::sort 72.95 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00235270083

#####################################################################
Debug: arrayLength                    = 912
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7358, 2642, 
Debug: bestThreshold[maxSpeedIndex]   = 7358

ir_sort is faster than std::sort 73.58 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002850449164

#####################################################################
Debug: arrayLength                    = 913
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7355, 2645, 
Debug: bestThreshold[maxSpeedIndex]   = 7355

ir_sort is faster than std::sort 73.55 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002982590326

#####################################################################
Debug: arrayLength                    = 914
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7421, 2579, 
Debug: bestThreshold[maxSpeedIndex]   = 7421

ir_sort is faster than std::sort 74.21 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002886338057

#####################################################################
Debug: arrayLength                    = 915
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7231, 2769, 
Debug: bestThreshold[maxSpeedIndex]   = 7231

ir_sort is faster than std::sort 72.31 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002761829461

#####################################################################
Debug: arrayLength                    = 916
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7559, 2441, 
Debug: bestThreshold[maxSpeedIndex]   = 7559

ir_sort is faster than std::sort 75.59 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003057372523

#####################################################################
Debug: arrayLength                    = 917
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7286, 2714, 
Debug: bestThreshold[maxSpeedIndex]   = 7286

ir_sort is faster than std::sort 72.86 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002609883452

#####################################################################
Debug: arrayLength                    = 918
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7168, 2832, 
Debug: bestThreshold[maxSpeedIndex]   = 7168

ir_sort is faster than std::sort 71.68 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002572658029

#####################################################################
Debug: arrayLength                    = 919
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6705, 3295, 
Debug: bestThreshold[maxSpeedIndex]   = 6705

ir_sort is faster than std::sort 67.05 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007173457851

#####################################################################
Debug: arrayLength                    = 920
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6812, 3188, 
Debug: bestThreshold[maxSpeedIndex]   = 6812

ir_sort is faster than std::sort 68.12 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002482798852

#####################################################################
Debug: arrayLength                    = 921
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7434, 2566, 
Debug: bestThreshold[maxSpeedIndex]   = 7434

ir_sort is faster than std::sort 74.34 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002255813483

#####################################################################
Debug: arrayLength                    = 922
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7107, 2893, 
Debug: bestThreshold[maxSpeedIndex]   = 7107

ir_sort is faster than std::sort 71.07 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.0020546207

#####################################################################
Debug: arrayLength                    = 923
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7021, 2979, 
Debug: bestThreshold[maxSpeedIndex]   = 7021

ir_sort is faster than std::sort 70.21 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003028666404

#####################################################################
Debug: arrayLength                    = 924
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7157, 2843, 
Debug: bestThreshold[maxSpeedIndex]   = 7157

ir_sort is faster than std::sort 71.57 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002047777848

#####################################################################
Debug: arrayLength                    = 925
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7203, 2797, 
Debug: bestThreshold[maxSpeedIndex]   = 7203

ir_sort is faster than std::sort 72.03 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00229999859

#####################################################################
Debug: arrayLength                    = 926
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7307, 2693, 
Debug: bestThreshold[maxSpeedIndex]   = 7307

ir_sort is faster than std::sort 73.07 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002081454715

#####################################################################
Debug: arrayLength                    = 927
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6715, 3285, 
Debug: bestThreshold[maxSpeedIndex]   = 6715

ir_sort is faster than std::sort 67.15 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007574854984

#####################################################################
Debug: arrayLength                    = 928
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6707, 3293, 
Debug: bestThreshold[maxSpeedIndex]   = 6707

ir_sort is faster than std::sort 67.07 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003628926396

#####################################################################
Debug: arrayLength                    = 929
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 7064, 2936, 
Debug: bestThreshold[maxSpeedIndex]   = 7064

ir_sort is faster than std::sort 70.64 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002371500979

#####################################################################
Debug: arrayLength                    = 930
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6502, 3498, 
Debug: bestThreshold[maxSpeedIndex]   = 6502

ir_sort is faster than std::sort 65.02 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004478650637

#####################################################################
Debug: arrayLength                    = 931
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4874, 5126, 
Debug: bestThreshold[maxSpeedIndex]   = 5126

std::sort is faster than ir_sort 51.26 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013537833764

#####################################################################
Debug: arrayLength                    = 932
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4557, 5443, 
Debug: bestThreshold[maxSpeedIndex]   = 5443

std::sort is faster than ir_sort 54.43 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013262660119

#####################################################################
Debug: arrayLength                    = 933
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6580, 3420, 
Debug: bestThreshold[maxSpeedIndex]   = 6580

ir_sort is faster than std::sort 65.8 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004551745467

#####################################################################
Debug: arrayLength                    = 934
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5616, 4384, 
Debug: bestThreshold[maxSpeedIndex]   = 5616

ir_sort is faster than std::sort 56.16 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014690720576

#####################################################################
Debug: arrayLength                    = 935
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 6353, 3647, 
Debug: bestThreshold[maxSpeedIndex]   = 6353

ir_sort is faster than std::sort 63.53 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004966966261

#####################################################################
Debug: arrayLength                    = 936
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4676, 5324, 
Debug: bestThreshold[maxSpeedIndex]   = 5324

std::sort is faster than ir_sort 53.24 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004330339246

#####################################################################
Debug: arrayLength                    = 937
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4775, 5225, 
Debug: bestThreshold[maxSpeedIndex]   = 5225

std::sort is faster than ir_sort 52.25 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003455120631

#####################################################################
Debug: arrayLength                    = 938
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4587, 5413, 
Debug: bestThreshold[maxSpeedIndex]   = 5413

std::sort is faster than ir_sort 54.13 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003639576319

#####################################################################
Debug: arrayLength                    = 939
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5413, 4587, 
Debug: bestThreshold[maxSpeedIndex]   = 5413

ir_sort is faster than std::sort 54.13 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004435869898

#####################################################################
Debug: arrayLength                    = 940
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5103, 4897, 
Debug: bestThreshold[maxSpeedIndex]   = 5103

ir_sort is faster than std::sort 51.03 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003595724578

#####################################################################
Debug: arrayLength                    = 941
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4850, 5150, 
Debug: bestThreshold[maxSpeedIndex]   = 5150

std::sort is faster than ir_sort 51.5 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002346604443

#####################################################################
Debug: arrayLength                    = 942
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5115, 4885, 
Debug: bestThreshold[maxSpeedIndex]   = 5115

ir_sort is faster than std::sort 51.15 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003620698598

#####################################################################
Debug: arrayLength                    = 943
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5186, 4814, 
Debug: bestThreshold[maxSpeedIndex]   = 5186

ir_sort is faster than std::sort 51.86 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002459730884

#####################################################################
Debug: arrayLength                    = 944
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4643, 5357, 
Debug: bestThreshold[maxSpeedIndex]   = 5357

std::sort is faster than ir_sort 53.57 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000307506486

#####################################################################
Debug: arrayLength                    = 945
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5096, 4904, 
Debug: bestThreshold[maxSpeedIndex]   = 5096

ir_sort is faster than std::sort 50.96 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003290997897

#####################################################################
Debug: arrayLength                    = 946
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4675, 5325, 
Debug: bestThreshold[maxSpeedIndex]   = 5325

std::sort is faster than ir_sort 53.25 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9990589511457

#####################################################################
Debug: arrayLength                    = 947
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5289, 4711, 
Debug: bestThreshold[maxSpeedIndex]   = 5289

ir_sort is faster than std::sort 52.89 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003001542116

#####################################################################
Debug: arrayLength                    = 948
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4945, 5055, 
Debug: bestThreshold[maxSpeedIndex]   = 5055

std::sort is faster than ir_sort 50.55 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003835851607

#####################################################################
Debug: arrayLength                    = 949
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4782, 5218, 
Debug: bestThreshold[maxSpeedIndex]   = 5218

std::sort is faster than ir_sort 52.18 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000474536925

#####################################################################
Debug: arrayLength                    = 950
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 5066, 4934, 
Debug: bestThreshold[maxSpeedIndex]   = 5066

ir_sort is faster than std::sort 50.66 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001603689887

#####################################################################
Debug: arrayLength                    = 951
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4826, 5174, 
Debug: bestThreshold[maxSpeedIndex]   = 5174

std::sort is faster than ir_sort 51.74 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001278181886

#####################################################################
Debug: arrayLength                    = 952
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4828, 5172, 
Debug: bestThreshold[maxSpeedIndex]   = 5172

std::sort is faster than ir_sort 51.72 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003270169771

#####################################################################
Debug: arrayLength                    = 953
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4097, 5903, 
Debug: bestThreshold[maxSpeedIndex]   = 5903

std::sort is faster than ir_sort 59.03 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010187682153

#####################################################################
Debug: arrayLength                    = 954
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4166, 5834, 
Debug: bestThreshold[maxSpeedIndex]   = 5834

std::sort is faster than ir_sort 58.34 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008301038221

#####################################################################
Debug: arrayLength                    = 955
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4228, 5772, 
Debug: bestThreshold[maxSpeedIndex]   = 5772

std::sort is faster than ir_sort 57.72 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016852216538

#####################################################################
Debug: arrayLength                    = 956
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4819, 5181, 
Debug: bestThreshold[maxSpeedIndex]   = 5181

std::sort is faster than ir_sort 51.81 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004255562809

#####################################################################
Debug: arrayLength                    = 957
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4614, 5386, 
Debug: bestThreshold[maxSpeedIndex]   = 5386

std::sort is faster than ir_sort 53.86 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002480374972

#####################################################################
Debug: arrayLength                    = 958
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3960, 6040, 
Debug: bestThreshold[maxSpeedIndex]   = 6040

std::sort is faster than ir_sort 60.4 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01040878747

#####################################################################
Debug: arrayLength                    = 959
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4019, 5981, 
Debug: bestThreshold[maxSpeedIndex]   = 5981

std::sort is faster than ir_sort 59.81 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000746279017

#####################################################################
Debug: arrayLength                    = 960
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3443, 6557, 
Debug: bestThreshold[maxSpeedIndex]   = 6557

std::sort is faster than ir_sort 65.57 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9984875247497

#####################################################################
Debug: arrayLength                    = 961
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3246, 6754, 
Debug: bestThreshold[maxSpeedIndex]   = 6754

std::sort is faster than ir_sort 67.54 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.998973235695

#####################################################################
Debug: arrayLength                    = 962
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3508, 6492, 
Debug: bestThreshold[maxSpeedIndex]   = 6492

std::sort is faster than ir_sort 64.92 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9997599682417

#####################################################################
Debug: arrayLength                    = 963
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3370, 6630, 
Debug: bestThreshold[maxSpeedIndex]   = 6630

std::sort is faster than ir_sort 66.3 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005024000347

#####################################################################
Debug: arrayLength                    = 964
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3370, 6630, 
Debug: bestThreshold[maxSpeedIndex]   = 6630

std::sort is faster than ir_sort 66.3 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007974774115

#####################################################################
Debug: arrayLength                    = 965
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3602, 6398, 
Debug: bestThreshold[maxSpeedIndex]   = 6398

std::sort is faster than ir_sort 63.98 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.024624675616

#####################################################################
Debug: arrayLength                    = 966
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3302, 6698, 
Debug: bestThreshold[maxSpeedIndex]   = 6698

std::sort is faster than ir_sort 66.98 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004395959863

#####################################################################
Debug: arrayLength                    = 967
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3607, 6393, 
Debug: bestThreshold[maxSpeedIndex]   = 6393

std::sort is faster than ir_sort 63.93 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013453526384

#####################################################################
Debug: arrayLength                    = 968
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3777, 6223, 
Debug: bestThreshold[maxSpeedIndex]   = 6223

std::sort is faster than ir_sort 62.23 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.027382548662

#####################################################################
Debug: arrayLength                    = 969
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3674, 6326, 
Debug: bestThreshold[maxSpeedIndex]   = 6326

std::sort is faster than ir_sort 63.26 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008473169087

#####################################################################
Debug: arrayLength                    = 970
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3660, 6340, 
Debug: bestThreshold[maxSpeedIndex]   = 6340

std::sort is faster than ir_sort 63.4 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009448159095

#####################################################################
Debug: arrayLength                    = 971
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3691, 6309, 
Debug: bestThreshold[maxSpeedIndex]   = 6309

std::sort is faster than ir_sort 63.09 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003317299333

#####################################################################
Debug: arrayLength                    = 972
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 4168, 5832, 
Debug: bestThreshold[maxSpeedIndex]   = 5832

std::sort is faster than ir_sort 58.32 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9990086706514

#####################################################################
Debug: arrayLength                    = 973
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3945, 6055, 
Debug: bestThreshold[maxSpeedIndex]   = 6055

std::sort is faster than ir_sort 60.55 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00411062469

#####################################################################
Debug: arrayLength                    = 974
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3859, 6141, 
Debug: bestThreshold[maxSpeedIndex]   = 6141

std::sort is faster than ir_sort 61.41 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001716925872

#####################################################################
Debug: arrayLength                    = 975
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3900, 6100, 
Debug: bestThreshold[maxSpeedIndex]   = 6100

std::sort is faster than ir_sort 61 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002414946039

#####################################################################
Debug: arrayLength                    = 976
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3880, 6120, 
Debug: bestThreshold[maxSpeedIndex]   = 6120

std::sort is faster than ir_sort 61.2 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000039364048

#####################################################################
Debug: arrayLength                    = 977
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3578, 6422, 
Debug: bestThreshold[maxSpeedIndex]   = 6422

std::sort is faster than ir_sort 64.22 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9999756839475

#####################################################################
Debug: arrayLength                    = 978
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3284, 6716, 
Debug: bestThreshold[maxSpeedIndex]   = 6716

std::sort is faster than ir_sort 67.16 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9992505910978

#####################################################################
Debug: arrayLength                    = 979
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3210, 6790, 
Debug: bestThreshold[maxSpeedIndex]   = 6790

std::sort is faster than ir_sort 67.9 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9997262216581

#####################################################################
Debug: arrayLength                    = 980
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3498, 6502, 
Debug: bestThreshold[maxSpeedIndex]   = 6502

std::sort is faster than ir_sort 65.02 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00486406392

#####################################################################
Debug: arrayLength                    = 981
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3308, 6692, 
Debug: bestThreshold[maxSpeedIndex]   = 6692

std::sort is faster than ir_sort 66.92 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9995898161667

#####################################################################
Debug: arrayLength                    = 982
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3481, 6519, 
Debug: bestThreshold[maxSpeedIndex]   = 6519

std::sort is faster than ir_sort 65.19 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006451445904

#####################################################################
Debug: arrayLength                    = 983
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3329, 6671, 
Debug: bestThreshold[maxSpeedIndex]   = 6671

std::sort is faster than ir_sort 66.71 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008509801865

#####################################################################
Debug: arrayLength                    = 984
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3344, 6656, 
Debug: bestThreshold[maxSpeedIndex]   = 6656

std::sort is faster than ir_sort 66.56 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002695881632

#####################################################################
Debug: arrayLength                    = 985
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3319, 6681, 
Debug: bestThreshold[maxSpeedIndex]   = 6681

std::sort is faster than ir_sort 66.81 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004652053127

#####################################################################
Debug: arrayLength                    = 986
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3246, 6754, 
Debug: bestThreshold[maxSpeedIndex]   = 6754

std::sort is faster than ir_sort 67.54 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9985923554769

#####################################################################
Debug: arrayLength                    = 987
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3124, 6876, 
Debug: bestThreshold[maxSpeedIndex]   = 6876

std::sort is faster than ir_sort 68.76 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9981449635899

#####################################################################
Debug: arrayLength                    = 988
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3271, 6729, 
Debug: bestThreshold[maxSpeedIndex]   = 6729

std::sort is faster than ir_sort 67.29 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000465577283

#####################################################################
Debug: arrayLength                    = 989
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3222, 6778, 
Debug: bestThreshold[maxSpeedIndex]   = 6778

std::sort is faster than ir_sort 67.78 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9991406186608

#####################################################################
Debug: arrayLength                    = 990
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3167, 6833, 
Debug: bestThreshold[maxSpeedIndex]   = 6833

std::sort is faster than ir_sort 68.33 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9995920237808

#####################################################################
Debug: arrayLength                    = 991
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3384, 6616, 
Debug: bestThreshold[maxSpeedIndex]   = 6616

std::sort is faster than ir_sort 66.16 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006348983751

#####################################################################
Debug: arrayLength                    = 992
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3207, 6793, 
Debug: bestThreshold[maxSpeedIndex]   = 6793

std::sort is faster than ir_sort 67.93 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9987500147625

#####################################################################
Debug: arrayLength                    = 993
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3276, 6724, 
Debug: bestThreshold[maxSpeedIndex]   = 6724

std::sort is faster than ir_sort 67.24 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9987054285549

#####################################################################
Debug: arrayLength                    = 994
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3513, 6487, 
Debug: bestThreshold[maxSpeedIndex]   = 6487

std::sort is faster than ir_sort 64.87 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.999752529052

#####################################################################
Debug: arrayLength                    = 995
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3424, 6576, 
Debug: bestThreshold[maxSpeedIndex]   = 6576

std::sort is faster than ir_sort 65.76 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9992787006219

#####################################################################
Debug: arrayLength                    = 996
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3381, 6619, 
Debug: bestThreshold[maxSpeedIndex]   = 6619

std::sort is faster than ir_sort 66.19 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001363030981

#####################################################################
Debug: arrayLength                    = 997
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3448, 6552, 
Debug: bestThreshold[maxSpeedIndex]   = 6552

std::sort is faster than ir_sort 65.52 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9992175731043

#####################################################################
Debug: arrayLength                    = 998
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3560, 6440, 
Debug: bestThreshold[maxSpeedIndex]   = 6440

std::sort is faster than ir_sort 64.4 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9992869292053

#####################################################################
Debug: arrayLength                    = 999
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3596, 6404, 
Debug: bestThreshold[maxSpeedIndex]   = 6404

std::sort is faster than ir_sort 64.04 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000245839136

#####################################################################
Debug: arrayLength                    = 1000
Debug: testCases                      = 10000

Debug: bestThreshold [0 : 1] = 3432, 6568, 
Debug: bestThreshold[maxSpeedIndex]   = 6568

std::sort is faster than ir_sort 65.68 % times, for testCases = 10000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9989834187219

