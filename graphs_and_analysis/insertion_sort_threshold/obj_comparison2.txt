Input: (minArrayLength, maxArrayLength, testCases) = 
#####################################################################
Debug: arrayLength                    = 0
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 480, 520, 
Debug: bestThreshold[maxSpeedIndex]   = 520

std::sort is faster than ir_sort 52 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9961356671836

#####################################################################
Debug: arrayLength                    = 1
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 477, 523, 
Debug: bestThreshold[maxSpeedIndex]   = 523

std::sort is faster than ir_sort 52.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9967882089563

#####################################################################
Debug: arrayLength                    = 2
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 237, 763, 
Debug: bestThreshold[maxSpeedIndex]   = 763

std::sort is faster than ir_sort 76.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9977311304684

#####################################################################
Debug: arrayLength                    = 3
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 324, 676, 
Debug: bestThreshold[maxSpeedIndex]   = 676

std::sort is faster than ir_sort 67.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9918968760083

#####################################################################
Debug: arrayLength                    = 4
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 282, 718, 
Debug: bestThreshold[maxSpeedIndex]   = 718

std::sort is faster than ir_sort 71.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001205338471

#####################################################################
Debug: arrayLength                    = 5
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 246, 754, 
Debug: bestThreshold[maxSpeedIndex]   = 754

std::sort is faster than ir_sort 75.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.986038330603

#####################################################################
Debug: arrayLength                    = 6
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 200, 800, 
Debug: bestThreshold[maxSpeedIndex]   = 800

std::sort is faster than ir_sort 80 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9843379015219

#####################################################################
Debug: arrayLength                    = 7
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 184, 816, 
Debug: bestThreshold[maxSpeedIndex]   = 816

std::sort is faster than ir_sort 81.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9811565581981

#####################################################################
Debug: arrayLength                    = 8
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 176, 824, 
Debug: bestThreshold[maxSpeedIndex]   = 824

std::sort is faster than ir_sort 82.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9828433466467

#####################################################################
Debug: arrayLength                    = 9
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 159, 841, 
Debug: bestThreshold[maxSpeedIndex]   = 841

std::sort is faster than ir_sort 84.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9838644784389

#####################################################################
Debug: arrayLength                    = 10
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 189, 811, 
Debug: bestThreshold[maxSpeedIndex]   = 811

std::sort is faster than ir_sort 81.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.987115054505

#####################################################################
Debug: arrayLength                    = 11
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 160, 840, 
Debug: bestThreshold[maxSpeedIndex]   = 840

std::sort is faster than ir_sort 84 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9837353988678

#####################################################################
Debug: arrayLength                    = 12
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 178, 822, 
Debug: bestThreshold[maxSpeedIndex]   = 822

std::sort is faster than ir_sort 82.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9839018729518

#####################################################################
Debug: arrayLength                    = 13
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 263, 737, 
Debug: bestThreshold[maxSpeedIndex]   = 737

std::sort is faster than ir_sort 73.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9896776389277

#####################################################################
Debug: arrayLength                    = 14
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 227, 773, 
Debug: bestThreshold[maxSpeedIndex]   = 773

std::sort is faster than ir_sort 77.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9873192023271

#####################################################################
Debug: arrayLength                    = 15
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 192, 808, 
Debug: bestThreshold[maxSpeedIndex]   = 808

std::sort is faster than ir_sort 80.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.985258831701

#####################################################################
Debug: arrayLength                    = 16
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 171, 829, 
Debug: bestThreshold[maxSpeedIndex]   = 829

std::sort is faster than ir_sort 82.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9860114287675

#####################################################################
Debug: arrayLength                    = 17
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 247, 753, 
Debug: bestThreshold[maxSpeedIndex]   = 753

std::sort is faster than ir_sort 75.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9888975659887

#####################################################################
Debug: arrayLength                    = 18
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 174, 826, 
Debug: bestThreshold[maxSpeedIndex]   = 826

std::sort is faster than ir_sort 82.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9800707806849

#####################################################################
Debug: arrayLength                    = 19
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 202, 798, 
Debug: bestThreshold[maxSpeedIndex]   = 798

std::sort is faster than ir_sort 79.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9878728638384

#####################################################################
Debug: arrayLength                    = 20
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 195, 805, 
Debug: bestThreshold[maxSpeedIndex]   = 805

std::sort is faster than ir_sort 80.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9890619477515

#####################################################################
Debug: arrayLength                    = 21
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 202, 798, 
Debug: bestThreshold[maxSpeedIndex]   = 798

std::sort is faster than ir_sort 79.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9899771606672

#####################################################################
Debug: arrayLength                    = 22
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 155, 845, 
Debug: bestThreshold[maxSpeedIndex]   = 845

std::sort is faster than ir_sort 84.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.984402277042

#####################################################################
Debug: arrayLength                    = 23
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 148, 852, 
Debug: bestThreshold[maxSpeedIndex]   = 852

std::sort is faster than ir_sort 85.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9861594110784

#####################################################################
Debug: arrayLength                    = 24
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 182, 818, 
Debug: bestThreshold[maxSpeedIndex]   = 818

std::sort is faster than ir_sort 81.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9813161116136

#####################################################################
Debug: arrayLength                    = 25
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 161, 839, 
Debug: bestThreshold[maxSpeedIndex]   = 839

std::sort is faster than ir_sort 83.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9787895168694

#####################################################################
Debug: arrayLength                    = 26
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 241, 759, 
Debug: bestThreshold[maxSpeedIndex]   = 759

std::sort is faster than ir_sort 75.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9923155503427

#####################################################################
Debug: arrayLength                    = 27
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 212, 788, 
Debug: bestThreshold[maxSpeedIndex]   = 788

std::sort is faster than ir_sort 78.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9872411792949

#####################################################################
Debug: arrayLength                    = 28
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 317, 683, 
Debug: bestThreshold[maxSpeedIndex]   = 683

std::sort is faster than ir_sort 68.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9901991134385

#####################################################################
Debug: arrayLength                    = 29
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 347, 653, 
Debug: bestThreshold[maxSpeedIndex]   = 653

std::sort is faster than ir_sort 65.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9965348108966

#####################################################################
Debug: arrayLength                    = 30
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 358, 642, 
Debug: bestThreshold[maxSpeedIndex]   = 642

std::sort is faster than ir_sort 64.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.997018665895

#####################################################################
Debug: arrayLength                    = 31
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 303, 697, 
Debug: bestThreshold[maxSpeedIndex]   = 697

std::sort is faster than ir_sort 69.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9983599553609

#####################################################################
Debug: arrayLength                    = 32
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 242, 758, 
Debug: bestThreshold[maxSpeedIndex]   = 758

std::sort is faster than ir_sort 75.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9902918136312

#####################################################################
Debug: arrayLength                    = 33
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 235, 765, 
Debug: bestThreshold[maxSpeedIndex]   = 765

std::sort is faster than ir_sort 76.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9899363203886

#####################################################################
Debug: arrayLength                    = 34
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 262, 738, 
Debug: bestThreshold[maxSpeedIndex]   = 738

std::sort is faster than ir_sort 73.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9972823676086

#####################################################################
Debug: arrayLength                    = 35
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 259, 741, 
Debug: bestThreshold[maxSpeedIndex]   = 741

std::sort is faster than ir_sort 74.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9907966650483

#####################################################################
Debug: arrayLength                    = 36
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 285, 715, 
Debug: bestThreshold[maxSpeedIndex]   = 715

std::sort is faster than ir_sort 71.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9893184732794

#####################################################################
Debug: arrayLength                    = 37
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 212, 788, 
Debug: bestThreshold[maxSpeedIndex]   = 788

std::sort is faster than ir_sort 78.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9912994093684

#####################################################################
Debug: arrayLength                    = 38
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 225, 775, 
Debug: bestThreshold[maxSpeedIndex]   = 775

std::sort is faster than ir_sort 77.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9920366321412

#####################################################################
Debug: arrayLength                    = 39
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 259, 741, 
Debug: bestThreshold[maxSpeedIndex]   = 741

std::sort is faster than ir_sort 74.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9978439630061

#####################################################################
Debug: arrayLength                    = 40
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 267, 733, 
Debug: bestThreshold[maxSpeedIndex]   = 733

std::sort is faster than ir_sort 73.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9942655480683

#####################################################################
Debug: arrayLength                    = 41
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 324, 676, 
Debug: bestThreshold[maxSpeedIndex]   = 676

std::sort is faster than ir_sort 67.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001097172165

#####################################################################
Debug: arrayLength                    = 42
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 287, 713, 
Debug: bestThreshold[maxSpeedIndex]   = 713

std::sort is faster than ir_sort 71.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9914700018286

#####################################################################
Debug: arrayLength                    = 43
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 166, 834, 
Debug: bestThreshold[maxSpeedIndex]   = 834

std::sort is faster than ir_sort 83.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.987459588698

#####################################################################
Debug: arrayLength                    = 44
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 507, 493, 
Debug: bestThreshold[maxSpeedIndex]   = 507

ir_sort is faster than std::sort 50.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001682288754

#####################################################################
Debug: arrayLength                    = 45
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 413, 587, 
Debug: bestThreshold[maxSpeedIndex]   = 587

std::sort is faster than ir_sort 58.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000987895095

#####################################################################
Debug: arrayLength                    = 46
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 303, 697, 
Debug: bestThreshold[maxSpeedIndex]   = 697

std::sort is faster than ir_sort 69.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9936930899537

#####################################################################
Debug: arrayLength                    = 47
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 235, 765, 
Debug: bestThreshold[maxSpeedIndex]   = 765

std::sort is faster than ir_sort 76.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9921268650823

#####################################################################
Debug: arrayLength                    = 48
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 246, 754, 
Debug: bestThreshold[maxSpeedIndex]   = 754

std::sort is faster than ir_sort 75.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.991704712403

#####################################################################
Debug: arrayLength                    = 49
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 306, 694, 
Debug: bestThreshold[maxSpeedIndex]   = 694

std::sort is faster than ir_sort 69.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9954212057916

#####################################################################
Debug: arrayLength                    = 50
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 355, 645, 
Debug: bestThreshold[maxSpeedIndex]   = 645

std::sort is faster than ir_sort 64.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9974567389606

#####################################################################
Debug: arrayLength                    = 51
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 320, 680, 
Debug: bestThreshold[maxSpeedIndex]   = 680

std::sort is faster than ir_sort 68 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001055834913

#####################################################################
Debug: arrayLength                    = 52
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 297, 703, 
Debug: bestThreshold[maxSpeedIndex]   = 703

std::sort is faster than ir_sort 70.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9962049165072

#####################################################################
Debug: arrayLength                    = 53
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 257, 743, 
Debug: bestThreshold[maxSpeedIndex]   = 743

std::sort is faster than ir_sort 74.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9995847441458

#####################################################################
Debug: arrayLength                    = 54
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 291, 709, 
Debug: bestThreshold[maxSpeedIndex]   = 709

std::sort is faster than ir_sort 70.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9960385219211

#####################################################################
Debug: arrayLength                    = 55
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 120, 880, 
Debug: bestThreshold[maxSpeedIndex]   = 880

std::sort is faster than ir_sort 88 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9970177058327

#####################################################################
Debug: arrayLength                    = 56
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 144, 856, 
Debug: bestThreshold[maxSpeedIndex]   = 856

std::sort is faster than ir_sort 85.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9957283629933

#####################################################################
Debug: arrayLength                    = 57
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 136, 864, 
Debug: bestThreshold[maxSpeedIndex]   = 864

std::sort is faster than ir_sort 86.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9957964579767

#####################################################################
Debug: arrayLength                    = 58
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 141, 859, 
Debug: bestThreshold[maxSpeedIndex]   = 859

std::sort is faster than ir_sort 85.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9952388645489

#####################################################################
Debug: arrayLength                    = 59
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 107, 893, 
Debug: bestThreshold[maxSpeedIndex]   = 893

std::sort is faster than ir_sort 89.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9989918813908

#####################################################################
Debug: arrayLength                    = 60
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 147, 853, 
Debug: bestThreshold[maxSpeedIndex]   = 853

std::sort is faster than ir_sort 85.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9992335327622

#####################################################################
Debug: arrayLength                    = 61
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 156, 844, 
Debug: bestThreshold[maxSpeedIndex]   = 844

std::sort is faster than ir_sort 84.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9988063286759

#####################################################################
Debug: arrayLength                    = 62
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 146, 854, 
Debug: bestThreshold[maxSpeedIndex]   = 854

std::sort is faster than ir_sort 85.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9963545653468

#####################################################################
Debug: arrayLength                    = 63
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 78, 922, 
Debug: bestThreshold[maxSpeedIndex]   = 922

std::sort is faster than ir_sort 92.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9966285744754

#####################################################################
Debug: arrayLength                    = 64
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 288, 712, 
Debug: bestThreshold[maxSpeedIndex]   = 712

std::sort is faster than ir_sort 71.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007228920774

#####################################################################
Debug: arrayLength                    = 65
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 252, 748, 
Debug: bestThreshold[maxSpeedIndex]   = 748

std::sort is faster than ir_sort 74.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004199920976

#####################################################################
Debug: arrayLength                    = 66
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 411, 589, 
Debug: bestThreshold[maxSpeedIndex]   = 589

std::sort is faster than ir_sort 58.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004454281703

#####################################################################
Debug: arrayLength                    = 67
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 112, 888, 
Debug: bestThreshold[maxSpeedIndex]   = 888

std::sort is faster than ir_sort 88.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9960060574866

#####################################################################
Debug: arrayLength                    = 68
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 148, 852, 
Debug: bestThreshold[maxSpeedIndex]   = 852

std::sort is faster than ir_sort 85.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004209904289

#####################################################################
Debug: arrayLength                    = 69
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 79, 921, 
Debug: bestThreshold[maxSpeedIndex]   = 921

std::sort is faster than ir_sort 92.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9937326969209

#####################################################################
Debug: arrayLength                    = 70
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 93, 907, 
Debug: bestThreshold[maxSpeedIndex]   = 907

std::sort is faster than ir_sort 90.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9981571062149

#####################################################################
Debug: arrayLength                    = 71
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 113, 887, 
Debug: bestThreshold[maxSpeedIndex]   = 887

std::sort is faster than ir_sort 88.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9969614514091

#####################################################################
Debug: arrayLength                    = 72
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 81, 919, 
Debug: bestThreshold[maxSpeedIndex]   = 919

std::sort is faster than ir_sort 91.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9927638834973

#####################################################################
Debug: arrayLength                    = 73
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 105, 895, 
Debug: bestThreshold[maxSpeedIndex]   = 895

std::sort is faster than ir_sort 89.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9983722695012

#####################################################################
Debug: arrayLength                    = 74
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 142, 858, 
Debug: bestThreshold[maxSpeedIndex]   = 858

std::sort is faster than ir_sort 85.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001639073667

#####################################################################
Debug: arrayLength                    = 75
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 139, 861, 
Debug: bestThreshold[maxSpeedIndex]   = 861

std::sort is faster than ir_sort 86.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9958311942968

#####################################################################
Debug: arrayLength                    = 76
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 101, 899, 
Debug: bestThreshold[maxSpeedIndex]   = 899

std::sort is faster than ir_sort 89.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9943674686459

#####################################################################
Debug: arrayLength                    = 77
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 109, 891, 
Debug: bestThreshold[maxSpeedIndex]   = 891

std::sort is faster than ir_sort 89.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9929245510743

#####################################################################
Debug: arrayLength                    = 78
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 111, 889, 
Debug: bestThreshold[maxSpeedIndex]   = 889

std::sort is faster than ir_sort 88.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000810649095

#####################################################################
Debug: arrayLength                    = 79
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 69, 931, 
Debug: bestThreshold[maxSpeedIndex]   = 931

std::sort is faster than ir_sort 93.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9897068427896

#####################################################################
Debug: arrayLength                    = 80
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 81, 919, 
Debug: bestThreshold[maxSpeedIndex]   = 919

std::sort is faster than ir_sort 91.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9959686872804

#####################################################################
Debug: arrayLength                    = 81
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 103, 897, 
Debug: bestThreshold[maxSpeedIndex]   = 897

std::sort is faster than ir_sort 89.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9940331426197

#####################################################################
Debug: arrayLength                    = 82
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 128, 872, 
Debug: bestThreshold[maxSpeedIndex]   = 872

std::sort is faster than ir_sort 87.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003393290986

#####################################################################
Debug: arrayLength                    = 83
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 74, 926, 
Debug: bestThreshold[maxSpeedIndex]   = 926

std::sort is faster than ir_sort 92.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9950547894027

#####################################################################
Debug: arrayLength                    = 84
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 113, 887, 
Debug: bestThreshold[maxSpeedIndex]   = 887

std::sort is faster than ir_sort 88.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9923315658336

#####################################################################
Debug: arrayLength                    = 85
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 147, 853, 
Debug: bestThreshold[maxSpeedIndex]   = 853

std::sort is faster than ir_sort 85.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9975073530178

#####################################################################
Debug: arrayLength                    = 86
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 342, 658, 
Debug: bestThreshold[maxSpeedIndex]   = 658

std::sort is faster than ir_sort 65.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000544005131

#####################################################################
Debug: arrayLength                    = 87
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 223, 777, 
Debug: bestThreshold[maxSpeedIndex]   = 777

std::sort is faster than ir_sort 77.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004134606386

#####################################################################
Debug: arrayLength                    = 88
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 215, 785, 
Debug: bestThreshold[maxSpeedIndex]   = 785

std::sort is faster than ir_sort 78.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9989915999792

#####################################################################
Debug: arrayLength                    = 89
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 221, 779, 
Debug: bestThreshold[maxSpeedIndex]   = 779

std::sort is faster than ir_sort 77.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000748422142

#####################################################################
Debug: arrayLength                    = 90
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 58, 942, 
Debug: bestThreshold[maxSpeedIndex]   = 942

std::sort is faster than ir_sort 94.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9869793172823

#####################################################################
Debug: arrayLength                    = 91
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 25, 975, 
Debug: bestThreshold[maxSpeedIndex]   = 975

std::sort is faster than ir_sort 97.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9862631670859

#####################################################################
Debug: arrayLength                    = 92
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 76, 924, 
Debug: bestThreshold[maxSpeedIndex]   = 924

std::sort is faster than ir_sort 92.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9956370134035

#####################################################################
Debug: arrayLength                    = 93
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 55, 945, 
Debug: bestThreshold[maxSpeedIndex]   = 945

std::sort is faster than ir_sort 94.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9939175460226

#####################################################################
Debug: arrayLength                    = 94
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 454, 546, 
Debug: bestThreshold[maxSpeedIndex]   = 546

std::sort is faster than ir_sort 54.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008336281875

#####################################################################
Debug: arrayLength                    = 95
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 222, 778, 
Debug: bestThreshold[maxSpeedIndex]   = 778

std::sort is faster than ir_sort 77.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006947841597

#####################################################################
Debug: arrayLength                    = 96
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 167, 833, 
Debug: bestThreshold[maxSpeedIndex]   = 833

std::sort is faster than ir_sort 83.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000594374431

#####################################################################
Debug: arrayLength                    = 97
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 89, 911, 
Debug: bestThreshold[maxSpeedIndex]   = 911

std::sort is faster than ir_sort 91.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9986070682669

#####################################################################
Debug: arrayLength                    = 98
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 264, 736, 
Debug: bestThreshold[maxSpeedIndex]   = 736

std::sort is faster than ir_sort 73.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.999697439882

#####################################################################
Debug: arrayLength                    = 99
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 182, 818, 
Debug: bestThreshold[maxSpeedIndex]   = 818

std::sort is faster than ir_sort 81.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9938646672705

#####################################################################
Debug: arrayLength                    = 100
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 431, 569, 
Debug: bestThreshold[maxSpeedIndex]   = 569

std::sort is faster than ir_sort 56.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012496745783

#####################################################################
Debug: arrayLength                    = 101
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 266, 734, 
Debug: bestThreshold[maxSpeedIndex]   = 734

std::sort is faster than ir_sort 73.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003480200837

#####################################################################
Debug: arrayLength                    = 102
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 267, 733, 
Debug: bestThreshold[maxSpeedIndex]   = 733

std::sort is faster than ir_sort 73.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003759956759

#####################################################################
Debug: arrayLength                    = 103
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 287, 713, 
Debug: bestThreshold[maxSpeedIndex]   = 713

std::sort is faster than ir_sort 71.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9980267061383

#####################################################################
Debug: arrayLength                    = 104
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 200, 800, 
Debug: bestThreshold[maxSpeedIndex]   = 800

std::sort is faster than ir_sort 80 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000556036636

#####################################################################
Debug: arrayLength                    = 105
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 258, 742, 
Debug: bestThreshold[maxSpeedIndex]   = 742

std::sort is faster than ir_sort 74.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004745978712

#####################################################################
Debug: arrayLength                    = 106
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 163, 837, 
Debug: bestThreshold[maxSpeedIndex]   = 837

std::sort is faster than ir_sort 83.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9989248166352

#####################################################################
Debug: arrayLength                    = 107
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 172, 828, 
Debug: bestThreshold[maxSpeedIndex]   = 828

std::sort is faster than ir_sort 82.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000044424217

#####################################################################
Debug: arrayLength                    = 108
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 471, 529, 
Debug: bestThreshold[maxSpeedIndex]   = 529

std::sort is faster than ir_sort 52.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002143907356

#####################################################################
Debug: arrayLength                    = 109
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 516, 484, 
Debug: bestThreshold[maxSpeedIndex]   = 516

ir_sort is faster than std::sort 51.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007509131639

#####################################################################
Debug: arrayLength                    = 110
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 292, 708, 
Debug: bestThreshold[maxSpeedIndex]   = 708

std::sort is faster than ir_sort 70.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9988368711681

#####################################################################
Debug: arrayLength                    = 111
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 317, 683, 
Debug: bestThreshold[maxSpeedIndex]   = 683

std::sort is faster than ir_sort 68.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9985441978112

#####################################################################
Debug: arrayLength                    = 112
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 412, 588, 
Debug: bestThreshold[maxSpeedIndex]   = 588

std::sort is faster than ir_sort 58.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9992286409306

#####################################################################
Debug: arrayLength                    = 113
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 365, 635, 
Debug: bestThreshold[maxSpeedIndex]   = 635

std::sort is faster than ir_sort 63.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9979282301738

#####################################################################
Debug: arrayLength                    = 114
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 471, 529, 
Debug: bestThreshold[maxSpeedIndex]   = 529

std::sort is faster than ir_sort 52.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000872140718

#####################################################################
Debug: arrayLength                    = 115
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 407, 593, 
Debug: bestThreshold[maxSpeedIndex]   = 593

std::sort is faster than ir_sort 59.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.997916063875

#####################################################################
Debug: arrayLength                    = 116
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 404, 596, 
Debug: bestThreshold[maxSpeedIndex]   = 596

std::sort is faster than ir_sort 59.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00043954882

#####################################################################
Debug: arrayLength                    = 117
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 392, 608, 
Debug: bestThreshold[maxSpeedIndex]   = 608

std::sort is faster than ir_sort 60.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005803850253

#####################################################################
Debug: arrayLength                    = 118
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 413, 587, 
Debug: bestThreshold[maxSpeedIndex]   = 587

std::sort is faster than ir_sort 58.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004784671252

#####################################################################
Debug: arrayLength                    = 119
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 460, 540, 
Debug: bestThreshold[maxSpeedIndex]   = 540

std::sort is faster than ir_sort 54 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00273795843

#####################################################################
Debug: arrayLength                    = 120
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 442, 558, 
Debug: bestThreshold[maxSpeedIndex]   = 558

std::sort is faster than ir_sort 55.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001133935104

#####################################################################
Debug: arrayLength                    = 121
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 497, 503, 
Debug: bestThreshold[maxSpeedIndex]   = 503

std::sort is faster than ir_sort 50.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002386408047

#####################################################################
Debug: arrayLength                    = 122
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 444, 556, 
Debug: bestThreshold[maxSpeedIndex]   = 556

std::sort is faster than ir_sort 55.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9963699960767

#####################################################################
Debug: arrayLength                    = 123
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 417, 583, 
Debug: bestThreshold[maxSpeedIndex]   = 583

std::sort is faster than ir_sort 58.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000284981711

#####################################################################
Debug: arrayLength                    = 124
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 414, 586, 
Debug: bestThreshold[maxSpeedIndex]   = 586

std::sort is faster than ir_sort 58.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9996849389353

#####################################################################
Debug: arrayLength                    = 125
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 446, 554, 
Debug: bestThreshold[maxSpeedIndex]   = 554

std::sort is faster than ir_sort 55.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00282402416

#####################################################################
Debug: arrayLength                    = 126
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 792, 208, 
Debug: bestThreshold[maxSpeedIndex]   = 792

ir_sort is faster than std::sort 79.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003973721308

#####################################################################
Debug: arrayLength                    = 127
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 711, 289, 
Debug: bestThreshold[maxSpeedIndex]   = 711

ir_sort is faster than std::sort 71.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006588536464

#####################################################################
Debug: arrayLength                    = 128
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 714, 286, 
Debug: bestThreshold[maxSpeedIndex]   = 714

ir_sort is faster than std::sort 71.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006500034298

#####################################################################
Debug: arrayLength                    = 129
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 775, 225, 
Debug: bestThreshold[maxSpeedIndex]   = 775

ir_sort is faster than std::sort 77.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008955909602

#####################################################################
Debug: arrayLength                    = 130
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 757, 243, 
Debug: bestThreshold[maxSpeedIndex]   = 757

ir_sort is faster than std::sort 75.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00160691473

#####################################################################
Debug: arrayLength                    = 131
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 936, 64, 
Debug: bestThreshold[maxSpeedIndex]   = 936

ir_sort is faster than std::sort 93.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011565986505

#####################################################################
Debug: arrayLength                    = 132
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 932, 68, 
Debug: bestThreshold[maxSpeedIndex]   = 932

ir_sort is faster than std::sort 93.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010562174357

#####################################################################
Debug: arrayLength                    = 133
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 937, 63, 
Debug: bestThreshold[maxSpeedIndex]   = 937

ir_sort is faster than std::sort 93.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014253152384

#####################################################################
Debug: arrayLength                    = 134
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 935, 65, 
Debug: bestThreshold[maxSpeedIndex]   = 935

ir_sort is faster than std::sort 93.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008759319421

#####################################################################
Debug: arrayLength                    = 135
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 953, 47, 
Debug: bestThreshold[maxSpeedIndex]   = 953

ir_sort is faster than std::sort 95.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009622827522

#####################################################################
Debug: arrayLength                    = 136
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 940, 60, 
Debug: bestThreshold[maxSpeedIndex]   = 940

ir_sort is faster than std::sort 94 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01139105861

#####################################################################
Debug: arrayLength                    = 137
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 941, 59, 
Debug: bestThreshold[maxSpeedIndex]   = 941

ir_sort is faster than std::sort 94.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008084725476

#####################################################################
Debug: arrayLength                    = 138
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 893, 107, 
Debug: bestThreshold[maxSpeedIndex]   = 893

ir_sort is faster than std::sort 89.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006078079384

#####################################################################
Debug: arrayLength                    = 139
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 826, 174, 
Debug: bestThreshold[maxSpeedIndex]   = 826

ir_sort is faster than std::sort 82.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012276577802

#####################################################################
Debug: arrayLength                    = 140
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 791, 209, 
Debug: bestThreshold[maxSpeedIndex]   = 791

ir_sort is faster than std::sort 79.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009649556262

#####################################################################
Debug: arrayLength                    = 141
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 832, 168, 
Debug: bestThreshold[maxSpeedIndex]   = 832

ir_sort is faster than std::sort 83.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009804460388

#####################################################################
Debug: arrayLength                    = 142
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 814, 186, 
Debug: bestThreshold[maxSpeedIndex]   = 814

ir_sort is faster than std::sort 81.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007157528942

#####################################################################
Debug: arrayLength                    = 143
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 800, 200, 
Debug: bestThreshold[maxSpeedIndex]   = 800

ir_sort is faster than std::sort 80 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009429744714

#####################################################################
Debug: arrayLength                    = 144
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 740, 260, 
Debug: bestThreshold[maxSpeedIndex]   = 740

ir_sort is faster than std::sort 74 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013940914851

#####################################################################
Debug: arrayLength                    = 145
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 795, 205, 
Debug: bestThreshold[maxSpeedIndex]   = 795

ir_sort is faster than std::sort 79.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011832257528

#####################################################################
Debug: arrayLength                    = 146
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 829, 171, 
Debug: bestThreshold[maxSpeedIndex]   = 829

ir_sort is faster than std::sort 82.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012599771829

#####################################################################
Debug: arrayLength                    = 147
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 797, 203, 
Debug: bestThreshold[maxSpeedIndex]   = 797

ir_sort is faster than std::sort 79.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012594501456

#####################################################################
Debug: arrayLength                    = 148
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 816, 184, 
Debug: bestThreshold[maxSpeedIndex]   = 816

ir_sort is faster than std::sort 81.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010940830707

#####################################################################
Debug: arrayLength                    = 149
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 794, 206, 
Debug: bestThreshold[maxSpeedIndex]   = 794

ir_sort is faster than std::sort 79.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007226984043

#####################################################################
Debug: arrayLength                    = 150
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 824, 176, 
Debug: bestThreshold[maxSpeedIndex]   = 824

ir_sort is faster than std::sort 82.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008963452297

#####################################################################
Debug: arrayLength                    = 151
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 819, 181, 
Debug: bestThreshold[maxSpeedIndex]   = 819

ir_sort is faster than std::sort 81.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013106592246

#####################################################################
Debug: arrayLength                    = 152
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 774, 226, 
Debug: bestThreshold[maxSpeedIndex]   = 774

ir_sort is faster than std::sort 77.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.018813907415

#####################################################################
Debug: arrayLength                    = 153
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 795, 205, 
Debug: bestThreshold[maxSpeedIndex]   = 795

ir_sort is faster than std::sort 79.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011153559537

#####################################################################
Debug: arrayLength                    = 154
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 816, 184, 
Debug: bestThreshold[maxSpeedIndex]   = 816

ir_sort is faster than std::sort 81.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009293739787

#####################################################################
Debug: arrayLength                    = 155
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 743, 257, 
Debug: bestThreshold[maxSpeedIndex]   = 743

ir_sort is faster than std::sort 74.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005947723152

#####################################################################
Debug: arrayLength                    = 156
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 708, 292, 
Debug: bestThreshold[maxSpeedIndex]   = 708

ir_sort is faster than std::sort 70.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015972636656

#####################################################################
Debug: arrayLength                    = 157
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 750, 250, 
Debug: bestThreshold[maxSpeedIndex]   = 750

ir_sort is faster than std::sort 75 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01460567259

#####################################################################
Debug: arrayLength                    = 158
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 818, 182, 
Debug: bestThreshold[maxSpeedIndex]   = 818

ir_sort is faster than std::sort 81.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01681743986

#####################################################################
Debug: arrayLength                    = 159
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 809, 191, 
Debug: bestThreshold[maxSpeedIndex]   = 809

ir_sort is faster than std::sort 80.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012780798932

#####################################################################
Debug: arrayLength                    = 160
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 834, 166, 
Debug: bestThreshold[maxSpeedIndex]   = 834

ir_sort is faster than std::sort 83.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.019680160154

#####################################################################
Debug: arrayLength                    = 161
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 781, 219, 
Debug: bestThreshold[maxSpeedIndex]   = 781

ir_sort is faster than std::sort 78.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.018575030527

#####################################################################
Debug: arrayLength                    = 162
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 689, 311, 
Debug: bestThreshold[maxSpeedIndex]   = 689

ir_sort is faster than std::sort 68.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010015596522

#####################################################################
Debug: arrayLength                    = 163
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 724, 276, 
Debug: bestThreshold[maxSpeedIndex]   = 724

ir_sort is faster than std::sort 72.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013839579361

#####################################################################
Debug: arrayLength                    = 164
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 700, 300, 
Debug: bestThreshold[maxSpeedIndex]   = 700

ir_sort is faster than std::sort 70 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009127476192

#####################################################################
Debug: arrayLength                    = 165
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 713, 287, 
Debug: bestThreshold[maxSpeedIndex]   = 713

ir_sort is faster than std::sort 71.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010656876851

#####################################################################
Debug: arrayLength                    = 166
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 759, 241, 
Debug: bestThreshold[maxSpeedIndex]   = 759

ir_sort is faster than std::sort 75.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013769408536

#####################################################################
Debug: arrayLength                    = 167
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 841, 159, 
Debug: bestThreshold[maxSpeedIndex]   = 841

ir_sort is faster than std::sort 84.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.018496983067

#####################################################################
Debug: arrayLength                    = 168
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 820, 180, 
Debug: bestThreshold[maxSpeedIndex]   = 820

ir_sort is faster than std::sort 82 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014620369803

#####################################################################
Debug: arrayLength                    = 169
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 813, 187, 
Debug: bestThreshold[maxSpeedIndex]   = 813

ir_sort is faster than std::sort 81.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017873671053

#####################################################################
Debug: arrayLength                    = 170
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 808, 192, 
Debug: bestThreshold[maxSpeedIndex]   = 808

ir_sort is faster than std::sort 80.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01935523977

#####################################################################
Debug: arrayLength                    = 171
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 813, 187, 
Debug: bestThreshold[maxSpeedIndex]   = 813

ir_sort is faster than std::sort 81.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011653345204

#####################################################################
Debug: arrayLength                    = 172
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 883, 117, 
Debug: bestThreshold[maxSpeedIndex]   = 883

ir_sort is faster than std::sort 88.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.023521894809

#####################################################################
Debug: arrayLength                    = 173
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 659, 341, 
Debug: bestThreshold[maxSpeedIndex]   = 659

ir_sort is faster than std::sort 65.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012656038433

#####################################################################
Debug: arrayLength                    = 174
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 634, 366, 
Debug: bestThreshold[maxSpeedIndex]   = 634

ir_sort is faster than std::sort 63.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011643333262

#####################################################################
Debug: arrayLength                    = 175
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 625, 375, 
Debug: bestThreshold[maxSpeedIndex]   = 625

ir_sort is faster than std::sort 62.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015445024062

#####################################################################
Debug: arrayLength                    = 176
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 586, 414, 
Debug: bestThreshold[maxSpeedIndex]   = 586

ir_sort is faster than std::sort 58.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014609033055

#####################################################################
Debug: arrayLength                    = 177
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 565, 435, 
Debug: bestThreshold[maxSpeedIndex]   = 565

ir_sort is faster than std::sort 56.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012501437351

#####################################################################
Debug: arrayLength                    = 178
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 667, 333, 
Debug: bestThreshold[maxSpeedIndex]   = 667

ir_sort is faster than std::sort 66.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006209692649

#####################################################################
Debug: arrayLength                    = 179
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 734, 266, 
Debug: bestThreshold[maxSpeedIndex]   = 734

ir_sort is faster than std::sort 73.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016231797982

#####################################################################
Debug: arrayLength                    = 180
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 739, 261, 
Debug: bestThreshold[maxSpeedIndex]   = 739

ir_sort is faster than std::sort 73.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013699705704

#####################################################################
Debug: arrayLength                    = 181
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 739, 261, 
Debug: bestThreshold[maxSpeedIndex]   = 739

ir_sort is faster than std::sort 73.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011177536848

#####################################################################
Debug: arrayLength                    = 182
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 733, 267, 
Debug: bestThreshold[maxSpeedIndex]   = 733

ir_sort is faster than std::sort 73.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.018810121504

#####################################################################
Debug: arrayLength                    = 183
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 703, 297, 
Debug: bestThreshold[maxSpeedIndex]   = 703

ir_sort is faster than std::sort 70.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007860471889

#####################################################################
Debug: arrayLength                    = 184
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 756, 244, 
Debug: bestThreshold[maxSpeedIndex]   = 756

ir_sort is faster than std::sort 75.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013975151485

#####################################################################
Debug: arrayLength                    = 185
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 796, 204, 
Debug: bestThreshold[maxSpeedIndex]   = 796

ir_sort is faster than std::sort 79.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013462273137

#####################################################################
Debug: arrayLength                    = 186
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 799, 201, 
Debug: bestThreshold[maxSpeedIndex]   = 799

ir_sort is faster than std::sort 79.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008738232616

#####################################################################
Debug: arrayLength                    = 187
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 830, 170, 
Debug: bestThreshold[maxSpeedIndex]   = 830

ir_sort is faster than std::sort 83 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00771787628

#####################################################################
Debug: arrayLength                    = 188
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 800, 200, 
Debug: bestThreshold[maxSpeedIndex]   = 800

ir_sort is faster than std::sort 80 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013809834078

#####################################################################
Debug: arrayLength                    = 189
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 788, 212, 
Debug: bestThreshold[maxSpeedIndex]   = 788

ir_sort is faster than std::sort 78.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011225071174

#####################################################################
Debug: arrayLength                    = 190
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 750, 250, 
Debug: bestThreshold[maxSpeedIndex]   = 750

ir_sort is faster than std::sort 75 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014434571618

#####################################################################
Debug: arrayLength                    = 191
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 723, 277, 
Debug: bestThreshold[maxSpeedIndex]   = 723

ir_sort is faster than std::sort 72.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017144616551

#####################################################################
Debug: arrayLength                    = 192
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 752, 248, 
Debug: bestThreshold[maxSpeedIndex]   = 752

ir_sort is faster than std::sort 75.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013933016187

#####################################################################
Debug: arrayLength                    = 193
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 751, 249, 
Debug: bestThreshold[maxSpeedIndex]   = 751

ir_sort is faster than std::sort 75.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013577031934

#####################################################################
Debug: arrayLength                    = 194
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 774, 226, 
Debug: bestThreshold[maxSpeedIndex]   = 774

ir_sort is faster than std::sort 77.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008498450886

#####################################################################
Debug: arrayLength                    = 195
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 805, 195, 
Debug: bestThreshold[maxSpeedIndex]   = 805

ir_sort is faster than std::sort 80.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007908403472

#####################################################################
Debug: arrayLength                    = 196
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 852, 148, 
Debug: bestThreshold[maxSpeedIndex]   = 852

ir_sort is faster than std::sort 85.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006604790028

#####################################################################
Debug: arrayLength                    = 197
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 871, 129, 
Debug: bestThreshold[maxSpeedIndex]   = 871

ir_sort is faster than std::sort 87.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012040157025

#####################################################################
Debug: arrayLength                    = 198
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 863, 137, 
Debug: bestThreshold[maxSpeedIndex]   = 863

ir_sort is faster than std::sort 86.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002256471718

#####################################################################
Debug: arrayLength                    = 199
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 912, 88, 
Debug: bestThreshold[maxSpeedIndex]   = 912

ir_sort is faster than std::sort 91.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006062764698

#####################################################################
Debug: arrayLength                    = 200
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 885, 115, 
Debug: bestThreshold[maxSpeedIndex]   = 885

ir_sort is faster than std::sort 88.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009138014787

#####################################################################
Debug: arrayLength                    = 201
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 902, 98, 
Debug: bestThreshold[maxSpeedIndex]   = 902

ir_sort is faster than std::sort 90.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008471374352

#####################################################################
Debug: arrayLength                    = 202
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 935, 65, 
Debug: bestThreshold[maxSpeedIndex]   = 935

ir_sort is faster than std::sort 93.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010002575492

#####################################################################
Debug: arrayLength                    = 203
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 924, 76, 
Debug: bestThreshold[maxSpeedIndex]   = 924

ir_sort is faster than std::sort 92.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011500943103

#####################################################################
Debug: arrayLength                    = 204
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 914, 86, 
Debug: bestThreshold[maxSpeedIndex]   = 914

ir_sort is faster than std::sort 91.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011035155655

#####################################################################
Debug: arrayLength                    = 205
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 875, 125, 
Debug: bestThreshold[maxSpeedIndex]   = 875

ir_sort is faster than std::sort 87.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007350611001

#####################################################################
Debug: arrayLength                    = 206
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 910, 90, 
Debug: bestThreshold[maxSpeedIndex]   = 910

ir_sort is faster than std::sort 91 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010324837982

#####################################################################
Debug: arrayLength                    = 207
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 834, 166, 
Debug: bestThreshold[maxSpeedIndex]   = 834

ir_sort is faster than std::sort 83.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.020464252389

#####################################################################
Debug: arrayLength                    = 208
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 824, 176, 
Debug: bestThreshold[maxSpeedIndex]   = 824

ir_sort is faster than std::sort 82.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017757968533

#####################################################################
Debug: arrayLength                    = 209
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 845, 155, 
Debug: bestThreshold[maxSpeedIndex]   = 845

ir_sort is faster than std::sort 84.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012389518896

#####################################################################
Debug: arrayLength                    = 210
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 860, 140, 
Debug: bestThreshold[maxSpeedIndex]   = 860

ir_sort is faster than std::sort 86 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012073449549

#####################################################################
Debug: arrayLength                    = 211
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 901, 99, 
Debug: bestThreshold[maxSpeedIndex]   = 901

ir_sort is faster than std::sort 90.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011228498594

#####################################################################
Debug: arrayLength                    = 212
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 807, 193, 
Debug: bestThreshold[maxSpeedIndex]   = 807

ir_sort is faster than std::sort 80.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015030065256

#####################################################################
Debug: arrayLength                    = 213
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 809, 191, 
Debug: bestThreshold[maxSpeedIndex]   = 809

ir_sort is faster than std::sort 80.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011026586959

#####################################################################
Debug: arrayLength                    = 214
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 831, 169, 
Debug: bestThreshold[maxSpeedIndex]   = 831

ir_sort is faster than std::sort 83.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011874668481

#####################################################################
Debug: arrayLength                    = 215
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 927, 73, 
Debug: bestThreshold[maxSpeedIndex]   = 927

ir_sort is faster than std::sort 92.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010315171889

#####################################################################
Debug: arrayLength                    = 216
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 916, 84, 
Debug: bestThreshold[maxSpeedIndex]   = 916

ir_sort is faster than std::sort 91.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010903245515

#####################################################################
Debug: arrayLength                    = 217
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 898, 102, 
Debug: bestThreshold[maxSpeedIndex]   = 898

ir_sort is faster than std::sort 89.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004932207926

#####################################################################
Debug: arrayLength                    = 218
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 656, 344, 
Debug: bestThreshold[maxSpeedIndex]   = 656

ir_sort is faster than std::sort 65.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001583965116

#####################################################################
Debug: arrayLength                    = 219
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 699, 301, 
Debug: bestThreshold[maxSpeedIndex]   = 699

ir_sort is faster than std::sort 69.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001106788205

#####################################################################
Debug: arrayLength                    = 220
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 676, 324, 
Debug: bestThreshold[maxSpeedIndex]   = 676

ir_sort is faster than std::sort 67.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004933076341

#####################################################################
Debug: arrayLength                    = 221
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 720, 280, 
Debug: bestThreshold[maxSpeedIndex]   = 720

ir_sort is faster than std::sort 72 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006064608496

#####################################################################
Debug: arrayLength                    = 222
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 728, 272, 
Debug: bestThreshold[maxSpeedIndex]   = 728

ir_sort is faster than std::sort 72.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003293276027

#####################################################################
Debug: arrayLength                    = 223
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 733, 267, 
Debug: bestThreshold[maxSpeedIndex]   = 733

ir_sort is faster than std::sort 73.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005119204865

#####################################################################
Debug: arrayLength                    = 224
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 777, 223, 
Debug: bestThreshold[maxSpeedIndex]   = 777

ir_sort is faster than std::sort 77.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006909801063

#####################################################################
Debug: arrayLength                    = 225
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 752, 248, 
Debug: bestThreshold[maxSpeedIndex]   = 752

ir_sort is faster than std::sort 75.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006346598354

#####################################################################
Debug: arrayLength                    = 226
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 732, 268, 
Debug: bestThreshold[maxSpeedIndex]   = 732

ir_sort is faster than std::sort 73.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00729072688

#####################################################################
Debug: arrayLength                    = 227
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 742, 258, 
Debug: bestThreshold[maxSpeedIndex]   = 742

ir_sort is faster than std::sort 74.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001505635451

#####################################################################
Debug: arrayLength                    = 228
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 770, 230, 
Debug: bestThreshold[maxSpeedIndex]   = 770

ir_sort is faster than std::sort 77 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006017294199

#####################################################################
Debug: arrayLength                    = 229
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 693, 307, 
Debug: bestThreshold[maxSpeedIndex]   = 693

ir_sort is faster than std::sort 69.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004457821789

#####################################################################
Debug: arrayLength                    = 230
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 754, 246, 
Debug: bestThreshold[maxSpeedIndex]   = 754

ir_sort is faster than std::sort 75.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006219021323

#####################################################################
Debug: arrayLength                    = 231
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 733, 267, 
Debug: bestThreshold[maxSpeedIndex]   = 733

ir_sort is faster than std::sort 73.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004270049862

#####################################################################
Debug: arrayLength                    = 232
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 704, 296, 
Debug: bestThreshold[maxSpeedIndex]   = 704

ir_sort is faster than std::sort 70.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003730874745

#####################################################################
Debug: arrayLength                    = 233
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 689, 311, 
Debug: bestThreshold[maxSpeedIndex]   = 689

ir_sort is faster than std::sort 68.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006083867674

#####################################################################
Debug: arrayLength                    = 234
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 783, 217, 
Debug: bestThreshold[maxSpeedIndex]   = 783

ir_sort is faster than std::sort 78.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006266060731

#####################################################################
Debug: arrayLength                    = 235
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 685, 315, 
Debug: bestThreshold[maxSpeedIndex]   = 685

ir_sort is faster than std::sort 68.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011400263066

#####################################################################
Debug: arrayLength                    = 236
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 692, 308, 
Debug: bestThreshold[maxSpeedIndex]   = 692

ir_sort is faster than std::sort 69.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012973375937

#####################################################################
Debug: arrayLength                    = 237
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 764, 236, 
Debug: bestThreshold[maxSpeedIndex]   = 764

ir_sort is faster than std::sort 76.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013869955147

#####################################################################
Debug: arrayLength                    = 238
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 774, 226, 
Debug: bestThreshold[maxSpeedIndex]   = 774

ir_sort is faster than std::sort 77.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005568250117

#####################################################################
Debug: arrayLength                    = 239
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 774, 226, 
Debug: bestThreshold[maxSpeedIndex]   = 774

ir_sort is faster than std::sort 77.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004293780215

#####################################################################
Debug: arrayLength                    = 240
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 775, 225, 
Debug: bestThreshold[maxSpeedIndex]   = 775

ir_sort is faster than std::sort 77.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002321160629

#####################################################################
Debug: arrayLength                    = 241
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 733, 267, 
Debug: bestThreshold[maxSpeedIndex]   = 733

ir_sort is faster than std::sort 73.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009276871613

#####################################################################
Debug: arrayLength                    = 242
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 680, 320, 
Debug: bestThreshold[maxSpeedIndex]   = 680

ir_sort is faster than std::sort 68 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012337052252

#####################################################################
Debug: arrayLength                    = 243
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 791, 209, 
Debug: bestThreshold[maxSpeedIndex]   = 791

ir_sort is faster than std::sort 79.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012244329762

#####################################################################
Debug: arrayLength                    = 244
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 808, 192, 
Debug: bestThreshold[maxSpeedIndex]   = 808

ir_sort is faster than std::sort 80.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006910089504

#####################################################################
Debug: arrayLength                    = 245
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 759, 241, 
Debug: bestThreshold[maxSpeedIndex]   = 759

ir_sort is faster than std::sort 75.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007567519214

#####################################################################
Debug: arrayLength                    = 246
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 807, 193, 
Debug: bestThreshold[maxSpeedIndex]   = 807

ir_sort is faster than std::sort 80.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010924639991

#####################################################################
Debug: arrayLength                    = 247
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 736, 264, 
Debug: bestThreshold[maxSpeedIndex]   = 736

ir_sort is faster than std::sort 73.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007629977865

#####################################################################
Debug: arrayLength                    = 248
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 736, 264, 
Debug: bestThreshold[maxSpeedIndex]   = 736

ir_sort is faster than std::sort 73.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016976747556

#####################################################################
Debug: arrayLength                    = 249
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 804, 196, 
Debug: bestThreshold[maxSpeedIndex]   = 804

ir_sort is faster than std::sort 80.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008524171498

#####################################################################
Debug: arrayLength                    = 250
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 845, 155, 
Debug: bestThreshold[maxSpeedIndex]   = 845

ir_sort is faster than std::sort 84.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014703120837

#####################################################################
Debug: arrayLength                    = 251
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 806, 194, 
Debug: bestThreshold[maxSpeedIndex]   = 806

ir_sort is faster than std::sort 80.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004739377774

#####################################################################
Debug: arrayLength                    = 252
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 695, 305, 
Debug: bestThreshold[maxSpeedIndex]   = 695

ir_sort is faster than std::sort 69.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011385975358

#####################################################################
Debug: arrayLength                    = 253
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 709, 291, 
Debug: bestThreshold[maxSpeedIndex]   = 709

ir_sort is faster than std::sort 70.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009336604336

#####################################################################
Debug: arrayLength                    = 254
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 844, 156, 
Debug: bestThreshold[maxSpeedIndex]   = 844

ir_sort is faster than std::sort 84.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011498347129

#####################################################################
Debug: arrayLength                    = 255
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 811, 189, 
Debug: bestThreshold[maxSpeedIndex]   = 811

ir_sort is faster than std::sort 81.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006586065517

#####################################################################
Debug: arrayLength                    = 256
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 755, 245, 
Debug: bestThreshold[maxSpeedIndex]   = 755

ir_sort is faster than std::sort 75.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009995257466

#####################################################################
Debug: arrayLength                    = 257
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 749, 251, 
Debug: bestThreshold[maxSpeedIndex]   = 749

ir_sort is faster than std::sort 74.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006436992541

#####################################################################
Debug: arrayLength                    = 258
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 788, 212, 
Debug: bestThreshold[maxSpeedIndex]   = 788

ir_sort is faster than std::sort 78.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00627843127

#####################################################################
Debug: arrayLength                    = 259
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 868, 132, 
Debug: bestThreshold[maxSpeedIndex]   = 868

ir_sort is faster than std::sort 86.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010837104775

#####################################################################
Debug: arrayLength                    = 260
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 730, 270, 
Debug: bestThreshold[maxSpeedIndex]   = 730

ir_sort is faster than std::sort 73 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015071360629

#####################################################################
Debug: arrayLength                    = 261
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 760, 240, 
Debug: bestThreshold[maxSpeedIndex]   = 760

ir_sort is faster than std::sort 76 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009829236933

#####################################################################
Debug: arrayLength                    = 262
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 837, 163, 
Debug: bestThreshold[maxSpeedIndex]   = 837

ir_sort is faster than std::sort 83.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007504848066

#####################################################################
Debug: arrayLength                    = 263
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 788, 212, 
Debug: bestThreshold[maxSpeedIndex]   = 788

ir_sort is faster than std::sort 78.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008941129774

#####################################################################
Debug: arrayLength                    = 264
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 639, 361, 
Debug: bestThreshold[maxSpeedIndex]   = 639

ir_sort is faster than std::sort 63.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013337901982

#####################################################################
Debug: arrayLength                    = 265
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 666, 334, 
Debug: bestThreshold[maxSpeedIndex]   = 666

ir_sort is faster than std::sort 66.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015256508928

#####################################################################
Debug: arrayLength                    = 266
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 712, 288, 
Debug: bestThreshold[maxSpeedIndex]   = 712

ir_sort is faster than std::sort 71.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009471240735

#####################################################################
Debug: arrayLength                    = 267
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 709, 291, 
Debug: bestThreshold[maxSpeedIndex]   = 709

ir_sort is faster than std::sort 70.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006883224721

#####################################################################
Debug: arrayLength                    = 268
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 659, 341, 
Debug: bestThreshold[maxSpeedIndex]   = 659

ir_sort is faster than std::sort 65.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009247290457

#####################################################################
Debug: arrayLength                    = 269
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 660, 340, 
Debug: bestThreshold[maxSpeedIndex]   = 660

ir_sort is faster than std::sort 66 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012034653797

#####################################################################
Debug: arrayLength                    = 270
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 698, 302, 
Debug: bestThreshold[maxSpeedIndex]   = 698

ir_sort is faster than std::sort 69.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008038779001

#####################################################################
Debug: arrayLength                    = 271
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 709, 291, 
Debug: bestThreshold[maxSpeedIndex]   = 709

ir_sort is faster than std::sort 70.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007027997391

#####################################################################
Debug: arrayLength                    = 272
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 666, 334, 
Debug: bestThreshold[maxSpeedIndex]   = 666

ir_sort is faster than std::sort 66.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005575320768

#####################################################################
Debug: arrayLength                    = 273
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 696, 304, 
Debug: bestThreshold[maxSpeedIndex]   = 696

ir_sort is faster than std::sort 69.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008037733564

#####################################################################
Debug: arrayLength                    = 274
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 686, 314, 
Debug: bestThreshold[maxSpeedIndex]   = 686

ir_sort is faster than std::sort 68.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012270816406

#####################################################################
Debug: arrayLength                    = 275
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 716, 284, 
Debug: bestThreshold[maxSpeedIndex]   = 716

ir_sort is faster than std::sort 71.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008136719251

#####################################################################
Debug: arrayLength                    = 276
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 709, 291, 
Debug: bestThreshold[maxSpeedIndex]   = 709

ir_sort is faster than std::sort 70.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005343876113

#####################################################################
Debug: arrayLength                    = 277
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 708, 292, 
Debug: bestThreshold[maxSpeedIndex]   = 708

ir_sort is faster than std::sort 70.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005166752997

#####################################################################
Debug: arrayLength                    = 278
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 629, 371, 
Debug: bestThreshold[maxSpeedIndex]   = 629

ir_sort is faster than std::sort 62.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012081601598

#####################################################################
Debug: arrayLength                    = 279
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 758, 242, 
Debug: bestThreshold[maxSpeedIndex]   = 758

ir_sort is faster than std::sort 75.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007602083059

#####################################################################
Debug: arrayLength                    = 280
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 780, 220, 
Debug: bestThreshold[maxSpeedIndex]   = 780

ir_sort is faster than std::sort 78 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00829560785

#####################################################################
Debug: arrayLength                    = 281
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 802, 198, 
Debug: bestThreshold[maxSpeedIndex]   = 802

ir_sort is faster than std::sort 80.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007001358652

#####################################################################
Debug: arrayLength                    = 282
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 743, 257, 
Debug: bestThreshold[maxSpeedIndex]   = 743

ir_sort is faster than std::sort 74.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010629441619

#####################################################################
Debug: arrayLength                    = 283
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 794, 206, 
Debug: bestThreshold[maxSpeedIndex]   = 794

ir_sort is faster than std::sort 79.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012287926434

#####################################################################
Debug: arrayLength                    = 284
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 788, 212, 
Debug: bestThreshold[maxSpeedIndex]   = 788

ir_sort is faster than std::sort 78.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008937719223

#####################################################################
Debug: arrayLength                    = 285
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 756, 244, 
Debug: bestThreshold[maxSpeedIndex]   = 756

ir_sort is faster than std::sort 75.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008297344916

#####################################################################
Debug: arrayLength                    = 286
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 747, 253, 
Debug: bestThreshold[maxSpeedIndex]   = 747

ir_sort is faster than std::sort 74.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017306665577

#####################################################################
Debug: arrayLength                    = 287
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 784, 216, 
Debug: bestThreshold[maxSpeedIndex]   = 784

ir_sort is faster than std::sort 78.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014739592914

#####################################################################
Debug: arrayLength                    = 288
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 773, 227, 
Debug: bestThreshold[maxSpeedIndex]   = 773

ir_sort is faster than std::sort 77.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012088756719

#####################################################################
Debug: arrayLength                    = 289
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 825, 175, 
Debug: bestThreshold[maxSpeedIndex]   = 825

ir_sort is faster than std::sort 82.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017027494923

#####################################################################
Debug: arrayLength                    = 290
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 821, 179, 
Debug: bestThreshold[maxSpeedIndex]   = 821

ir_sort is faster than std::sort 82.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013156365684

#####################################################################
Debug: arrayLength                    = 291
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 822, 178, 
Debug: bestThreshold[maxSpeedIndex]   = 822

ir_sort is faster than std::sort 82.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010107855867

#####################################################################
Debug: arrayLength                    = 292
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 814, 186, 
Debug: bestThreshold[maxSpeedIndex]   = 814

ir_sort is faster than std::sort 81.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007211721537

#####################################################################
Debug: arrayLength                    = 293
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 823, 177, 
Debug: bestThreshold[maxSpeedIndex]   = 823

ir_sort is faster than std::sort 82.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015567766467

#####################################################################
Debug: arrayLength                    = 294
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 827, 173, 
Debug: bestThreshold[maxSpeedIndex]   = 827

ir_sort is faster than std::sort 82.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.018717292369

#####################################################################
Debug: arrayLength                    = 295
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 862, 138, 
Debug: bestThreshold[maxSpeedIndex]   = 862

ir_sort is faster than std::sort 86.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015574452758

#####################################################################
Debug: arrayLength                    = 296
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 811, 189, 
Debug: bestThreshold[maxSpeedIndex]   = 811

ir_sort is faster than std::sort 81.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008055799631

#####################################################################
Debug: arrayLength                    = 297
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 829, 171, 
Debug: bestThreshold[maxSpeedIndex]   = 829

ir_sort is faster than std::sort 82.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013459256228

#####################################################################
Debug: arrayLength                    = 298
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 847, 153, 
Debug: bestThreshold[maxSpeedIndex]   = 847

ir_sort is faster than std::sort 84.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.019288044831

#####################################################################
Debug: arrayLength                    = 299
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 826, 174, 
Debug: bestThreshold[maxSpeedIndex]   = 826

ir_sort is faster than std::sort 82.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016340163145

#####################################################################
Debug: arrayLength                    = 300
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 874, 126, 
Debug: bestThreshold[maxSpeedIndex]   = 874

ir_sort is faster than std::sort 87.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.021019290413

#####################################################################
Debug: arrayLength                    = 301
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 850, 150, 
Debug: bestThreshold[maxSpeedIndex]   = 850

ir_sort is faster than std::sort 85 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016569221052

#####################################################################
Debug: arrayLength                    = 302
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 830, 170, 
Debug: bestThreshold[maxSpeedIndex]   = 830

ir_sort is faster than std::sort 83 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01122630885

#####################################################################
Debug: arrayLength                    = 303
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 852, 148, 
Debug: bestThreshold[maxSpeedIndex]   = 852

ir_sort is faster than std::sort 85.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012086525043

#####################################################################
Debug: arrayLength                    = 304
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 857, 143, 
Debug: bestThreshold[maxSpeedIndex]   = 857

ir_sort is faster than std::sort 85.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011709289513

#####################################################################
Debug: arrayLength                    = 305
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 850, 150, 
Debug: bestThreshold[maxSpeedIndex]   = 850

ir_sort is faster than std::sort 85 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013202823141

#####################################################################
Debug: arrayLength                    = 306
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 848, 152, 
Debug: bestThreshold[maxSpeedIndex]   = 848

ir_sort is faster than std::sort 84.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015108990271

#####################################################################
Debug: arrayLength                    = 307
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 804, 196, 
Debug: bestThreshold[maxSpeedIndex]   = 804

ir_sort is faster than std::sort 80.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017539116126

#####################################################################
Debug: arrayLength                    = 308
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 832, 168, 
Debug: bestThreshold[maxSpeedIndex]   = 832

ir_sort is faster than std::sort 83.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014834401235

#####################################################################
Debug: arrayLength                    = 309
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 851, 149, 
Debug: bestThreshold[maxSpeedIndex]   = 851

ir_sort is faster than std::sort 85.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.021915466251

#####################################################################
Debug: arrayLength                    = 310
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 873, 127, 
Debug: bestThreshold[maxSpeedIndex]   = 873

ir_sort is faster than std::sort 87.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013162337962

#####################################################################
Debug: arrayLength                    = 311
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 837, 163, 
Debug: bestThreshold[maxSpeedIndex]   = 837

ir_sort is faster than std::sort 83.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015126761145

#####################################################################
Debug: arrayLength                    = 312
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 845, 155, 
Debug: bestThreshold[maxSpeedIndex]   = 845

ir_sort is faster than std::sort 84.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01526251349

#####################################################################
Debug: arrayLength                    = 313
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 859, 141, 
Debug: bestThreshold[maxSpeedIndex]   = 859

ir_sort is faster than std::sort 85.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017213431368

#####################################################################
Debug: arrayLength                    = 314
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 839, 161, 
Debug: bestThreshold[maxSpeedIndex]   = 839

ir_sort is faster than std::sort 83.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.018256298769

#####################################################################
Debug: arrayLength                    = 315
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 865, 135, 
Debug: bestThreshold[maxSpeedIndex]   = 865

ir_sort is faster than std::sort 86.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.018414925049

#####################################################################
Debug: arrayLength                    = 316
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 870, 130, 
Debug: bestThreshold[maxSpeedIndex]   = 870

ir_sort is faster than std::sort 87 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015102601074

#####################################################################
Debug: arrayLength                    = 317
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 871, 129, 
Debug: bestThreshold[maxSpeedIndex]   = 871

ir_sort is faster than std::sort 87.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016740905631

#####################################################################
Debug: arrayLength                    = 318
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 851, 149, 
Debug: bestThreshold[maxSpeedIndex]   = 851

ir_sort is faster than std::sort 85.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013699482347

#####################################################################
Debug: arrayLength                    = 319
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 862, 138, 
Debug: bestThreshold[maxSpeedIndex]   = 862

ir_sort is faster than std::sort 86.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010861860513

#####################################################################
Debug: arrayLength                    = 320
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 858, 142, 
Debug: bestThreshold[maxSpeedIndex]   = 858

ir_sort is faster than std::sort 85.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011063764297

#####################################################################
Debug: arrayLength                    = 321
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 838, 162, 
Debug: bestThreshold[maxSpeedIndex]   = 838

ir_sort is faster than std::sort 83.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006692588295

#####################################################################
Debug: arrayLength                    = 322
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 854, 146, 
Debug: bestThreshold[maxSpeedIndex]   = 854

ir_sort is faster than std::sort 85.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.020952108757

#####################################################################
Debug: arrayLength                    = 323
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 834, 166, 
Debug: bestThreshold[maxSpeedIndex]   = 834

ir_sort is faster than std::sort 83.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001940214278

#####################################################################
Debug: arrayLength                    = 324
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 870, 130, 
Debug: bestThreshold[maxSpeedIndex]   = 870

ir_sort is faster than std::sort 87 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.019421154233

#####################################################################
Debug: arrayLength                    = 325
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 845, 155, 
Debug: bestThreshold[maxSpeedIndex]   = 845

ir_sort is faster than std::sort 84.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013681894878

#####################################################################
Debug: arrayLength                    = 326
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 850, 150, 
Debug: bestThreshold[maxSpeedIndex]   = 850

ir_sort is faster than std::sort 85 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010886419547

#####################################################################
Debug: arrayLength                    = 327
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 880, 120, 
Debug: bestThreshold[maxSpeedIndex]   = 880

ir_sort is faster than std::sort 88 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.019494048307

#####################################################################
Debug: arrayLength                    = 328
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 870, 130, 
Debug: bestThreshold[maxSpeedIndex]   = 870

ir_sort is faster than std::sort 87 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012870062078

#####################################################################
Debug: arrayLength                    = 329
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 841, 159, 
Debug: bestThreshold[maxSpeedIndex]   = 841

ir_sort is faster than std::sort 84.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00812604566

#####################################################################
Debug: arrayLength                    = 330
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 861, 139, 
Debug: bestThreshold[maxSpeedIndex]   = 861

ir_sort is faster than std::sort 86.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01850051987

#####################################################################
Debug: arrayLength                    = 331
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 847, 153, 
Debug: bestThreshold[maxSpeedIndex]   = 847

ir_sort is faster than std::sort 84.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.0093219971

#####################################################################
Debug: arrayLength                    = 332
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 797, 203, 
Debug: bestThreshold[maxSpeedIndex]   = 797

ir_sort is faster than std::sort 79.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014544715868

#####################################################################
Debug: arrayLength                    = 333
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 801, 199, 
Debug: bestThreshold[maxSpeedIndex]   = 801

ir_sort is faster than std::sort 80.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011630116818

#####################################################################
Debug: arrayLength                    = 334
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 834, 166, 
Debug: bestThreshold[maxSpeedIndex]   = 834

ir_sort is faster than std::sort 83.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01232498433

#####################################################################
Debug: arrayLength                    = 335
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 804, 196, 
Debug: bestThreshold[maxSpeedIndex]   = 804

ir_sort is faster than std::sort 80.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006544335782

#####################################################################
Debug: arrayLength                    = 336
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 802, 198, 
Debug: bestThreshold[maxSpeedIndex]   = 802

ir_sort is faster than std::sort 80.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009338904915

#####################################################################
Debug: arrayLength                    = 337
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 823, 177, 
Debug: bestThreshold[maxSpeedIndex]   = 823

ir_sort is faster than std::sort 82.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008467575029

#####################################################################
Debug: arrayLength                    = 338
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 814, 186, 
Debug: bestThreshold[maxSpeedIndex]   = 814

ir_sort is faster than std::sort 81.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008783907438

#####################################################################
Debug: arrayLength                    = 339
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 844, 156, 
Debug: bestThreshold[maxSpeedIndex]   = 844

ir_sort is faster than std::sort 84.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010562619741

#####################################################################
Debug: arrayLength                    = 340
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 799, 201, 
Debug: bestThreshold[maxSpeedIndex]   = 799

ir_sort is faster than std::sort 79.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017111532726

#####################################################################
Debug: arrayLength                    = 341
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 822, 178, 
Debug: bestThreshold[maxSpeedIndex]   = 822

ir_sort is faster than std::sort 82.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009086075012

#####################################################################
Debug: arrayLength                    = 342
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 807, 193, 
Debug: bestThreshold[maxSpeedIndex]   = 807

ir_sort is faster than std::sort 80.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003313673182

#####################################################################
Debug: arrayLength                    = 343
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 814, 186, 
Debug: bestThreshold[maxSpeedIndex]   = 814

ir_sort is faster than std::sort 81.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014192364617

#####################################################################
Debug: arrayLength                    = 344
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 819, 181, 
Debug: bestThreshold[maxSpeedIndex]   = 819

ir_sort is faster than std::sort 81.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009412754611

#####################################################################
Debug: arrayLength                    = 345
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 815, 185, 
Debug: bestThreshold[maxSpeedIndex]   = 815

ir_sort is faster than std::sort 81.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007036733206

#####################################################################
Debug: arrayLength                    = 346
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 676, 324, 
Debug: bestThreshold[maxSpeedIndex]   = 676

ir_sort is faster than std::sort 67.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011818271407

#####################################################################
Debug: arrayLength                    = 347
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 722, 278, 
Debug: bestThreshold[maxSpeedIndex]   = 722

ir_sort is faster than std::sort 72.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010093353083

#####################################################################
Debug: arrayLength                    = 348
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 718, 282, 
Debug: bestThreshold[maxSpeedIndex]   = 718

ir_sort is faster than std::sort 71.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011556415502

#####################################################################
Debug: arrayLength                    = 349
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 726, 274, 
Debug: bestThreshold[maxSpeedIndex]   = 726

ir_sort is faster than std::sort 72.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009708796386

#####################################################################
Debug: arrayLength                    = 350
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 704, 296, 
Debug: bestThreshold[maxSpeedIndex]   = 704

ir_sort is faster than std::sort 70.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001460574824

#####################################################################
Debug: arrayLength                    = 351
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 612, 388, 
Debug: bestThreshold[maxSpeedIndex]   = 612

ir_sort is faster than std::sort 61.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010336717285

#####################################################################
Debug: arrayLength                    = 352
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 624, 376, 
Debug: bestThreshold[maxSpeedIndex]   = 624

ir_sort is faster than std::sort 62.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004995819511

#####################################################################
Debug: arrayLength                    = 353
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 621, 379, 
Debug: bestThreshold[maxSpeedIndex]   = 621

ir_sort is faster than std::sort 62.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004033414188

#####################################################################
Debug: arrayLength                    = 354
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 619, 381, 
Debug: bestThreshold[maxSpeedIndex]   = 619

ir_sort is faster than std::sort 61.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003643092832

#####################################################################
Debug: arrayLength                    = 355
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 633, 367, 
Debug: bestThreshold[maxSpeedIndex]   = 633

ir_sort is faster than std::sort 63.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004334186014

#####################################################################
Debug: arrayLength                    = 356
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 585, 415, 
Debug: bestThreshold[maxSpeedIndex]   = 585

ir_sort is faster than std::sort 58.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002313727254

#####################################################################
Debug: arrayLength                    = 357
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 631, 369, 
Debug: bestThreshold[maxSpeedIndex]   = 631

ir_sort is faster than std::sort 63.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003060728191

#####################################################################
Debug: arrayLength                    = 358
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 588, 412, 
Debug: bestThreshold[maxSpeedIndex]   = 588

ir_sort is faster than std::sort 58.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002097319765

#####################################################################
Debug: arrayLength                    = 359
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 606, 394, 
Debug: bestThreshold[maxSpeedIndex]   = 606

ir_sort is faster than std::sort 60.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004956007885

#####################################################################
Debug: arrayLength                    = 360
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 574, 426, 
Debug: bestThreshold[maxSpeedIndex]   = 574

ir_sort is faster than std::sort 57.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004088354238

#####################################################################
Debug: arrayLength                    = 361
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 602, 398, 
Debug: bestThreshold[maxSpeedIndex]   = 602

ir_sort is faster than std::sort 60.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003167896337

#####################################################################
Debug: arrayLength                    = 362
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 512, 488, 
Debug: bestThreshold[maxSpeedIndex]   = 512

ir_sort is faster than std::sort 51.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002739891348

#####################################################################
Debug: arrayLength                    = 363
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 535, 465, 
Debug: bestThreshold[maxSpeedIndex]   = 535

ir_sort is faster than std::sort 53.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004385035959

#####################################################################
Debug: arrayLength                    = 364
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 555, 445, 
Debug: bestThreshold[maxSpeedIndex]   = 555

ir_sort is faster than std::sort 55.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008711513516

#####################################################################
Debug: arrayLength                    = 365
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 520, 480, 
Debug: bestThreshold[maxSpeedIndex]   = 520

ir_sort is faster than std::sort 52 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004390337632

#####################################################################
Debug: arrayLength                    = 366
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 503, 497, 
Debug: bestThreshold[maxSpeedIndex]   = 503

ir_sort is faster than std::sort 50.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9999166772853

#####################################################################
Debug: arrayLength                    = 367
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 518, 482, 
Debug: bestThreshold[maxSpeedIndex]   = 518

ir_sort is faster than std::sort 51.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003476748795

#####################################################################
Debug: arrayLength                    = 368
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 488, 512, 
Debug: bestThreshold[maxSpeedIndex]   = 512

std::sort is faster than ir_sort 51.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.999140924753

#####################################################################
Debug: arrayLength                    = 369
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 585, 415, 
Debug: bestThreshold[maxSpeedIndex]   = 585

ir_sort is faster than std::sort 58.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012867234944

#####################################################################
Debug: arrayLength                    = 370
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 491, 509, 
Debug: bestThreshold[maxSpeedIndex]   = 509

std::sort is faster than ir_sort 50.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002074741512

#####################################################################
Debug: arrayLength                    = 371
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 552, 448, 
Debug: bestThreshold[maxSpeedIndex]   = 552

ir_sort is faster than std::sort 55.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9989573660954

#####################################################################
Debug: arrayLength                    = 372
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 487, 513, 
Debug: bestThreshold[maxSpeedIndex]   = 513

std::sort is faster than ir_sort 51.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005188358133

#####################################################################
Debug: arrayLength                    = 373
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 438, 562, 
Debug: bestThreshold[maxSpeedIndex]   = 562

std::sort is faster than ir_sort 56.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000060428693

#####################################################################
Debug: arrayLength                    = 374
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 528, 472, 
Debug: bestThreshold[maxSpeedIndex]   = 528

ir_sort is faster than std::sort 52.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000889235843

#####################################################################
Debug: arrayLength                    = 375
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 538, 462, 
Debug: bestThreshold[maxSpeedIndex]   = 538

ir_sort is faster than std::sort 53.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002020442054

#####################################################################
Debug: arrayLength                    = 376
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 461, 539, 
Debug: bestThreshold[maxSpeedIndex]   = 539

std::sort is faster than ir_sort 53.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000806777956

#####################################################################
Debug: arrayLength                    = 377
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 537, 463, 
Debug: bestThreshold[maxSpeedIndex]   = 537

ir_sort is faster than std::sort 53.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00054306548

#####################################################################
Debug: arrayLength                    = 378
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 571, 429, 
Debug: bestThreshold[maxSpeedIndex]   = 571

ir_sort is faster than std::sort 57.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004017098636

#####################################################################
Debug: arrayLength                    = 379
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 546, 454, 
Debug: bestThreshold[maxSpeedIndex]   = 546

ir_sort is faster than std::sort 54.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000055863327

#####################################################################
Debug: arrayLength                    = 380
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 546, 454, 
Debug: bestThreshold[maxSpeedIndex]   = 546

ir_sort is faster than std::sort 54.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006840810796

#####################################################################
Debug: arrayLength                    = 381
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 539, 461, 
Debug: bestThreshold[maxSpeedIndex]   = 539

ir_sort is faster than std::sort 53.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9992288112237

#####################################################################
Debug: arrayLength                    = 382
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 634, 366, 
Debug: bestThreshold[maxSpeedIndex]   = 634

ir_sort is faster than std::sort 63.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012719139929

#####################################################################
Debug: arrayLength                    = 383
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 632, 368, 
Debug: bestThreshold[maxSpeedIndex]   = 632

ir_sort is faster than std::sort 63.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011216693026

#####################################################################
Debug: arrayLength                    = 384
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 619, 381, 
Debug: bestThreshold[maxSpeedIndex]   = 619

ir_sort is faster than std::sort 61.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005136385873

#####################################################################
Debug: arrayLength                    = 385
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 635, 365, 
Debug: bestThreshold[maxSpeedIndex]   = 635

ir_sort is faster than std::sort 63.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004369837281

#####################################################################
Debug: arrayLength                    = 386
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 652, 348, 
Debug: bestThreshold[maxSpeedIndex]   = 652

ir_sort is faster than std::sort 65.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003249001358

#####################################################################
Debug: arrayLength                    = 387
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 723, 277, 
Debug: bestThreshold[maxSpeedIndex]   = 723

ir_sort is faster than std::sort 72.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00639556095

#####################################################################
Debug: arrayLength                    = 388
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 719, 281, 
Debug: bestThreshold[maxSpeedIndex]   = 719

ir_sort is faster than std::sort 71.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002300735023

#####################################################################
Debug: arrayLength                    = 389
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 740, 260, 
Debug: bestThreshold[maxSpeedIndex]   = 740

ir_sort is faster than std::sort 74 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009125975718

#####################################################################
Debug: arrayLength                    = 390
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 725, 275, 
Debug: bestThreshold[maxSpeedIndex]   = 725

ir_sort is faster than std::sort 72.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007663414073

#####################################################################
Debug: arrayLength                    = 391
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 717, 283, 
Debug: bestThreshold[maxSpeedIndex]   = 717

ir_sort is faster than std::sort 71.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007573307643

#####################################################################
Debug: arrayLength                    = 392
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 705, 295, 
Debug: bestThreshold[maxSpeedIndex]   = 705

ir_sort is faster than std::sort 70.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00824749984

#####################################################################
Debug: arrayLength                    = 393
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 683, 317, 
Debug: bestThreshold[maxSpeedIndex]   = 683

ir_sort is faster than std::sort 68.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007074287704

#####################################################################
Debug: arrayLength                    = 394
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 689, 311, 
Debug: bestThreshold[maxSpeedIndex]   = 689

ir_sort is faster than std::sort 68.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005843097959

#####################################################################
Debug: arrayLength                    = 395
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 658, 342, 
Debug: bestThreshold[maxSpeedIndex]   = 658

ir_sort is faster than std::sort 65.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001039609239

#####################################################################
Debug: arrayLength                    = 396
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 713, 287, 
Debug: bestThreshold[maxSpeedIndex]   = 713

ir_sort is faster than std::sort 71.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014875776776

#####################################################################
Debug: arrayLength                    = 397
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 694, 306, 
Debug: bestThreshold[maxSpeedIndex]   = 694

ir_sort is faster than std::sort 69.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005758689151

#####################################################################
Debug: arrayLength                    = 398
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 616, 384, 
Debug: bestThreshold[maxSpeedIndex]   = 616

ir_sort is faster than std::sort 61.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006830251866

#####################################################################
Debug: arrayLength                    = 399
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 638, 362, 
Debug: bestThreshold[maxSpeedIndex]   = 638

ir_sort is faster than std::sort 63.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009338457668

#####################################################################
Debug: arrayLength                    = 400
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 642, 358, 
Debug: bestThreshold[maxSpeedIndex]   = 642

ir_sort is faster than std::sort 64.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007980963764

#####################################################################
Debug: arrayLength                    = 401
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 633, 367, 
Debug: bestThreshold[maxSpeedIndex]   = 633

ir_sort is faster than std::sort 63.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003601934067

#####################################################################
Debug: arrayLength                    = 402
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 640, 360, 
Debug: bestThreshold[maxSpeedIndex]   = 640

ir_sort is faster than std::sort 64 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007294945769

#####################################################################
Debug: arrayLength                    = 403
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 622, 378, 
Debug: bestThreshold[maxSpeedIndex]   = 622

ir_sort is faster than std::sort 62.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008615651424

#####################################################################
Debug: arrayLength                    = 404
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 642, 358, 
Debug: bestThreshold[maxSpeedIndex]   = 642

ir_sort is faster than std::sort 64.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00567150906

#####################################################################
Debug: arrayLength                    = 405
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 585, 415, 
Debug: bestThreshold[maxSpeedIndex]   = 585

ir_sort is faster than std::sort 58.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001856437383

#####################################################################
Debug: arrayLength                    = 406
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 626, 374, 
Debug: bestThreshold[maxSpeedIndex]   = 626

ir_sort is faster than std::sort 62.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005914865595

#####################################################################
Debug: arrayLength                    = 407
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 593, 407, 
Debug: bestThreshold[maxSpeedIndex]   = 593

ir_sort is faster than std::sort 59.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006144181035

#####################################################################
Debug: arrayLength                    = 408
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 617, 383, 
Debug: bestThreshold[maxSpeedIndex]   = 617

ir_sort is faster than std::sort 61.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002717735914

#####################################################################
Debug: arrayLength                    = 409
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 641, 359, 
Debug: bestThreshold[maxSpeedIndex]   = 641

ir_sort is faster than std::sort 64.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009579153795

#####################################################################
Debug: arrayLength                    = 410
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 591, 409, 
Debug: bestThreshold[maxSpeedIndex]   = 591

ir_sort is faster than std::sort 59.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002173350556

#####################################################################
Debug: arrayLength                    = 411
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 627, 373, 
Debug: bestThreshold[maxSpeedIndex]   = 627

ir_sort is faster than std::sort 62.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006974264756

#####################################################################
Debug: arrayLength                    = 412
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 634, 366, 
Debug: bestThreshold[maxSpeedIndex]   = 634

ir_sort is faster than std::sort 63.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007744723714

#####################################################################
Debug: arrayLength                    = 413
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 633, 367, 
Debug: bestThreshold[maxSpeedIndex]   = 633

ir_sort is faster than std::sort 63.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006920083275

#####################################################################
Debug: arrayLength                    = 414
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 671, 329, 
Debug: bestThreshold[maxSpeedIndex]   = 671

ir_sort is faster than std::sort 67.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004243774209

#####################################################################
Debug: arrayLength                    = 415
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 652, 348, 
Debug: bestThreshold[maxSpeedIndex]   = 652

ir_sort is faster than std::sort 65.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00395945842

#####################################################################
Debug: arrayLength                    = 416
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 638, 362, 
Debug: bestThreshold[maxSpeedIndex]   = 638

ir_sort is faster than std::sort 63.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00551639184

#####################################################################
Debug: arrayLength                    = 417
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 627, 373, 
Debug: bestThreshold[maxSpeedIndex]   = 627

ir_sort is faster than std::sort 62.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005106155993

#####################################################################
Debug: arrayLength                    = 418
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 627, 373, 
Debug: bestThreshold[maxSpeedIndex]   = 627

ir_sort is faster than std::sort 62.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005872708482

#####################################################################
Debug: arrayLength                    = 419
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 631, 369, 
Debug: bestThreshold[maxSpeedIndex]   = 631

ir_sort is faster than std::sort 63.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9988991386026

#####################################################################
Debug: arrayLength                    = 420
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 609, 391, 
Debug: bestThreshold[maxSpeedIndex]   = 609

ir_sort is faster than std::sort 60.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012199633403

#####################################################################
Debug: arrayLength                    = 421
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 585, 415, 
Debug: bestThreshold[maxSpeedIndex]   = 585

ir_sort is faster than std::sort 58.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008046103904

#####################################################################
Debug: arrayLength                    = 422
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 638, 362, 
Debug: bestThreshold[maxSpeedIndex]   = 638

ir_sort is faster than std::sort 63.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007258827679

#####################################################################
Debug: arrayLength                    = 423
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 641, 359, 
Debug: bestThreshold[maxSpeedIndex]   = 641

ir_sort is faster than std::sort 64.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00189399731

#####################################################################
Debug: arrayLength                    = 424
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 603, 397, 
Debug: bestThreshold[maxSpeedIndex]   = 603

ir_sort is faster than std::sort 60.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000820860077

#####################################################################
Debug: arrayLength                    = 425
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 665, 335, 
Debug: bestThreshold[maxSpeedIndex]   = 665

ir_sort is faster than std::sort 66.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008069038338

#####################################################################
Debug: arrayLength                    = 426
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 633, 367, 
Debug: bestThreshold[maxSpeedIndex]   = 633

ir_sort is faster than std::sort 63.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003689144041

#####################################################################
Debug: arrayLength                    = 427
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 600, 400, 
Debug: bestThreshold[maxSpeedIndex]   = 600

ir_sort is faster than std::sort 60 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000541479187

#####################################################################
Debug: arrayLength                    = 428
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 717, 283, 
Debug: bestThreshold[maxSpeedIndex]   = 717

ir_sort is faster than std::sort 71.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009290969905

#####################################################################
Debug: arrayLength                    = 429
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 642, 358, 
Debug: bestThreshold[maxSpeedIndex]   = 642

ir_sort is faster than std::sort 64.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002010907413

#####################################################################
Debug: arrayLength                    = 430
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 602, 398, 
Debug: bestThreshold[maxSpeedIndex]   = 602

ir_sort is faster than std::sort 60.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007964300697

#####################################################################
Debug: arrayLength                    = 431
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 640, 360, 
Debug: bestThreshold[maxSpeedIndex]   = 640

ir_sort is faster than std::sort 64 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007086603294

#####################################################################
Debug: arrayLength                    = 432
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 667, 333, 
Debug: bestThreshold[maxSpeedIndex]   = 667

ir_sort is faster than std::sort 66.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006486038686

#####################################################################
Debug: arrayLength                    = 433
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 673, 327, 
Debug: bestThreshold[maxSpeedIndex]   = 673

ir_sort is faster than std::sort 67.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004511445002

#####################################################################
Debug: arrayLength                    = 434
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 686, 314, 
Debug: bestThreshold[maxSpeedIndex]   = 686

ir_sort is faster than std::sort 68.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008434325524

#####################################################################
Debug: arrayLength                    = 435
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 674, 326, 
Debug: bestThreshold[maxSpeedIndex]   = 674

ir_sort is faster than std::sort 67.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005516815012

#####################################################################
Debug: arrayLength                    = 436
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 748, 252, 
Debug: bestThreshold[maxSpeedIndex]   = 748

ir_sort is faster than std::sort 74.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011831012395

#####################################################################
Debug: arrayLength                    = 437
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 678, 322, 
Debug: bestThreshold[maxSpeedIndex]   = 678

ir_sort is faster than std::sort 67.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9997868329446

#####################################################################
Debug: arrayLength                    = 438
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 675, 325, 
Debug: bestThreshold[maxSpeedIndex]   = 675

ir_sort is faster than std::sort 67.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009366905657

#####################################################################
Debug: arrayLength                    = 439
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 718, 282, 
Debug: bestThreshold[maxSpeedIndex]   = 718

ir_sort is faster than std::sort 71.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016913509831

#####################################################################
Debug: arrayLength                    = 440
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 658, 342, 
Debug: bestThreshold[maxSpeedIndex]   = 658

ir_sort is faster than std::sort 65.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001584516818

#####################################################################
Debug: arrayLength                    = 441
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 679, 321, 
Debug: bestThreshold[maxSpeedIndex]   = 679

ir_sort is faster than std::sort 67.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004934673907

#####################################################################
Debug: arrayLength                    = 442
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 652, 348, 
Debug: bestThreshold[maxSpeedIndex]   = 652

ir_sort is faster than std::sort 65.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004431340678

#####################################################################
Debug: arrayLength                    = 443
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 651, 349, 
Debug: bestThreshold[maxSpeedIndex]   = 651

ir_sort is faster than std::sort 65.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007443314943

#####################################################################
Debug: arrayLength                    = 444
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 602, 398, 
Debug: bestThreshold[maxSpeedIndex]   = 602

ir_sort is faster than std::sort 60.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003187868577

#####################################################################
Debug: arrayLength                    = 445
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 616, 384, 
Debug: bestThreshold[maxSpeedIndex]   = 616

ir_sort is faster than std::sort 61.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.026546411875

#####################################################################
Debug: arrayLength                    = 446
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 685, 315, 
Debug: bestThreshold[maxSpeedIndex]   = 685

ir_sort is faster than std::sort 68.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.035720574895

#####################################################################
Debug: arrayLength                    = 447
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 631, 369, 
Debug: bestThreshold[maxSpeedIndex]   = 631

ir_sort is faster than std::sort 63.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.025020564751

#####################################################################
Debug: arrayLength                    = 448
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 556, 444, 
Debug: bestThreshold[maxSpeedIndex]   = 556

ir_sort is faster than std::sort 55.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006972948075

#####################################################################
Debug: arrayLength                    = 449
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 589, 411, 
Debug: bestThreshold[maxSpeedIndex]   = 589

ir_sort is faster than std::sort 58.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00407412365

#####################################################################
Debug: arrayLength                    = 450
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 568, 432, 
Debug: bestThreshold[maxSpeedIndex]   = 568

ir_sort is faster than std::sort 56.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002886246532

#####################################################################
Debug: arrayLength                    = 451
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 590, 410, 
Debug: bestThreshold[maxSpeedIndex]   = 590

ir_sort is faster than std::sort 59 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005974881323

#####################################################################
Debug: arrayLength                    = 452
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 565, 435, 
Debug: bestThreshold[maxSpeedIndex]   = 565

ir_sort is faster than std::sort 56.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003463510871

#####################################################################
Debug: arrayLength                    = 453
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 534, 466, 
Debug: bestThreshold[maxSpeedIndex]   = 534

ir_sort is faster than std::sort 53.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006208138253

#####################################################################
Debug: arrayLength                    = 454
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 571, 429, 
Debug: bestThreshold[maxSpeedIndex]   = 571

ir_sort is faster than std::sort 57.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014204971889

#####################################################################
Debug: arrayLength                    = 455
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 630, 370, 
Debug: bestThreshold[maxSpeedIndex]   = 630

ir_sort is faster than std::sort 63 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011078051599

#####################################################################
Debug: arrayLength                    = 456
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 639, 361, 
Debug: bestThreshold[maxSpeedIndex]   = 639

ir_sort is faster than std::sort 63.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00894690186

#####################################################################
Debug: arrayLength                    = 457
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 633, 367, 
Debug: bestThreshold[maxSpeedIndex]   = 633

ir_sort is faster than std::sort 63.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013593737814

#####################################################################
Debug: arrayLength                    = 458
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 586, 414, 
Debug: bestThreshold[maxSpeedIndex]   = 586

ir_sort is faster than std::sort 58.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005395306441

#####################################################################
Debug: arrayLength                    = 459
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 640, 360, 
Debug: bestThreshold[maxSpeedIndex]   = 640

ir_sort is faster than std::sort 64 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014933206462

#####################################################################
Debug: arrayLength                    = 460
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 676, 324, 
Debug: bestThreshold[maxSpeedIndex]   = 676

ir_sort is faster than std::sort 67.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.025240436465

#####################################################################
Debug: arrayLength                    = 461
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 655, 345, 
Debug: bestThreshold[maxSpeedIndex]   = 655

ir_sort is faster than std::sort 65.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.021543640947

#####################################################################
Debug: arrayLength                    = 462
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 670, 330, 
Debug: bestThreshold[maxSpeedIndex]   = 670

ir_sort is faster than std::sort 67 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012945123686

#####################################################################
Debug: arrayLength                    = 463
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 619, 381, 
Debug: bestThreshold[maxSpeedIndex]   = 619

ir_sort is faster than std::sort 61.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.021402375295

#####################################################################
Debug: arrayLength                    = 464
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 609, 391, 
Debug: bestThreshold[maxSpeedIndex]   = 609

ir_sort is faster than std::sort 60.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.026527059713

#####################################################################
Debug: arrayLength                    = 465
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 600, 400, 
Debug: bestThreshold[maxSpeedIndex]   = 600

ir_sort is faster than std::sort 60 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.022574002613

#####################################################################
Debug: arrayLength                    = 466
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 668, 332, 
Debug: bestThreshold[maxSpeedIndex]   = 668

ir_sort is faster than std::sort 66.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.021151069451

#####################################################################
Debug: arrayLength                    = 467
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 667, 333, 
Debug: bestThreshold[maxSpeedIndex]   = 667

ir_sort is faster than std::sort 66.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.041478971311

#####################################################################
Debug: arrayLength                    = 468
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 670, 330, 
Debug: bestThreshold[maxSpeedIndex]   = 670

ir_sort is faster than std::sort 67 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.022605002107

#####################################################################
Debug: arrayLength                    = 469
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 701, 299, 
Debug: bestThreshold[maxSpeedIndex]   = 701

ir_sort is faster than std::sort 70.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.028885508342

#####################################################################
Debug: arrayLength                    = 470
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 604, 396, 
Debug: bestThreshold[maxSpeedIndex]   = 604

ir_sort is faster than std::sort 60.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.021890044327

#####################################################################
Debug: arrayLength                    = 471
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 688, 312, 
Debug: bestThreshold[maxSpeedIndex]   = 688

ir_sort is faster than std::sort 68.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.032755885906

#####################################################################
Debug: arrayLength                    = 472
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 689, 311, 
Debug: bestThreshold[maxSpeedIndex]   = 689

ir_sort is faster than std::sort 68.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.047978813092

#####################################################################
Debug: arrayLength                    = 473
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 662, 338, 
Debug: bestThreshold[maxSpeedIndex]   = 662

ir_sort is faster than std::sort 66.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.026855994405

#####################################################################
Debug: arrayLength                    = 474
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 480, 520, 
Debug: bestThreshold[maxSpeedIndex]   = 520

std::sort is faster than ir_sort 52 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013158187858

#####################################################################
Debug: arrayLength                    = 475
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 519, 481, 
Debug: bestThreshold[maxSpeedIndex]   = 519

ir_sort is faster than std::sort 51.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013263215234

#####################################################################
Debug: arrayLength                    = 476
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 548, 452, 
Debug: bestThreshold[maxSpeedIndex]   = 548

ir_sort is faster than std::sort 54.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00394230036

#####################################################################
Debug: arrayLength                    = 477
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 533, 467, 
Debug: bestThreshold[maxSpeedIndex]   = 533

ir_sort is faster than std::sort 53.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000816198768

#####################################################################
Debug: arrayLength                    = 478
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 584, 416, 
Debug: bestThreshold[maxSpeedIndex]   = 584

ir_sort is faster than std::sort 58.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004671734648

#####################################################################
Debug: arrayLength                    = 479
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 567, 433, 
Debug: bestThreshold[maxSpeedIndex]   = 567

ir_sort is faster than std::sort 56.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004741894544

#####################################################################
Debug: arrayLength                    = 480
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 526, 474, 
Debug: bestThreshold[maxSpeedIndex]   = 526

ir_sort is faster than std::sort 52.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005465953079

#####################################################################
Debug: arrayLength                    = 481
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 523, 477, 
Debug: bestThreshold[maxSpeedIndex]   = 523

ir_sort is faster than std::sort 52.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004240544394

#####################################################################
Debug: arrayLength                    = 482
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 551, 449, 
Debug: bestThreshold[maxSpeedIndex]   = 551

ir_sort is faster than std::sort 55.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005227436157

#####################################################################
Debug: arrayLength                    = 483
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 526, 474, 
Debug: bestThreshold[maxSpeedIndex]   = 526

ir_sort is faster than std::sort 52.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004973272635

#####################################################################
Debug: arrayLength                    = 484
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 539, 461, 
Debug: bestThreshold[maxSpeedIndex]   = 539

ir_sort is faster than std::sort 53.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005642201394

#####################################################################
Debug: arrayLength                    = 485
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 544, 456, 
Debug: bestThreshold[maxSpeedIndex]   = 544

ir_sort is faster than std::sort 54.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005875153413

#####################################################################
Debug: arrayLength                    = 486
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 478, 522, 
Debug: bestThreshold[maxSpeedIndex]   = 522

std::sort is faster than ir_sort 52.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001826496263

#####################################################################
Debug: arrayLength                    = 487
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 506, 494, 
Debug: bestThreshold[maxSpeedIndex]   = 506

ir_sort is faster than std::sort 50.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002683619212

#####################################################################
Debug: arrayLength                    = 488
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 496, 504, 
Debug: bestThreshold[maxSpeedIndex]   = 504

std::sort is faster than ir_sort 50.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003559989525

#####################################################################
Debug: arrayLength                    = 489
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 538, 462, 
Debug: bestThreshold[maxSpeedIndex]   = 538

ir_sort is faster than std::sort 53.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9998549344659

#####################################################################
Debug: arrayLength                    = 490
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 535, 465, 
Debug: bestThreshold[maxSpeedIndex]   = 535

ir_sort is faster than std::sort 53.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003419362283

#####################################################################
Debug: arrayLength                    = 491
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 573, 427, 
Debug: bestThreshold[maxSpeedIndex]   = 573

ir_sort is faster than std::sort 57.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001719820475

#####################################################################
Debug: arrayLength                    = 492
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 512, 488, 
Debug: bestThreshold[maxSpeedIndex]   = 512

ir_sort is faster than std::sort 51.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002072944171

#####################################################################
Debug: arrayLength                    = 493
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 542, 458, 
Debug: bestThreshold[maxSpeedIndex]   = 542

ir_sort is faster than std::sort 54.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003911584493

#####################################################################
Debug: arrayLength                    = 494
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 565, 435, 
Debug: bestThreshold[maxSpeedIndex]   = 565

ir_sort is faster than std::sort 56.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9998575784395

#####################################################################
Debug: arrayLength                    = 495
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 573, 427, 
Debug: bestThreshold[maxSpeedIndex]   = 573

ir_sort is faster than std::sort 57.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005573307824

#####################################################################
Debug: arrayLength                    = 496
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 577, 423, 
Debug: bestThreshold[maxSpeedIndex]   = 577

ir_sort is faster than std::sort 57.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001122254167

#####################################################################
Debug: arrayLength                    = 497
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 590, 410, 
Debug: bestThreshold[maxSpeedIndex]   = 590

ir_sort is faster than std::sort 59 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002004463328

#####################################################################
Debug: arrayLength                    = 498
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 550, 450, 
Debug: bestThreshold[maxSpeedIndex]   = 550

ir_sort is faster than std::sort 55 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001766238914

#####################################################################
Debug: arrayLength                    = 499
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 603, 397, 
Debug: bestThreshold[maxSpeedIndex]   = 603

ir_sort is faster than std::sort 60.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002041068456

#####################################################################
Debug: arrayLength                    = 500
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 544, 456, 
Debug: bestThreshold[maxSpeedIndex]   = 544

ir_sort is faster than std::sort 54.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9998797020955

#####################################################################
Debug: arrayLength                    = 501
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 511, 489, 
Debug: bestThreshold[maxSpeedIndex]   = 511

ir_sort is faster than std::sort 51.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005733771318

#####################################################################
Debug: arrayLength                    = 502
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 546, 454, 
Debug: bestThreshold[maxSpeedIndex]   = 546

ir_sort is faster than std::sort 54.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006471170776

#####################################################################
Debug: arrayLength                    = 503
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 607, 393, 
Debug: bestThreshold[maxSpeedIndex]   = 607

ir_sort is faster than std::sort 60.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010437635165

#####################################################################
Debug: arrayLength                    = 504
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 539, 461, 
Debug: bestThreshold[maxSpeedIndex]   = 539

ir_sort is faster than std::sort 53.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003496497925

#####################################################################
Debug: arrayLength                    = 505
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 540, 460, 
Debug: bestThreshold[maxSpeedIndex]   = 540

ir_sort is faster than std::sort 54 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00700914733

#####################################################################
Debug: arrayLength                    = 506
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 533, 467, 
Debug: bestThreshold[maxSpeedIndex]   = 533

ir_sort is faster than std::sort 53.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002091277423

#####################################################################
Debug: arrayLength                    = 507
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 514, 486, 
Debug: bestThreshold[maxSpeedIndex]   = 514

ir_sort is faster than std::sort 51.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001939584458

#####################################################################
Debug: arrayLength                    = 508
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 538, 462, 
Debug: bestThreshold[maxSpeedIndex]   = 538

ir_sort is faster than std::sort 53.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001865993096

#####################################################################
Debug: arrayLength                    = 509
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 584, 416, 
Debug: bestThreshold[maxSpeedIndex]   = 584

ir_sort is faster than std::sort 58.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003148142936

#####################################################################
Debug: arrayLength                    = 510
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 615, 385, 
Debug: bestThreshold[maxSpeedIndex]   = 615

ir_sort is faster than std::sort 61.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005682769674

#####################################################################
Debug: arrayLength                    = 511
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 679, 321, 
Debug: bestThreshold[maxSpeedIndex]   = 679

ir_sort is faster than std::sort 67.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003966217813

#####################################################################
Debug: arrayLength                    = 512
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 623, 377, 
Debug: bestThreshold[maxSpeedIndex]   = 623

ir_sort is faster than std::sort 62.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002389599229

#####################################################################
Debug: arrayLength                    = 513
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 657, 343, 
Debug: bestThreshold[maxSpeedIndex]   = 657

ir_sort is faster than std::sort 65.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00791022532

#####################################################################
Debug: arrayLength                    = 514
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 673, 327, 
Debug: bestThreshold[maxSpeedIndex]   = 673

ir_sort is faster than std::sort 67.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000387928933

#####################################################################
Debug: arrayLength                    = 515
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 781, 219, 
Debug: bestThreshold[maxSpeedIndex]   = 781

ir_sort is faster than std::sort 78.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004757761992

#####################################################################
Debug: arrayLength                    = 516
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 768, 232, 
Debug: bestThreshold[maxSpeedIndex]   = 768

ir_sort is faster than std::sort 76.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005131283573

#####################################################################
Debug: arrayLength                    = 517
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 745, 255, 
Debug: bestThreshold[maxSpeedIndex]   = 745

ir_sort is faster than std::sort 74.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000431874714

#####################################################################
Debug: arrayLength                    = 518
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 761, 239, 
Debug: bestThreshold[maxSpeedIndex]   = 761

ir_sort is faster than std::sort 76.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010767480014

#####################################################################
Debug: arrayLength                    = 519
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 751, 249, 
Debug: bestThreshold[maxSpeedIndex]   = 751

ir_sort is faster than std::sort 75.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007964333456

#####################################################################
Debug: arrayLength                    = 520
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 670, 330, 
Debug: bestThreshold[maxSpeedIndex]   = 670

ir_sort is faster than std::sort 67 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015115873128

#####################################################################
Debug: arrayLength                    = 521
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 702, 298, 
Debug: bestThreshold[maxSpeedIndex]   = 702

ir_sort is faster than std::sort 70.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013992839118

#####################################################################
Debug: arrayLength                    = 522
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 731, 269, 
Debug: bestThreshold[maxSpeedIndex]   = 731

ir_sort is faster than std::sort 73.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009677246634

#####################################################################
Debug: arrayLength                    = 523
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 702, 298, 
Debug: bestThreshold[maxSpeedIndex]   = 702

ir_sort is faster than std::sort 70.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002719374744

#####################################################################
Debug: arrayLength                    = 524
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 712, 288, 
Debug: bestThreshold[maxSpeedIndex]   = 712

ir_sort is faster than std::sort 71.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010051184336

#####################################################################
Debug: arrayLength                    = 525
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 657, 343, 
Debug: bestThreshold[maxSpeedIndex]   = 657

ir_sort is faster than std::sort 65.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013727201484

#####################################################################
Debug: arrayLength                    = 526
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 687, 313, 
Debug: bestThreshold[maxSpeedIndex]   = 687

ir_sort is faster than std::sort 68.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007512569403

#####################################################################
Debug: arrayLength                    = 527
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 640, 360, 
Debug: bestThreshold[maxSpeedIndex]   = 640

ir_sort is faster than std::sort 64 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.000158035203

#####################################################################
Debug: arrayLength                    = 528
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 661, 339, 
Debug: bestThreshold[maxSpeedIndex]   = 661

ir_sort is faster than std::sort 66.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01586362536

#####################################################################
Debug: arrayLength                    = 529
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 634, 366, 
Debug: bestThreshold[maxSpeedIndex]   = 634

ir_sort is faster than std::sort 63.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009253786322

#####################################################################
Debug: arrayLength                    = 530
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 668, 332, 
Debug: bestThreshold[maxSpeedIndex]   = 668

ir_sort is faster than std::sort 66.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009420431428

#####################################################################
Debug: arrayLength                    = 531
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 649, 351, 
Debug: bestThreshold[maxSpeedIndex]   = 649

ir_sort is faster than std::sort 64.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012248411751

#####################################################################
Debug: arrayLength                    = 532
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 639, 361, 
Debug: bestThreshold[maxSpeedIndex]   = 639

ir_sort is faster than std::sort 63.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010245393395

#####################################################################
Debug: arrayLength                    = 533
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 642, 358, 
Debug: bestThreshold[maxSpeedIndex]   = 642

ir_sort is faster than std::sort 64.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002360432535

#####################################################################
Debug: arrayLength                    = 534
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 624, 376, 
Debug: bestThreshold[maxSpeedIndex]   = 624

ir_sort is faster than std::sort 62.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008046640644

#####################################################################
Debug: arrayLength                    = 535
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 656, 344, 
Debug: bestThreshold[maxSpeedIndex]   = 656

ir_sort is faster than std::sort 65.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008756264047

#####################################################################
Debug: arrayLength                    = 536
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 678, 322, 
Debug: bestThreshold[maxSpeedIndex]   = 678

ir_sort is faster than std::sort 67.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004110843983

#####################################################################
Debug: arrayLength                    = 537
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 645, 355, 
Debug: bestThreshold[maxSpeedIndex]   = 645

ir_sort is faster than std::sort 64.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007465263408

#####################################################################
Debug: arrayLength                    = 538
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 634, 366, 
Debug: bestThreshold[maxSpeedIndex]   = 634

ir_sort is faster than std::sort 63.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008293907521

#####################################################################
Debug: arrayLength                    = 539
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 678, 322, 
Debug: bestThreshold[maxSpeedIndex]   = 678

ir_sort is faster than std::sort 67.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008063852549

#####################################################################
Debug: arrayLength                    = 540
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 636, 364, 
Debug: bestThreshold[maxSpeedIndex]   = 636

ir_sort is faster than std::sort 63.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005814032945

#####################################################################
Debug: arrayLength                    = 541
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 595, 405, 
Debug: bestThreshold[maxSpeedIndex]   = 595

ir_sort is faster than std::sort 59.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003331498335

#####################################################################
Debug: arrayLength                    = 542
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 691, 309, 
Debug: bestThreshold[maxSpeedIndex]   = 691

ir_sort is faster than std::sort 69.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009816116783

#####################################################################
Debug: arrayLength                    = 543
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 682, 318, 
Debug: bestThreshold[maxSpeedIndex]   = 682

ir_sort is faster than std::sort 68.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008355148967

#####################################################################
Debug: arrayLength                    = 544
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 642, 358, 
Debug: bestThreshold[maxSpeedIndex]   = 642

ir_sort is faster than std::sort 64.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005855395437

#####################################################################
Debug: arrayLength                    = 545
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 603, 397, 
Debug: bestThreshold[maxSpeedIndex]   = 603

ir_sort is faster than std::sort 60.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001474778384

#####################################################################
Debug: arrayLength                    = 546
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 650, 350, 
Debug: bestThreshold[maxSpeedIndex]   = 650

ir_sort is faster than std::sort 65 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005277485667

#####################################################################
Debug: arrayLength                    = 547
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 593, 407, 
Debug: bestThreshold[maxSpeedIndex]   = 593

ir_sort is faster than std::sort 59.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010067217286

#####################################################################
Debug: arrayLength                    = 548
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 631, 369, 
Debug: bestThreshold[maxSpeedIndex]   = 631

ir_sort is faster than std::sort 63.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005896807534

#####################################################################
Debug: arrayLength                    = 549
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 637, 363, 
Debug: bestThreshold[maxSpeedIndex]   = 637

ir_sort is faster than std::sort 63.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006075644999

#####################################################################
Debug: arrayLength                    = 550
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 651, 349, 
Debug: bestThreshold[maxSpeedIndex]   = 651

ir_sort is faster than std::sort 65.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00847922505

#####################################################################
Debug: arrayLength                    = 551
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 640, 360, 
Debug: bestThreshold[maxSpeedIndex]   = 640

ir_sort is faster than std::sort 64 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009121731328

#####################################################################
Debug: arrayLength                    = 552
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 630, 370, 
Debug: bestThreshold[maxSpeedIndex]   = 630

ir_sort is faster than std::sort 63 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006483431729

#####################################################################
Debug: arrayLength                    = 553
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 673, 327, 
Debug: bestThreshold[maxSpeedIndex]   = 673

ir_sort is faster than std::sort 67.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004801422133

#####################################################################
Debug: arrayLength                    = 554
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 637, 363, 
Debug: bestThreshold[maxSpeedIndex]   = 637

ir_sort is faster than std::sort 63.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009612487752

#####################################################################
Debug: arrayLength                    = 555
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 638, 362, 
Debug: bestThreshold[maxSpeedIndex]   = 638

ir_sort is faster than std::sort 63.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002263324319

#####################################################################
Debug: arrayLength                    = 556
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 785, 215, 
Debug: bestThreshold[maxSpeedIndex]   = 785

ir_sort is faster than std::sort 78.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003685222878

#####################################################################
Debug: arrayLength                    = 557
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 717, 283, 
Debug: bestThreshold[maxSpeedIndex]   = 717

ir_sort is faster than std::sort 71.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008519466283

#####################################################################
Debug: arrayLength                    = 558
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 696, 304, 
Debug: bestThreshold[maxSpeedIndex]   = 696

ir_sort is faster than std::sort 69.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006498150245

#####################################################################
Debug: arrayLength                    = 559
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 681, 319, 
Debug: bestThreshold[maxSpeedIndex]   = 681

ir_sort is faster than std::sort 68.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001895304893

#####################################################################
Debug: arrayLength                    = 560
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 730, 270, 
Debug: bestThreshold[maxSpeedIndex]   = 730

ir_sort is faster than std::sort 73 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002357986912

#####################################################################
Debug: arrayLength                    = 561
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 731, 269, 
Debug: bestThreshold[maxSpeedIndex]   = 731

ir_sort is faster than std::sort 73.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005302719508

#####################################################################
Debug: arrayLength                    = 562
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 743, 257, 
Debug: bestThreshold[maxSpeedIndex]   = 743

ir_sort is faster than std::sort 74.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004036583549

#####################################################################
Debug: arrayLength                    = 563
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 672, 328, 
Debug: bestThreshold[maxSpeedIndex]   = 672

ir_sort is faster than std::sort 67.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014091906551

#####################################################################
Debug: arrayLength                    = 564
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 682, 318, 
Debug: bestThreshold[maxSpeedIndex]   = 682

ir_sort is faster than std::sort 68.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002704754495

#####################################################################
Debug: arrayLength                    = 565
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 714, 286, 
Debug: bestThreshold[maxSpeedIndex]   = 714

ir_sort is faster than std::sort 71.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004014546542

#####################################################################
Debug: arrayLength                    = 566
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 657, 343, 
Debug: bestThreshold[maxSpeedIndex]   = 657

ir_sort is faster than std::sort 65.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002825959952

#####################################################################
Debug: arrayLength                    = 567
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 632, 368, 
Debug: bestThreshold[maxSpeedIndex]   = 632

ir_sort is faster than std::sort 63.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004604542466

#####################################################################
Debug: arrayLength                    = 568
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 672, 328, 
Debug: bestThreshold[maxSpeedIndex]   = 672

ir_sort is faster than std::sort 67.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004444324134

#####################################################################
Debug: arrayLength                    = 569
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 706, 294, 
Debug: bestThreshold[maxSpeedIndex]   = 706

ir_sort is faster than std::sort 70.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003817706659

#####################################################################
Debug: arrayLength                    = 570
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 665, 335, 
Debug: bestThreshold[maxSpeedIndex]   = 665

ir_sort is faster than std::sort 66.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004289738753

#####################################################################
Debug: arrayLength                    = 571
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 708, 292, 
Debug: bestThreshold[maxSpeedIndex]   = 708

ir_sort is faster than std::sort 70.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004278748144

#####################################################################
Debug: arrayLength                    = 572
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 639, 361, 
Debug: bestThreshold[maxSpeedIndex]   = 639

ir_sort is faster than std::sort 63.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005703327786

#####################################################################
Debug: arrayLength                    = 573
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 631, 369, 
Debug: bestThreshold[maxSpeedIndex]   = 631

ir_sort is faster than std::sort 63.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003180731928

#####################################################################
Debug: arrayLength                    = 574
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 670, 330, 
Debug: bestThreshold[maxSpeedIndex]   = 670

ir_sort is faster than std::sort 67 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006420401876

#####################################################################
Debug: arrayLength                    = 575
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 692, 308, 
Debug: bestThreshold[maxSpeedIndex]   = 692

ir_sort is faster than std::sort 69.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004934625443

#####################################################################
Debug: arrayLength                    = 576
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 648, 352, 
Debug: bestThreshold[maxSpeedIndex]   = 648

ir_sort is faster than std::sort 64.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006187164382

#####################################################################
Debug: arrayLength                    = 577
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 670, 330, 
Debug: bestThreshold[maxSpeedIndex]   = 670

ir_sort is faster than std::sort 67 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003065851639

#####################################################################
Debug: arrayLength                    = 578
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 676, 324, 
Debug: bestThreshold[maxSpeedIndex]   = 676

ir_sort is faster than std::sort 67.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003024049576

#####################################################################
Debug: arrayLength                    = 579
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 639, 361, 
Debug: bestThreshold[maxSpeedIndex]   = 639

ir_sort is faster than std::sort 63.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006234335489

#####################################################################
Debug: arrayLength                    = 580
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 695, 305, 
Debug: bestThreshold[maxSpeedIndex]   = 695

ir_sort is faster than std::sort 69.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001861169484

#####################################################################
Debug: arrayLength                    = 581
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 706, 294, 
Debug: bestThreshold[maxSpeedIndex]   = 706

ir_sort is faster than std::sort 70.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006626706232

#####################################################################
Debug: arrayLength                    = 582
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 685, 315, 
Debug: bestThreshold[maxSpeedIndex]   = 685

ir_sort is faster than std::sort 68.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00517709724

#####################################################################
Debug: arrayLength                    = 583
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 741, 259, 
Debug: bestThreshold[maxSpeedIndex]   = 741

ir_sort is faster than std::sort 74.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005634078642

#####################################################################
Debug: arrayLength                    = 584
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 758, 242, 
Debug: bestThreshold[maxSpeedIndex]   = 758

ir_sort is faster than std::sort 75.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007371861699

#####################################################################
Debug: arrayLength                    = 585
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 719, 281, 
Debug: bestThreshold[maxSpeedIndex]   = 719

ir_sort is faster than std::sort 71.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002792446084

#####################################################################
Debug: arrayLength                    = 586
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 688, 312, 
Debug: bestThreshold[maxSpeedIndex]   = 688

ir_sort is faster than std::sort 68.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008384781511

#####################################################################
Debug: arrayLength                    = 587
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 713, 287, 
Debug: bestThreshold[maxSpeedIndex]   = 713

ir_sort is faster than std::sort 71.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002587472459

#####################################################################
Debug: arrayLength                    = 588
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 661, 339, 
Debug: bestThreshold[maxSpeedIndex]   = 661

ir_sort is faster than std::sort 66.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003338585184

#####################################################################
Debug: arrayLength                    = 589
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 622, 378, 
Debug: bestThreshold[maxSpeedIndex]   = 622

ir_sort is faster than std::sort 62.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002224614244

#####################################################################
Debug: arrayLength                    = 590
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 651, 349, 
Debug: bestThreshold[maxSpeedIndex]   = 651

ir_sort is faster than std::sort 65.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006239373938

#####################################################################
Debug: arrayLength                    = 591
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 618, 382, 
Debug: bestThreshold[maxSpeedIndex]   = 618

ir_sort is faster than std::sort 61.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001171977679

#####################################################################
Debug: arrayLength                    = 592
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 695, 305, 
Debug: bestThreshold[maxSpeedIndex]   = 695

ir_sort is faster than std::sort 69.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004611042409

#####################################################################
Debug: arrayLength                    = 593
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 644, 356, 
Debug: bestThreshold[maxSpeedIndex]   = 644

ir_sort is faster than std::sort 64.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006424974318

#####################################################################
Debug: arrayLength                    = 594
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 659, 341, 
Debug: bestThreshold[maxSpeedIndex]   = 659

ir_sort is faster than std::sort 65.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00584465001

#####################################################################
Debug: arrayLength                    = 595
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 666, 334, 
Debug: bestThreshold[maxSpeedIndex]   = 666

ir_sort is faster than std::sort 66.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00668436444

#####################################################################
Debug: arrayLength                    = 596
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 644, 356, 
Debug: bestThreshold[maxSpeedIndex]   = 644

ir_sort is faster than std::sort 64.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006447778213

#####################################################################
Debug: arrayLength                    = 597
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 689, 311, 
Debug: bestThreshold[maxSpeedIndex]   = 689

ir_sort is faster than std::sort 68.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007277826872

#####################################################################
Debug: arrayLength                    = 598
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 690, 310, 
Debug: bestThreshold[maxSpeedIndex]   = 690

ir_sort is faster than std::sort 69 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005988997546

#####################################################################
Debug: arrayLength                    = 599
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 696, 304, 
Debug: bestThreshold[maxSpeedIndex]   = 696

ir_sort is faster than std::sort 69.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003452560236

#####################################################################
Debug: arrayLength                    = 600
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 672, 328, 
Debug: bestThreshold[maxSpeedIndex]   = 672

ir_sort is faster than std::sort 67.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005516830237

#####################################################################
Debug: arrayLength                    = 601
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 673, 327, 
Debug: bestThreshold[maxSpeedIndex]   = 673

ir_sort is faster than std::sort 67.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005638813602

#####################################################################
Debug: arrayLength                    = 602
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 462, 538, 
Debug: bestThreshold[maxSpeedIndex]   = 538

std::sort is faster than ir_sort 53.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00231668659

#####################################################################
Debug: arrayLength                    = 603
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 514, 486, 
Debug: bestThreshold[maxSpeedIndex]   = 514

ir_sort is faster than std::sort 51.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001191467599

#####################################################################
Debug: arrayLength                    = 604
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 516, 484, 
Debug: bestThreshold[maxSpeedIndex]   = 516

ir_sort is faster than std::sort 51.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001421258323

#####################################################################
Debug: arrayLength                    = 605
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 537, 463, 
Debug: bestThreshold[maxSpeedIndex]   = 537

ir_sort is faster than std::sort 53.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002565600834

#####################################################################
Debug: arrayLength                    = 606
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 525, 475, 
Debug: bestThreshold[maxSpeedIndex]   = 525

ir_sort is faster than std::sort 52.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004573040639

#####################################################################
Debug: arrayLength                    = 607
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 517, 483, 
Debug: bestThreshold[maxSpeedIndex]   = 517

ir_sort is faster than std::sort 51.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.99960074113

#####################################################################
Debug: arrayLength                    = 608
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 490, 510, 
Debug: bestThreshold[maxSpeedIndex]   = 510

std::sort is faster than ir_sort 51 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9989502857083

#####################################################################
Debug: arrayLength                    = 609
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 524, 476, 
Debug: bestThreshold[maxSpeedIndex]   = 524

ir_sort is faster than std::sort 52.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015943676423

#####################################################################
Debug: arrayLength                    = 610
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 514, 486, 
Debug: bestThreshold[maxSpeedIndex]   = 514

ir_sort is faster than std::sort 51.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003991156214

#####################################################################
Debug: arrayLength                    = 611
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 545, 455, 
Debug: bestThreshold[maxSpeedIndex]   = 545

ir_sort is faster than std::sort 54.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004617879194

#####################################################################
Debug: arrayLength                    = 612
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 492, 508, 
Debug: bestThreshold[maxSpeedIndex]   = 508

std::sort is faster than ir_sort 50.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012986107645

#####################################################################
Debug: arrayLength                    = 613
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 518, 482, 
Debug: bestThreshold[maxSpeedIndex]   = 518

ir_sort is faster than std::sort 51.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00149107368

#####################################################################
Debug: arrayLength                    = 614
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 467, 533, 
Debug: bestThreshold[maxSpeedIndex]   = 533

std::sort is faster than ir_sort 53.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004291547327

#####################################################################
Debug: arrayLength                    = 615
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 469, 531, 
Debug: bestThreshold[maxSpeedIndex]   = 531

std::sort is faster than ir_sort 53.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006378011719

#####################################################################
Debug: arrayLength                    = 616
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 499, 501, 
Debug: bestThreshold[maxSpeedIndex]   = 501

std::sort is faster than ir_sort 50.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005134293262

#####################################################################
Debug: arrayLength                    = 617
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 513, 487, 
Debug: bestThreshold[maxSpeedIndex]   = 513

ir_sort is faster than std::sort 51.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003732963728

#####################################################################
Debug: arrayLength                    = 618
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 526, 474, 
Debug: bestThreshold[maxSpeedIndex]   = 526

ir_sort is faster than std::sort 52.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00704425635

#####################################################################
Debug: arrayLength                    = 619
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 504, 496, 
Debug: bestThreshold[maxSpeedIndex]   = 504

ir_sort is faster than std::sort 50.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.002639879824

#####################################################################
Debug: arrayLength                    = 620
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 509, 491, 
Debug: bestThreshold[maxSpeedIndex]   = 509

ir_sort is faster than std::sort 50.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001285771023

#####################################################################
Debug: arrayLength                    = 621
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 473, 527, 
Debug: bestThreshold[maxSpeedIndex]   = 527

std::sort is faster than ir_sort 52.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003511207635

#####################################################################
Debug: arrayLength                    = 622
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 473, 527, 
Debug: bestThreshold[maxSpeedIndex]   = 527

std::sort is faster than ir_sort 52.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005611087034

#####################################################################
Debug: arrayLength                    = 623
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 449, 551, 
Debug: bestThreshold[maxSpeedIndex]   = 551

std::sort is faster than ir_sort 55.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00421243215

#####################################################################
Debug: arrayLength                    = 624
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 474, 526, 
Debug: bestThreshold[maxSpeedIndex]   = 526

std::sort is faster than ir_sort 52.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003557573628

#####################################################################
Debug: arrayLength                    = 625
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 539, 461, 
Debug: bestThreshold[maxSpeedIndex]   = 539

ir_sort is faster than std::sort 53.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006398889449

#####################################################################
Debug: arrayLength                    = 626
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 502, 498, 
Debug: bestThreshold[maxSpeedIndex]   = 502

ir_sort is faster than std::sort 50.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003291419543

#####################################################################
Debug: arrayLength                    = 627
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 546, 454, 
Debug: bestThreshold[maxSpeedIndex]   = 546

ir_sort is faster than std::sort 54.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007283960957

#####################################################################
Debug: arrayLength                    = 628
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 499, 501, 
Debug: bestThreshold[maxSpeedIndex]   = 501

std::sort is faster than ir_sort 50.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01118110409

#####################################################################
Debug: arrayLength                    = 629
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 531, 469, 
Debug: bestThreshold[maxSpeedIndex]   = 531

ir_sort is faster than std::sort 53.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014418694656

#####################################################################
Debug: arrayLength                    = 630
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 510, 490, 
Debug: bestThreshold[maxSpeedIndex]   = 510

ir_sort is faster than std::sort 51 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014795670985

#####################################################################
Debug: arrayLength                    = 631
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 533, 467, 
Debug: bestThreshold[maxSpeedIndex]   = 533

ir_sort is faster than std::sort 53.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00225986386

#####################################################################
Debug: arrayLength                    = 632
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 487, 513, 
Debug: bestThreshold[maxSpeedIndex]   = 513

std::sort is faster than ir_sort 51.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006995974475

#####################################################################
Debug: arrayLength                    = 633
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 496, 504, 
Debug: bestThreshold[maxSpeedIndex]   = 504

std::sort is faster than ir_sort 50.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005462865552

#####################################################################
Debug: arrayLength                    = 634
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 475, 525, 
Debug: bestThreshold[maxSpeedIndex]   = 525

std::sort is faster than ir_sort 52.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005132160718

#####################################################################
Debug: arrayLength                    = 635
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 495, 505, 
Debug: bestThreshold[maxSpeedIndex]   = 505

std::sort is faster than ir_sort 50.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.0049838595

#####################################################################
Debug: arrayLength                    = 636
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 478, 522, 
Debug: bestThreshold[maxSpeedIndex]   = 522

std::sort is faster than ir_sort 52.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008621859828

#####################################################################
Debug: arrayLength                    = 637
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 500, 500, 
Debug: bestThreshold[maxSpeedIndex]   = 500

ir_sort is faster than std::sort 50 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008216103826

#####################################################################
Debug: arrayLength                    = 638
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 467, 533, 
Debug: bestThreshold[maxSpeedIndex]   = 533

std::sort is faster than ir_sort 53.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001197119185

#####################################################################
Debug: arrayLength                    = 639
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 454, 546, 
Debug: bestThreshold[maxSpeedIndex]   = 546

std::sort is faster than ir_sort 54.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005265101713

#####################################################################
Debug: arrayLength                    = 640
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 516, 484, 
Debug: bestThreshold[maxSpeedIndex]   = 516

ir_sort is faster than std::sort 51.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007638643687

#####################################################################
Debug: arrayLength                    = 641
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 488, 512, 
Debug: bestThreshold[maxSpeedIndex]   = 512

std::sort is faster than ir_sort 51.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005569997202

#####################################################################
Debug: arrayLength                    = 642
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 528, 472, 
Debug: bestThreshold[maxSpeedIndex]   = 528

ir_sort is faster than std::sort 52.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008173181161

#####################################################################
Debug: arrayLength                    = 643
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 653, 347, 
Debug: bestThreshold[maxSpeedIndex]   = 653

ir_sort is faster than std::sort 65.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006845804443

#####################################################################
Debug: arrayLength                    = 644
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 608, 392, 
Debug: bestThreshold[maxSpeedIndex]   = 608

ir_sort is faster than std::sort 60.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004901774709

#####################################################################
Debug: arrayLength                    = 645
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 653, 347, 
Debug: bestThreshold[maxSpeedIndex]   = 653

ir_sort is faster than std::sort 65.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015203373548

#####################################################################
Debug: arrayLength                    = 646
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 653, 347, 
Debug: bestThreshold[maxSpeedIndex]   = 653

ir_sort is faster than std::sort 65.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.021329140729

#####################################################################
Debug: arrayLength                    = 647
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 651, 349, 
Debug: bestThreshold[maxSpeedIndex]   = 651

ir_sort is faster than std::sort 65.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016151772584

#####################################################################
Debug: arrayLength                    = 648
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 600, 400, 
Debug: bestThreshold[maxSpeedIndex]   = 600

ir_sort is faster than std::sort 60 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.028128870233

#####################################################################
Debug: arrayLength                    = 649
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 578, 422, 
Debug: bestThreshold[maxSpeedIndex]   = 578

ir_sort is faster than std::sort 57.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01675725523

#####################################################################
Debug: arrayLength                    = 650
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 590, 410, 
Debug: bestThreshold[maxSpeedIndex]   = 590

ir_sort is faster than std::sort 59 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.028431102807

#####################################################################
Debug: arrayLength                    = 651
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 654, 346, 
Debug: bestThreshold[maxSpeedIndex]   = 654

ir_sort is faster than std::sort 65.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.060918585335

#####################################################################
Debug: arrayLength                    = 652
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 708, 292, 
Debug: bestThreshold[maxSpeedIndex]   = 708

ir_sort is faster than std::sort 70.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.060192332331

#####################################################################
Debug: arrayLength                    = 653
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 640, 360, 
Debug: bestThreshold[maxSpeedIndex]   = 640

ir_sort is faster than std::sort 64 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.029626814506

#####################################################################
Debug: arrayLength                    = 654
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 626, 374, 
Debug: bestThreshold[maxSpeedIndex]   = 626

ir_sort is faster than std::sort 62.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014151667896

#####################################################################
Debug: arrayLength                    = 655
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 608, 392, 
Debug: bestThreshold[maxSpeedIndex]   = 608

ir_sort is faster than std::sort 60.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.020665834105

#####################################################################
Debug: arrayLength                    = 656
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 639, 361, 
Debug: bestThreshold[maxSpeedIndex]   = 639

ir_sort is faster than std::sort 63.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.035378776834

#####################################################################
Debug: arrayLength                    = 657
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 567, 433, 
Debug: bestThreshold[maxSpeedIndex]   = 567

ir_sort is faster than std::sort 56.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017932847078

#####################################################################
Debug: arrayLength                    = 658
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 604, 396, 
Debug: bestThreshold[maxSpeedIndex]   = 604

ir_sort is faster than std::sort 60.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01700956071

#####################################################################
Debug: arrayLength                    = 659
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 613, 387, 
Debug: bestThreshold[maxSpeedIndex]   = 613

ir_sort is faster than std::sort 61.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.036481544389

#####################################################################
Debug: arrayLength                    = 660
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 613, 387, 
Debug: bestThreshold[maxSpeedIndex]   = 613

ir_sort is faster than std::sort 61.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.032063614432

#####################################################################
Debug: arrayLength                    = 661
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 604, 396, 
Debug: bestThreshold[maxSpeedIndex]   = 604

ir_sort is faster than std::sort 60.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.040596627099

#####################################################################
Debug: arrayLength                    = 662
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 616, 384, 
Debug: bestThreshold[maxSpeedIndex]   = 616

ir_sort is faster than std::sort 61.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.042450569877

#####################################################################
Debug: arrayLength                    = 663
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 605, 395, 
Debug: bestThreshold[maxSpeedIndex]   = 605

ir_sort is faster than std::sort 60.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.032486619951

#####################################################################
Debug: arrayLength                    = 664
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 578, 422, 
Debug: bestThreshold[maxSpeedIndex]   = 578

ir_sort is faster than std::sort 57.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.031797244463

#####################################################################
Debug: arrayLength                    = 665
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 592, 408, 
Debug: bestThreshold[maxSpeedIndex]   = 592

ir_sort is faster than std::sort 59.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.033531082311

#####################################################################
Debug: arrayLength                    = 666
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 651, 349, 
Debug: bestThreshold[maxSpeedIndex]   = 651

ir_sort is faster than std::sort 65.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.048414218509

#####################################################################
Debug: arrayLength                    = 667
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 682, 318, 
Debug: bestThreshold[maxSpeedIndex]   = 682

ir_sort is faster than std::sort 68.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.056746341415

#####################################################################
Debug: arrayLength                    = 668
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 587, 413, 
Debug: bestThreshold[maxSpeedIndex]   = 587

ir_sort is faster than std::sort 58.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.032600130679

#####################################################################
Debug: arrayLength                    = 669
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 609, 391, 
Debug: bestThreshold[maxSpeedIndex]   = 609

ir_sort is faster than std::sort 60.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.030369854265

#####################################################################
Debug: arrayLength                    = 670
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 628, 372, 
Debug: bestThreshold[maxSpeedIndex]   = 628

ir_sort is faster than std::sort 62.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.042995378013

#####################################################################
Debug: arrayLength                    = 671
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 617, 383, 
Debug: bestThreshold[maxSpeedIndex]   = 617

ir_sort is faster than std::sort 61.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.055768783984

#####################################################################
Debug: arrayLength                    = 672
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 610, 390, 
Debug: bestThreshold[maxSpeedIndex]   = 610

ir_sort is faster than std::sort 61 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.029668767041

#####################################################################
Debug: arrayLength                    = 673
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 588, 412, 
Debug: bestThreshold[maxSpeedIndex]   = 588

ir_sort is faster than std::sort 58.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.037410027545

#####################################################################
Debug: arrayLength                    = 674
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 625, 375, 
Debug: bestThreshold[maxSpeedIndex]   = 625

ir_sort is faster than std::sort 62.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.036015363507

#####################################################################
Debug: arrayLength                    = 675
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 601, 399, 
Debug: bestThreshold[maxSpeedIndex]   = 601

ir_sort is faster than std::sort 60.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.020777244701

#####################################################################
Debug: arrayLength                    = 676
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 592, 408, 
Debug: bestThreshold[maxSpeedIndex]   = 592

ir_sort is faster than std::sort 59.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.039721905048

#####################################################################
Debug: arrayLength                    = 677
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 616, 384, 
Debug: bestThreshold[maxSpeedIndex]   = 616

ir_sort is faster than std::sort 61.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.048424514376

#####################################################################
Debug: arrayLength                    = 678
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 618, 382, 
Debug: bestThreshold[maxSpeedIndex]   = 618

ir_sort is faster than std::sort 61.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.040825966207

#####################################################################
Debug: arrayLength                    = 679
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 615, 385, 
Debug: bestThreshold[maxSpeedIndex]   = 615

ir_sort is faster than std::sort 61.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.028495920113

#####################################################################
Debug: arrayLength                    = 680
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 707, 293, 
Debug: bestThreshold[maxSpeedIndex]   = 707

ir_sort is faster than std::sort 70.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.045588174214

#####################################################################
Debug: arrayLength                    = 681
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 676, 324, 
Debug: bestThreshold[maxSpeedIndex]   = 676

ir_sort is faster than std::sort 67.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.055716713769

#####################################################################
Debug: arrayLength                    = 682
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 612, 388, 
Debug: bestThreshold[maxSpeedIndex]   = 612

ir_sort is faster than std::sort 61.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.025084013414

#####################################################################
Debug: arrayLength                    = 683
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 611, 389, 
Debug: bestThreshold[maxSpeedIndex]   = 611

ir_sort is faster than std::sort 61.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.032833391511

#####################################################################
Debug: arrayLength                    = 684
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 676, 324, 
Debug: bestThreshold[maxSpeedIndex]   = 676

ir_sort is faster than std::sort 67.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.030172076597

#####################################################################
Debug: arrayLength                    = 685
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 693, 307, 
Debug: bestThreshold[maxSpeedIndex]   = 693

ir_sort is faster than std::sort 69.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.043766201133

#####################################################################
Debug: arrayLength                    = 686
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 661, 339, 
Debug: bestThreshold[maxSpeedIndex]   = 661

ir_sort is faster than std::sort 66.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.034719636658

#####################################################################
Debug: arrayLength                    = 687
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 657, 343, 
Debug: bestThreshold[maxSpeedIndex]   = 657

ir_sort is faster than std::sort 65.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.035272438255

#####################################################################
Debug: arrayLength                    = 688
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 688, 312, 
Debug: bestThreshold[maxSpeedIndex]   = 688

ir_sort is faster than std::sort 68.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.032642287933

#####################################################################
Debug: arrayLength                    = 689
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 658, 342, 
Debug: bestThreshold[maxSpeedIndex]   = 658

ir_sort is faster than std::sort 65.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.031378850896

#####################################################################
Debug: arrayLength                    = 690
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 653, 347, 
Debug: bestThreshold[maxSpeedIndex]   = 653

ir_sort is faster than std::sort 65.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.028453275977

#####################################################################
Debug: arrayLength                    = 691
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 727, 273, 
Debug: bestThreshold[maxSpeedIndex]   = 727

ir_sort is faster than std::sort 72.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.074988953875

#####################################################################
Debug: arrayLength                    = 692
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 720, 280, 
Debug: bestThreshold[maxSpeedIndex]   = 720

ir_sort is faster than std::sort 72 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.05995565995

#####################################################################
Debug: arrayLength                    = 693
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 673, 327, 
Debug: bestThreshold[maxSpeedIndex]   = 673

ir_sort is faster than std::sort 67.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.034145474502

#####################################################################
Debug: arrayLength                    = 694
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 644, 356, 
Debug: bestThreshold[maxSpeedIndex]   = 644

ir_sort is faster than std::sort 64.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.032285085176

#####################################################################
Debug: arrayLength                    = 695
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 672, 328, 
Debug: bestThreshold[maxSpeedIndex]   = 672

ir_sort is faster than std::sort 67.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.02350381703

#####################################################################
Debug: arrayLength                    = 696
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 666, 334, 
Debug: bestThreshold[maxSpeedIndex]   = 666

ir_sort is faster than std::sort 66.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015547649912

#####################################################################
Debug: arrayLength                    = 697
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 683, 317, 
Debug: bestThreshold[maxSpeedIndex]   = 683

ir_sort is faster than std::sort 68.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009824875527

#####################################################################
Debug: arrayLength                    = 698
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 692, 308, 
Debug: bestThreshold[maxSpeedIndex]   = 692

ir_sort is faster than std::sort 69.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012299226681

#####################################################################
Debug: arrayLength                    = 699
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 693, 307, 
Debug: bestThreshold[maxSpeedIndex]   = 693

ir_sort is faster than std::sort 69.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008677787886

#####################################################################
Debug: arrayLength                    = 700
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 651, 349, 
Debug: bestThreshold[maxSpeedIndex]   = 651

ir_sort is faster than std::sort 65.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010130486651

#####################################################################
Debug: arrayLength                    = 701
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 673, 327, 
Debug: bestThreshold[maxSpeedIndex]   = 673

ir_sort is faster than std::sort 67.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00952212596

#####################################################################
Debug: arrayLength                    = 702
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 645, 355, 
Debug: bestThreshold[maxSpeedIndex]   = 645

ir_sort is faster than std::sort 64.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007193562161

#####################################################################
Debug: arrayLength                    = 703
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 648, 352, 
Debug: bestThreshold[maxSpeedIndex]   = 648

ir_sort is faster than std::sort 64.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009101001118

#####################################################################
Debug: arrayLength                    = 704
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 695, 305, 
Debug: bestThreshold[maxSpeedIndex]   = 695

ir_sort is faster than std::sort 69.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009520940587

#####################################################################
Debug: arrayLength                    = 705
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 718, 282, 
Debug: bestThreshold[maxSpeedIndex]   = 718

ir_sort is faster than std::sort 71.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009941162076

#####################################################################
Debug: arrayLength                    = 706
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 717, 283, 
Debug: bestThreshold[maxSpeedIndex]   = 717

ir_sort is faster than std::sort 71.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012816091151

#####################################################################
Debug: arrayLength                    = 707
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 707, 293, 
Debug: bestThreshold[maxSpeedIndex]   = 707

ir_sort is faster than std::sort 70.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009801009475

#####################################################################
Debug: arrayLength                    = 708
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 714, 286, 
Debug: bestThreshold[maxSpeedIndex]   = 714

ir_sort is faster than std::sort 71.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014268470503

#####################################################################
Debug: arrayLength                    = 709
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 680, 320, 
Debug: bestThreshold[maxSpeedIndex]   = 680

ir_sort is faster than std::sort 68 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.026801382321

#####################################################################
Debug: arrayLength                    = 710
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 645, 355, 
Debug: bestThreshold[maxSpeedIndex]   = 645

ir_sort is faster than std::sort 64.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.0316643703

#####################################################################
Debug: arrayLength                    = 711
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 688, 312, 
Debug: bestThreshold[maxSpeedIndex]   = 688

ir_sort is faster than std::sort 68.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.026883707542

#####################################################################
Debug: arrayLength                    = 712
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 689, 311, 
Debug: bestThreshold[maxSpeedIndex]   = 689

ir_sort is faster than std::sort 68.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.034523239026

#####################################################################
Debug: arrayLength                    = 713
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 670, 330, 
Debug: bestThreshold[maxSpeedIndex]   = 670

ir_sort is faster than std::sort 67 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.026569712756

#####################################################################
Debug: arrayLength                    = 714
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 680, 320, 
Debug: bestThreshold[maxSpeedIndex]   = 680

ir_sort is faster than std::sort 68 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015148241503

#####################################################################
Debug: arrayLength                    = 715
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 679, 321, 
Debug: bestThreshold[maxSpeedIndex]   = 679

ir_sort is faster than std::sort 67.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.029275370904

#####################################################################
Debug: arrayLength                    = 716
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 642, 358, 
Debug: bestThreshold[maxSpeedIndex]   = 642

ir_sort is faster than std::sort 64.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.034942602785

#####################################################################
Debug: arrayLength                    = 717
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 625, 375, 
Debug: bestThreshold[maxSpeedIndex]   = 625

ir_sort is faster than std::sort 62.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.022101495611

#####################################################################
Debug: arrayLength                    = 718
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 611, 389, 
Debug: bestThreshold[maxSpeedIndex]   = 611

ir_sort is faster than std::sort 61.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.028363800889

#####################################################################
Debug: arrayLength                    = 719
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 615, 385, 
Debug: bestThreshold[maxSpeedIndex]   = 615

ir_sort is faster than std::sort 61.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.028841989331

#####################################################################
Debug: arrayLength                    = 720
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 658, 342, 
Debug: bestThreshold[maxSpeedIndex]   = 658

ir_sort is faster than std::sort 65.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.040893866354

#####################################################################
Debug: arrayLength                    = 721
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 621, 379, 
Debug: bestThreshold[maxSpeedIndex]   = 621

ir_sort is faster than std::sort 62.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.02353693534

#####################################################################
Debug: arrayLength                    = 722
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 625, 375, 
Debug: bestThreshold[maxSpeedIndex]   = 625

ir_sort is faster than std::sort 62.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.030930454922

#####################################################################
Debug: arrayLength                    = 723
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 610, 390, 
Debug: bestThreshold[maxSpeedIndex]   = 610

ir_sort is faster than std::sort 61 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.02895404726

#####################################################################
Debug: arrayLength                    = 724
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 617, 383, 
Debug: bestThreshold[maxSpeedIndex]   = 617

ir_sort is faster than std::sort 61.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.035453853586

#####################################################################
Debug: arrayLength                    = 725
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 619, 381, 
Debug: bestThreshold[maxSpeedIndex]   = 619

ir_sort is faster than std::sort 61.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.019874879986

#####################################################################
Debug: arrayLength                    = 726
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 659, 341, 
Debug: bestThreshold[maxSpeedIndex]   = 659

ir_sort is faster than std::sort 65.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.033220762967

#####################################################################
Debug: arrayLength                    = 727
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 635, 365, 
Debug: bestThreshold[maxSpeedIndex]   = 635

ir_sort is faster than std::sort 63.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.033957501811

#####################################################################
Debug: arrayLength                    = 728
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 660, 340, 
Debug: bestThreshold[maxSpeedIndex]   = 660

ir_sort is faster than std::sort 66 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.030624959241

#####################################################################
Debug: arrayLength                    = 729
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 611, 389, 
Debug: bestThreshold[maxSpeedIndex]   = 611

ir_sort is faster than std::sort 61.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.022640590414

#####################################################################
Debug: arrayLength                    = 730
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 479, 521, 
Debug: bestThreshold[maxSpeedIndex]   = 521

std::sort is faster than ir_sort 52.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.041906315909

#####################################################################
Debug: arrayLength                    = 731
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 520, 480, 
Debug: bestThreshold[maxSpeedIndex]   = 520

ir_sort is faster than std::sort 52 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.035071620993

#####################################################################
Debug: arrayLength                    = 732
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 554, 446, 
Debug: bestThreshold[maxSpeedIndex]   = 554

ir_sort is faster than std::sort 55.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.0387126826

#####################################################################
Debug: arrayLength                    = 733
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 512, 488, 
Debug: bestThreshold[maxSpeedIndex]   = 512

ir_sort is faster than std::sort 51.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.037562818778

#####################################################################
Debug: arrayLength                    = 734
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 536, 464, 
Debug: bestThreshold[maxSpeedIndex]   = 536

ir_sort is faster than std::sort 53.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.036822887023

#####################################################################
Debug: arrayLength                    = 735
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 552, 448, 
Debug: bestThreshold[maxSpeedIndex]   = 552

ir_sort is faster than std::sort 55.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.044473498466

#####################################################################
Debug: arrayLength                    = 736
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 567, 433, 
Debug: bestThreshold[maxSpeedIndex]   = 567

ir_sort is faster than std::sort 56.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.050869501542

#####################################################################
Debug: arrayLength                    = 737
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 521, 479, 
Debug: bestThreshold[maxSpeedIndex]   = 521

ir_sort is faster than std::sort 52.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.03241402122

#####################################################################
Debug: arrayLength                    = 738
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 519, 481, 
Debug: bestThreshold[maxSpeedIndex]   = 519

ir_sort is faster than std::sort 51.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.033267109388

#####################################################################
Debug: arrayLength                    = 739
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 484, 516, 
Debug: bestThreshold[maxSpeedIndex]   = 516

std::sort is faster than ir_sort 51.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.023455093097

#####################################################################
Debug: arrayLength                    = 740
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 565, 435, 
Debug: bestThreshold[maxSpeedIndex]   = 565

ir_sort is faster than std::sort 56.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.044236528931

#####################################################################
Debug: arrayLength                    = 741
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 549, 451, 
Debug: bestThreshold[maxSpeedIndex]   = 549

ir_sort is faster than std::sort 54.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.047624228681

#####################################################################
Debug: arrayLength                    = 742
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 559, 441, 
Debug: bestThreshold[maxSpeedIndex]   = 559

ir_sort is faster than std::sort 55.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.040029501532

#####################################################################
Debug: arrayLength                    = 743
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 553, 447, 
Debug: bestThreshold[maxSpeedIndex]   = 553

ir_sort is faster than std::sort 55.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.042115795994

#####################################################################
Debug: arrayLength                    = 744
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 542, 458, 
Debug: bestThreshold[maxSpeedIndex]   = 542

ir_sort is faster than std::sort 54.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.031182852752

#####################################################################
Debug: arrayLength                    = 745
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 558, 442, 
Debug: bestThreshold[maxSpeedIndex]   = 558

ir_sort is faster than std::sort 55.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.02830090429

#####################################################################
Debug: arrayLength                    = 746
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 566, 434, 
Debug: bestThreshold[maxSpeedIndex]   = 566

ir_sort is faster than std::sort 56.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.031178368068

#####################################################################
Debug: arrayLength                    = 747
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 525, 475, 
Debug: bestThreshold[maxSpeedIndex]   = 525

ir_sort is faster than std::sort 52.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.03362162239

#####################################################################
Debug: arrayLength                    = 748
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 557, 443, 
Debug: bestThreshold[maxSpeedIndex]   = 557

ir_sort is faster than std::sort 55.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.039335520598

#####################################################################
Debug: arrayLength                    = 749
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 557, 443, 
Debug: bestThreshold[maxSpeedIndex]   = 557

ir_sort is faster than std::sort 55.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.033562228202

#####################################################################
Debug: arrayLength                    = 750
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 540, 460, 
Debug: bestThreshold[maxSpeedIndex]   = 540

ir_sort is faster than std::sort 54 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.032786304195

#####################################################################
Debug: arrayLength                    = 751
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 547, 453, 
Debug: bestThreshold[maxSpeedIndex]   = 547

ir_sort is faster than std::sort 54.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.025892235723

#####################################################################
Debug: arrayLength                    = 752
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 586, 414, 
Debug: bestThreshold[maxSpeedIndex]   = 586

ir_sort is faster than std::sort 58.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.030315971527

#####################################################################
Debug: arrayLength                    = 753
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 539, 461, 
Debug: bestThreshold[maxSpeedIndex]   = 539

ir_sort is faster than std::sort 53.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.033590294686

#####################################################################
Debug: arrayLength                    = 754
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 560, 440, 
Debug: bestThreshold[maxSpeedIndex]   = 560

ir_sort is faster than std::sort 56 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.028357119541

#####################################################################
Debug: arrayLength                    = 755
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 552, 448, 
Debug: bestThreshold[maxSpeedIndex]   = 552

ir_sort is faster than std::sort 55.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.038352285205

#####################################################################
Debug: arrayLength                    = 756
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 537, 463, 
Debug: bestThreshold[maxSpeedIndex]   = 537

ir_sort is faster than std::sort 53.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.032500158472

#####################################################################
Debug: arrayLength                    = 757
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 550, 450, 
Debug: bestThreshold[maxSpeedIndex]   = 550

ir_sort is faster than std::sort 55 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.041573022646

#####################################################################
Debug: arrayLength                    = 758
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 504, 496, 
Debug: bestThreshold[maxSpeedIndex]   = 504

ir_sort is faster than std::sort 50.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.029341138317

#####################################################################
Debug: arrayLength                    = 759
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 526, 474, 
Debug: bestThreshold[maxSpeedIndex]   = 526

ir_sort is faster than std::sort 52.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.029913669115

#####################################################################
Debug: arrayLength                    = 760
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 542, 458, 
Debug: bestThreshold[maxSpeedIndex]   = 542

ir_sort is faster than std::sort 54.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.02972294163

#####################################################################
Debug: arrayLength                    = 761
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 487, 513, 
Debug: bestThreshold[maxSpeedIndex]   = 513

std::sort is faster than ir_sort 51.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.023500506936

#####################################################################
Debug: arrayLength                    = 762
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 514, 486, 
Debug: bestThreshold[maxSpeedIndex]   = 514

ir_sort is faster than std::sort 51.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.028872207604

#####################################################################
Debug: arrayLength                    = 763
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 518, 482, 
Debug: bestThreshold[maxSpeedIndex]   = 518

ir_sort is faster than std::sort 51.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.027404300932

#####################################################################
Debug: arrayLength                    = 764
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 506, 494, 
Debug: bestThreshold[maxSpeedIndex]   = 506

ir_sort is faster than std::sort 50.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.043110887099

#####################################################################
Debug: arrayLength                    = 765
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 663, 337, 
Debug: bestThreshold[maxSpeedIndex]   = 663

ir_sort is faster than std::sort 66.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.053100398501

#####################################################################
Debug: arrayLength                    = 766
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 363, 637, 
Debug: bestThreshold[maxSpeedIndex]   = 637

std::sort is faster than ir_sort 63.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014460777122

#####################################################################
Debug: arrayLength                    = 767
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 382, 618, 
Debug: bestThreshold[maxSpeedIndex]   = 618

std::sort is faster than ir_sort 61.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.026635556518

#####################################################################
Debug: arrayLength                    = 768
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 727, 273, 
Debug: bestThreshold[maxSpeedIndex]   = 727

ir_sort is faster than std::sort 72.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.096576847397

#####################################################################
Debug: arrayLength                    = 769
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 827, 173, 
Debug: bestThreshold[maxSpeedIndex]   = 827

ir_sort is faster than std::sort 82.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.104674397863

#####################################################################
Debug: arrayLength                    = 770
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 632, 368, 
Debug: bestThreshold[maxSpeedIndex]   = 632

ir_sort is faster than std::sort 63.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.081747718312

#####################################################################
Debug: arrayLength                    = 771
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 503, 497, 
Debug: bestThreshold[maxSpeedIndex]   = 503

ir_sort is faster than std::sort 50.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.030034420219

#####################################################################
Debug: arrayLength                    = 772
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 508, 492, 
Debug: bestThreshold[maxSpeedIndex]   = 508

ir_sort is faster than std::sort 50.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.024985453979

#####################################################################
Debug: arrayLength                    = 773
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 416, 584, 
Debug: bestThreshold[maxSpeedIndex]   = 584

std::sort is faster than ir_sort 58.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012226723104

#####################################################################
Debug: arrayLength                    = 774
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 424, 576, 
Debug: bestThreshold[maxSpeedIndex]   = 576

std::sort is faster than ir_sort 57.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010774388821

#####################################################################
Debug: arrayLength                    = 775
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 439, 561, 
Debug: bestThreshold[maxSpeedIndex]   = 561

std::sort is faster than ir_sort 56.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014063811236

#####################################################################
Debug: arrayLength                    = 776
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 397, 603, 
Debug: bestThreshold[maxSpeedIndex]   = 603

std::sort is faster than ir_sort 60.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.024470265885

#####################################################################
Debug: arrayLength                    = 777
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 537, 463, 
Debug: bestThreshold[maxSpeedIndex]   = 537

ir_sort is faster than std::sort 53.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.027985126642

#####################################################################
Debug: arrayLength                    = 778
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 629, 371, 
Debug: bestThreshold[maxSpeedIndex]   = 629

ir_sort is faster than std::sort 62.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.063407866114

#####################################################################
Debug: arrayLength                    = 779
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 634, 366, 
Debug: bestThreshold[maxSpeedIndex]   = 634

ir_sort is faster than std::sort 63.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.059423734551

#####################################################################
Debug: arrayLength                    = 780
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 573, 427, 
Debug: bestThreshold[maxSpeedIndex]   = 573

ir_sort is faster than std::sort 57.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.045570134171

#####################################################################
Debug: arrayLength                    = 781
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 563, 437, 
Debug: bestThreshold[maxSpeedIndex]   = 563

ir_sort is faster than std::sort 56.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.037051647789

#####################################################################
Debug: arrayLength                    = 782
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 584, 416, 
Debug: bestThreshold[maxSpeedIndex]   = 584

ir_sort is faster than std::sort 58.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.029965724354

#####################################################################
Debug: arrayLength                    = 783
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 558, 442, 
Debug: bestThreshold[maxSpeedIndex]   = 558

ir_sort is faster than std::sort 55.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.035071248412

#####################################################################
Debug: arrayLength                    = 784
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 546, 454, 
Debug: bestThreshold[maxSpeedIndex]   = 546

ir_sort is faster than std::sort 54.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.029835061379

#####################################################################
Debug: arrayLength                    = 785
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 579, 421, 
Debug: bestThreshold[maxSpeedIndex]   = 579

ir_sort is faster than std::sort 57.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.045285504685

#####################################################################
Debug: arrayLength                    = 786
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 615, 385, 
Debug: bestThreshold[maxSpeedIndex]   = 615

ir_sort is faster than std::sort 61.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.036633877129

#####################################################################
Debug: arrayLength                    = 787
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 615, 385, 
Debug: bestThreshold[maxSpeedIndex]   = 615

ir_sort is faster than std::sort 61.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.044712710821

#####################################################################
Debug: arrayLength                    = 788
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 578, 422, 
Debug: bestThreshold[maxSpeedIndex]   = 578

ir_sort is faster than std::sort 57.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.044353907675

#####################################################################
Debug: arrayLength                    = 789
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 583, 417, 
Debug: bestThreshold[maxSpeedIndex]   = 583

ir_sort is faster than std::sort 58.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.042377859266

#####################################################################
Debug: arrayLength                    = 790
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 570, 430, 
Debug: bestThreshold[maxSpeedIndex]   = 570

ir_sort is faster than std::sort 57 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.044799139735

#####################################################################
Debug: arrayLength                    = 791
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 709, 291, 
Debug: bestThreshold[maxSpeedIndex]   = 709

ir_sort is faster than std::sort 70.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.080801773204

#####################################################################
Debug: arrayLength                    = 792
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 765, 235, 
Debug: bestThreshold[maxSpeedIndex]   = 765

ir_sort is faster than std::sort 76.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.088124768755

#####################################################################
Debug: arrayLength                    = 793
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 677, 323, 
Debug: bestThreshold[maxSpeedIndex]   = 677

ir_sort is faster than std::sort 67.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.071773612926

#####################################################################
Debug: arrayLength                    = 794
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 649, 351, 
Debug: bestThreshold[maxSpeedIndex]   = 649

ir_sort is faster than std::sort 64.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.074351258518

#####################################################################
Debug: arrayLength                    = 795
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 557, 443, 
Debug: bestThreshold[maxSpeedIndex]   = 557

ir_sort is faster than std::sort 55.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.056700499974

#####################################################################
Debug: arrayLength                    = 796
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 490, 510, 
Debug: bestThreshold[maxSpeedIndex]   = 510

std::sort is faster than ir_sort 51 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.040947694057

#####################################################################
Debug: arrayLength                    = 797
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 517, 483, 
Debug: bestThreshold[maxSpeedIndex]   = 517

ir_sort is faster than std::sort 51.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.032587630057

#####################################################################
Debug: arrayLength                    = 798
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 597, 403, 
Debug: bestThreshold[maxSpeedIndex]   = 597

ir_sort is faster than std::sort 59.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.06011446094

#####################################################################
Debug: arrayLength                    = 799
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 670, 330, 
Debug: bestThreshold[maxSpeedIndex]   = 670

ir_sort is faster than std::sort 67 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.072922663231

#####################################################################
Debug: arrayLength                    = 800
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 658, 342, 
Debug: bestThreshold[maxSpeedIndex]   = 658

ir_sort is faster than std::sort 65.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.080094858912

#####################################################################
Debug: arrayLength                    = 801
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 636, 364, 
Debug: bestThreshold[maxSpeedIndex]   = 636

ir_sort is faster than std::sort 63.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.074626132235

#####################################################################
Debug: arrayLength                    = 802
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 681, 319, 
Debug: bestThreshold[maxSpeedIndex]   = 681

ir_sort is faster than std::sort 68.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.086594794662

#####################################################################
Debug: arrayLength                    = 803
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 697, 303, 
Debug: bestThreshold[maxSpeedIndex]   = 697

ir_sort is faster than std::sort 69.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.08648715845

#####################################################################
Debug: arrayLength                    = 804
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 646, 354, 
Debug: bestThreshold[maxSpeedIndex]   = 646

ir_sort is faster than std::sort 64.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.073793926374

#####################################################################
Debug: arrayLength                    = 805
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 556, 444, 
Debug: bestThreshold[maxSpeedIndex]   = 556

ir_sort is faster than std::sort 55.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.043946310208

#####################################################################
Debug: arrayLength                    = 806
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 650, 350, 
Debug: bestThreshold[maxSpeedIndex]   = 650

ir_sort is faster than std::sort 65 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.076419769747

#####################################################################
Debug: arrayLength                    = 807
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 627, 373, 
Debug: bestThreshold[maxSpeedIndex]   = 627

ir_sort is faster than std::sort 62.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.063083317996

#####################################################################
Debug: arrayLength                    = 808
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 688, 312, 
Debug: bestThreshold[maxSpeedIndex]   = 688

ir_sort is faster than std::sort 68.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.085325838335

#####################################################################
Debug: arrayLength                    = 809
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 569, 431, 
Debug: bestThreshold[maxSpeedIndex]   = 569

ir_sort is faster than std::sort 56.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.031162442754

#####################################################################
Debug: arrayLength                    = 810
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 596, 404, 
Debug: bestThreshold[maxSpeedIndex]   = 596

ir_sort is faster than std::sort 59.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.036943768739

#####################################################################
Debug: arrayLength                    = 811
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 566, 434, 
Debug: bestThreshold[maxSpeedIndex]   = 566

ir_sort is faster than std::sort 56.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.039465533068

#####################################################################
Debug: arrayLength                    = 812
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 496, 504, 
Debug: bestThreshold[maxSpeedIndex]   = 504

std::sort is faster than ir_sort 50.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.049036145749

#####################################################################
Debug: arrayLength                    = 813
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 481, 519, 
Debug: bestThreshold[maxSpeedIndex]   = 519

std::sort is faster than ir_sort 51.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.023209690337

#####################################################################
Debug: arrayLength                    = 814
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 496, 504, 
Debug: bestThreshold[maxSpeedIndex]   = 504

std::sort is faster than ir_sort 50.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.029337496428

#####################################################################
Debug: arrayLength                    = 815
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 467, 533, 
Debug: bestThreshold[maxSpeedIndex]   = 533

std::sort is faster than ir_sort 53.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.021654334237

#####################################################################
Debug: arrayLength                    = 816
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 523, 477, 
Debug: bestThreshold[maxSpeedIndex]   = 523

ir_sort is faster than std::sort 52.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016976286343

#####################################################################
Debug: arrayLength                    = 817
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 528, 472, 
Debug: bestThreshold[maxSpeedIndex]   = 528

ir_sort is faster than std::sort 52.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.021730754231

#####################################################################
Debug: arrayLength                    = 818
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 485, 515, 
Debug: bestThreshold[maxSpeedIndex]   = 515

std::sort is faster than ir_sort 51.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01412264351

#####################################################################
Debug: arrayLength                    = 819
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 520, 480, 
Debug: bestThreshold[maxSpeedIndex]   = 520

ir_sort is faster than std::sort 52 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01123200917

#####################################################################
Debug: arrayLength                    = 820
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 481, 519, 
Debug: bestThreshold[maxSpeedIndex]   = 519

std::sort is faster than ir_sort 51.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009464533526

#####################################################################
Debug: arrayLength                    = 821
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 522, 478, 
Debug: bestThreshold[maxSpeedIndex]   = 522

ir_sort is faster than std::sort 52.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010265346119

#####################################################################
Debug: arrayLength                    = 822
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 523, 477, 
Debug: bestThreshold[maxSpeedIndex]   = 523

ir_sort is faster than std::sort 52.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.021076309063

#####################################################################
Debug: arrayLength                    = 823
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 514, 486, 
Debug: bestThreshold[maxSpeedIndex]   = 514

ir_sort is faster than std::sort 51.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017374674709

#####################################################################
Debug: arrayLength                    = 824
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 457, 543, 
Debug: bestThreshold[maxSpeedIndex]   = 543

std::sort is faster than ir_sort 54.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.024059567575

#####################################################################
Debug: arrayLength                    = 825
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 511, 489, 
Debug: bestThreshold[maxSpeedIndex]   = 511

ir_sort is faster than std::sort 51.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016275686289

#####################################################################
Debug: arrayLength                    = 826
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 517, 483, 
Debug: bestThreshold[maxSpeedIndex]   = 517

ir_sort is faster than std::sort 51.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.02421132824

#####################################################################
Debug: arrayLength                    = 827
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 462, 538, 
Debug: bestThreshold[maxSpeedIndex]   = 538

std::sort is faster than ir_sort 53.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.018317954592

#####################################################################
Debug: arrayLength                    = 828
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 474, 526, 
Debug: bestThreshold[maxSpeedIndex]   = 526

std::sort is faster than ir_sort 52.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.02099145398

#####################################################################
Debug: arrayLength                    = 829
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 502, 498, 
Debug: bestThreshold[maxSpeedIndex]   = 502

ir_sort is faster than std::sort 50.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017963489848

#####################################################################
Debug: arrayLength                    = 830
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 484, 516, 
Debug: bestThreshold[maxSpeedIndex]   = 516

std::sort is faster than ir_sort 51.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.026399573188

#####################################################################
Debug: arrayLength                    = 831
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 460, 540, 
Debug: bestThreshold[maxSpeedIndex]   = 540

std::sort is faster than ir_sort 54 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.034648568834

#####################################################################
Debug: arrayLength                    = 832
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 487, 513, 
Debug: bestThreshold[maxSpeedIndex]   = 513

std::sort is faster than ir_sort 51.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01298289788

#####################################################################
Debug: arrayLength                    = 833
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 487, 513, 
Debug: bestThreshold[maxSpeedIndex]   = 513

std::sort is faster than ir_sort 51.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017032326161

#####################################################################
Debug: arrayLength                    = 834
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 521, 479, 
Debug: bestThreshold[maxSpeedIndex]   = 521

ir_sort is faster than std::sort 52.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.0260425996

#####################################################################
Debug: arrayLength                    = 835
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 482, 518, 
Debug: bestThreshold[maxSpeedIndex]   = 518

std::sort is faster than ir_sort 51.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.030118376661

#####################################################################
Debug: arrayLength                    = 836
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 511, 489, 
Debug: bestThreshold[maxSpeedIndex]   = 511

ir_sort is faster than std::sort 51.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017713094763

#####################################################################
Debug: arrayLength                    = 837
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 469, 531, 
Debug: bestThreshold[maxSpeedIndex]   = 531

std::sort is faster than ir_sort 53.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.029285951455

#####################################################################
Debug: arrayLength                    = 838
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 482, 518, 
Debug: bestThreshold[maxSpeedIndex]   = 518

std::sort is faster than ir_sort 51.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.029801850092

#####################################################################
Debug: arrayLength                    = 839
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 614, 386, 
Debug: bestThreshold[maxSpeedIndex]   = 614

ir_sort is faster than std::sort 61.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.06739547156

#####################################################################
Debug: arrayLength                    = 840
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 601, 399, 
Debug: bestThreshold[maxSpeedIndex]   = 601

ir_sort is faster than std::sort 60.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.04331855291

#####################################################################
Debug: arrayLength                    = 841
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 663, 337, 
Debug: bestThreshold[maxSpeedIndex]   = 663

ir_sort is faster than std::sort 66.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.063026833608

#####################################################################
Debug: arrayLength                    = 842
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 542, 458, 
Debug: bestThreshold[maxSpeedIndex]   = 542

ir_sort is faster than std::sort 54.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.040553299278

#####################################################################
Debug: arrayLength                    = 843
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 570, 430, 
Debug: bestThreshold[maxSpeedIndex]   = 570

ir_sort is faster than std::sort 57 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.041100560141

#####################################################################
Debug: arrayLength                    = 844
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 520, 480, 
Debug: bestThreshold[maxSpeedIndex]   = 520

ir_sort is faster than std::sort 52 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.039634612202

#####################################################################
Debug: arrayLength                    = 845
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 799, 201, 
Debug: bestThreshold[maxSpeedIndex]   = 799

ir_sort is faster than std::sort 79.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.10571748468

#####################################################################
Debug: arrayLength                    = 846
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 778, 222, 
Debug: bestThreshold[maxSpeedIndex]   = 778

ir_sort is faster than std::sort 77.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.122820924639

#####################################################################
Debug: arrayLength                    = 847
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 780, 220, 
Debug: bestThreshold[maxSpeedIndex]   = 780

ir_sort is faster than std::sort 78 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.106952661636

#####################################################################
Debug: arrayLength                    = 848
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 785, 215, 
Debug: bestThreshold[maxSpeedIndex]   = 785

ir_sort is faster than std::sort 78.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.092061905821

#####################################################################
Debug: arrayLength                    = 849
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 666, 334, 
Debug: bestThreshold[maxSpeedIndex]   = 666

ir_sort is faster than std::sort 66.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.052565593385

#####################################################################
Debug: arrayLength                    = 850
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 535, 465, 
Debug: bestThreshold[maxSpeedIndex]   = 535

ir_sort is faster than std::sort 53.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.019032629365

#####################################################################
Debug: arrayLength                    = 851
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 588, 412, 
Debug: bestThreshold[maxSpeedIndex]   = 588

ir_sort is faster than std::sort 58.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.049898289887

#####################################################################
Debug: arrayLength                    = 852
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 508, 492, 
Debug: bestThreshold[maxSpeedIndex]   = 508

ir_sort is faster than std::sort 50.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.021672444879

#####################################################################
Debug: arrayLength                    = 853
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 506, 494, 
Debug: bestThreshold[maxSpeedIndex]   = 506

ir_sort is faster than std::sort 50.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.019519585408

#####################################################################
Debug: arrayLength                    = 854
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 531, 469, 
Debug: bestThreshold[maxSpeedIndex]   = 531

ir_sort is faster than std::sort 53.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.020558718136

#####################################################################
Debug: arrayLength                    = 855
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 527, 473, 
Debug: bestThreshold[maxSpeedIndex]   = 527

ir_sort is faster than std::sort 52.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01701046528

#####################################################################
Debug: arrayLength                    = 856
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 574, 426, 
Debug: bestThreshold[maxSpeedIndex]   = 574

ir_sort is faster than std::sort 57.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.023934267442

#####################################################################
Debug: arrayLength                    = 857
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 451, 549, 
Debug: bestThreshold[maxSpeedIndex]   = 549

std::sort is faster than ir_sort 54.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.023979442773

#####################################################################
Debug: arrayLength                    = 858
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 335, 665, 
Debug: bestThreshold[maxSpeedIndex]   = 665

std::sort is faster than ir_sort 66.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004750166671

#####################################################################
Debug: arrayLength                    = 859
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 311, 689, 
Debug: bestThreshold[maxSpeedIndex]   = 689

std::sort is faster than ir_sort 68.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.0033267879

#####################################################################
Debug: arrayLength                    = 860
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 431, 569, 
Debug: bestThreshold[maxSpeedIndex]   = 569

std::sort is faster than ir_sort 56.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.022234173386

#####################################################################
Debug: arrayLength                    = 861
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 451, 549, 
Debug: bestThreshold[maxSpeedIndex]   = 549

std::sort is faster than ir_sort 54.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.028804117657

#####################################################################
Debug: arrayLength                    = 862
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 473, 527, 
Debug: bestThreshold[maxSpeedIndex]   = 527

std::sort is faster than ir_sort 52.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.025589261224

#####################################################################
Debug: arrayLength                    = 863
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 381, 619, 
Debug: bestThreshold[maxSpeedIndex]   = 619

std::sort is faster than ir_sort 61.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01279412387

#####################################################################
Debug: arrayLength                    = 864
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 369, 631, 
Debug: bestThreshold[maxSpeedIndex]   = 631

std::sort is faster than ir_sort 63.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.994938650351

#####################################################################
Debug: arrayLength                    = 865
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 366, 634, 
Debug: bestThreshold[maxSpeedIndex]   = 634

std::sort is faster than ir_sort 63.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008057560281

#####################################################################
Debug: arrayLength                    = 866
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 370, 630, 
Debug: bestThreshold[maxSpeedIndex]   = 630

std::sort is faster than ir_sort 63 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00209305911

#####################################################################
Debug: arrayLength                    = 867
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 366, 634, 
Debug: bestThreshold[maxSpeedIndex]   = 634

std::sort is faster than ir_sort 63.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00729598614

#####################################################################
Debug: arrayLength                    = 868
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 358, 642, 
Debug: bestThreshold[maxSpeedIndex]   = 642

std::sort is faster than ir_sort 64.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005074189546

#####################################################################
Debug: arrayLength                    = 869
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 402, 598, 
Debug: bestThreshold[maxSpeedIndex]   = 598

std::sort is faster than ir_sort 59.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.023204181943

#####################################################################
Debug: arrayLength                    = 870
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 383, 617, 
Debug: bestThreshold[maxSpeedIndex]   = 617

std::sort is faster than ir_sort 61.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00598819641

#####################################################################
Debug: arrayLength                    = 871
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 454, 546, 
Debug: bestThreshold[maxSpeedIndex]   = 546

std::sort is faster than ir_sort 54.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.034939786012

#####################################################################
Debug: arrayLength                    = 872
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 397, 603, 
Debug: bestThreshold[maxSpeedIndex]   = 603

std::sort is faster than ir_sort 60.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011938406299

#####################################################################
Debug: arrayLength                    = 873
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 416, 584, 
Debug: bestThreshold[maxSpeedIndex]   = 584

std::sort is faster than ir_sort 58.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011673025521

#####################################################################
Debug: arrayLength                    = 874
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 395, 605, 
Debug: bestThreshold[maxSpeedIndex]   = 605

std::sort is faster than ir_sort 60.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007396906086

#####################################################################
Debug: arrayLength                    = 875
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 389, 611, 
Debug: bestThreshold[maxSpeedIndex]   = 611

std::sort is faster than ir_sort 61.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009708115604

#####################################################################
Debug: arrayLength                    = 876
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 438, 562, 
Debug: bestThreshold[maxSpeedIndex]   = 562

std::sort is faster than ir_sort 56.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017523213858

#####################################################################
Debug: arrayLength                    = 877
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 384, 616, 
Debug: bestThreshold[maxSpeedIndex]   = 616

std::sort is faster than ir_sort 61.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014102914498

#####################################################################
Debug: arrayLength                    = 878
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 417, 583, 
Debug: bestThreshold[maxSpeedIndex]   = 583

std::sort is faster than ir_sort 58.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014151662609

#####################################################################
Debug: arrayLength                    = 879
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 378, 622, 
Debug: bestThreshold[maxSpeedIndex]   = 622

std::sort is faster than ir_sort 62.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00901548329

#####################################################################
Debug: arrayLength                    = 880
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 378, 622, 
Debug: bestThreshold[maxSpeedIndex]   = 622

std::sort is faster than ir_sort 62.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012623759758

#####################################################################
Debug: arrayLength                    = 881
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 542, 458, 
Debug: bestThreshold[maxSpeedIndex]   = 542

ir_sort is faster than std::sort 54.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.047011788297

#####################################################################
Debug: arrayLength                    = 882
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 385, 615, 
Debug: bestThreshold[maxSpeedIndex]   = 615

std::sort is faster than ir_sort 61.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.020263068388

#####################################################################
Debug: arrayLength                    = 883
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 511, 489, 
Debug: bestThreshold[maxSpeedIndex]   = 511

ir_sort is faster than std::sort 51.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.064981201039

#####################################################################
Debug: arrayLength                    = 884
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 437, 563, 
Debug: bestThreshold[maxSpeedIndex]   = 563

std::sort is faster than ir_sort 56.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.029845271735

#####################################################################
Debug: arrayLength                    = 885
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 394, 606, 
Debug: bestThreshold[maxSpeedIndex]   = 606

std::sort is faster than ir_sort 60.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.037856791619

#####################################################################
Debug: arrayLength                    = 886
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 421, 579, 
Debug: bestThreshold[maxSpeedIndex]   = 579

std::sort is faster than ir_sort 57.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.029417113425

#####################################################################
Debug: arrayLength                    = 887
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 562, 438, 
Debug: bestThreshold[maxSpeedIndex]   = 562

ir_sort is faster than std::sort 56.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.065805935872

#####################################################################
Debug: arrayLength                    = 888
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 585, 415, 
Debug: bestThreshold[maxSpeedIndex]   = 585

ir_sort is faster than std::sort 58.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.058899335433

#####################################################################
Debug: arrayLength                    = 889
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 575, 425, 
Debug: bestThreshold[maxSpeedIndex]   = 575

ir_sort is faster than std::sort 57.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.037634977659

#####################################################################
Debug: arrayLength                    = 890
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 481, 519, 
Debug: bestThreshold[maxSpeedIndex]   = 519

std::sort is faster than ir_sort 51.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.038396050765

#####################################################################
Debug: arrayLength                    = 891
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 439, 561, 
Debug: bestThreshold[maxSpeedIndex]   = 561

std::sort is faster than ir_sort 56.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.028938672767

#####################################################################
Debug: arrayLength                    = 892
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 429, 571, 
Debug: bestThreshold[maxSpeedIndex]   = 571

std::sort is faster than ir_sort 57.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.022342328855

#####################################################################
Debug: arrayLength                    = 893
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 404, 596, 
Debug: bestThreshold[maxSpeedIndex]   = 596

std::sort is faster than ir_sort 59.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.019221061625

#####################################################################
Debug: arrayLength                    = 894
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 434, 566, 
Debug: bestThreshold[maxSpeedIndex]   = 566

std::sort is faster than ir_sort 56.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.015302378717

#####################################################################
Debug: arrayLength                    = 895
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 456, 544, 
Debug: bestThreshold[maxSpeedIndex]   = 544

std::sort is faster than ir_sort 54.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.014464514097

#####################################################################
Debug: arrayLength                    = 896
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 491, 509, 
Debug: bestThreshold[maxSpeedIndex]   = 509

std::sort is faster than ir_sort 50.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009672253728

#####################################################################
Debug: arrayLength                    = 897
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 448, 552, 
Debug: bestThreshold[maxSpeedIndex]   = 552

std::sort is faster than ir_sort 55.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010539627781

#####################################################################
Debug: arrayLength                    = 898
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 474, 526, 
Debug: bestThreshold[maxSpeedIndex]   = 526

std::sort is faster than ir_sort 52.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016725323618

#####################################################################
Debug: arrayLength                    = 899
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 487, 513, 
Debug: bestThreshold[maxSpeedIndex]   = 513

std::sort is faster than ir_sort 51.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00920506924

#####################################################################
Debug: arrayLength                    = 900
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 497, 503, 
Debug: bestThreshold[maxSpeedIndex]   = 503

std::sort is faster than ir_sort 50.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008410393803

#####################################################################
Debug: arrayLength                    = 901
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 476, 524, 
Debug: bestThreshold[maxSpeedIndex]   = 524

std::sort is faster than ir_sort 52.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.023585331125

#####################################################################
Debug: arrayLength                    = 902
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 549, 451, 
Debug: bestThreshold[maxSpeedIndex]   = 549

ir_sort is faster than std::sort 54.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005668994061

#####################################################################
Debug: arrayLength                    = 903
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 525, 475, 
Debug: bestThreshold[maxSpeedIndex]   = 525

ir_sort is faster than std::sort 52.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008428097214

#####################################################################
Debug: arrayLength                    = 904
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 490, 510, 
Debug: bestThreshold[maxSpeedIndex]   = 510

std::sort is faster than ir_sort 51 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003935082418

#####################################################################
Debug: arrayLength                    = 905
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 516, 484, 
Debug: bestThreshold[maxSpeedIndex]   = 516

ir_sort is faster than std::sort 51.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006900429352

#####################################################################
Debug: arrayLength                    = 906
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 533, 467, 
Debug: bestThreshold[maxSpeedIndex]   = 533

ir_sort is faster than std::sort 53.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006358821447

#####################################################################
Debug: arrayLength                    = 907
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 504, 496, 
Debug: bestThreshold[maxSpeedIndex]   = 504

ir_sort is faster than std::sort 50.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004565406976

#####################################################################
Debug: arrayLength                    = 908
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 506, 494, 
Debug: bestThreshold[maxSpeedIndex]   = 506

ir_sort is faster than std::sort 50.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007045826322

#####################################################################
Debug: arrayLength                    = 909
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 522, 478, 
Debug: bestThreshold[maxSpeedIndex]   = 522

ir_sort is faster than std::sort 52.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.042342527129

#####################################################################
Debug: arrayLength                    = 910
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 528, 472, 
Debug: bestThreshold[maxSpeedIndex]   = 528

ir_sort is faster than std::sort 52.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003865356507

#####################################################################
Debug: arrayLength                    = 911
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 530, 470, 
Debug: bestThreshold[maxSpeedIndex]   = 530

ir_sort is faster than std::sort 53 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009574566663

#####################################################################
Debug: arrayLength                    = 912
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 484, 516, 
Debug: bestThreshold[maxSpeedIndex]   = 516

std::sort is faster than ir_sort 51.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00323608892

#####################################################################
Debug: arrayLength                    = 913
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 475, 525, 
Debug: bestThreshold[maxSpeedIndex]   = 525

std::sort is faster than ir_sort 52.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004610398336

#####################################################################
Debug: arrayLength                    = 914
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 480, 520, 
Debug: bestThreshold[maxSpeedIndex]   = 520

std::sort is faster than ir_sort 52 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004281563329

#####################################################################
Debug: arrayLength                    = 915
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 453, 547, 
Debug: bestThreshold[maxSpeedIndex]   = 547

std::sort is faster than ir_sort 54.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006186708879

#####################################################################
Debug: arrayLength                    = 916
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 475, 525, 
Debug: bestThreshold[maxSpeedIndex]   = 525

std::sort is faster than ir_sort 52.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00525442587

#####################################################################
Debug: arrayLength                    = 917
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 464, 536, 
Debug: bestThreshold[maxSpeedIndex]   = 536

std::sort is faster than ir_sort 53.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.003899318801

#####################################################################
Debug: arrayLength                    = 918
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 439, 561, 
Debug: bestThreshold[maxSpeedIndex]   = 561

std::sort is faster than ir_sort 56.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004548406823

#####################################################################
Debug: arrayLength                    = 919
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 482, 518, 
Debug: bestThreshold[maxSpeedIndex]   = 518

std::sort is faster than ir_sort 51.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006383208498

#####################################################################
Debug: arrayLength                    = 920
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 533, 467, 
Debug: bestThreshold[maxSpeedIndex]   = 533

ir_sort is faster than std::sort 53.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008635712154

#####################################################################
Debug: arrayLength                    = 921
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 456, 544, 
Debug: bestThreshold[maxSpeedIndex]   = 544

std::sort is faster than ir_sort 54.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005396829711

#####################################################################
Debug: arrayLength                    = 922
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 468, 532, 
Debug: bestThreshold[maxSpeedIndex]   = 532

std::sort is faster than ir_sort 53.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00821273287

#####################################################################
Debug: arrayLength                    = 923
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 420, 580, 
Debug: bestThreshold[maxSpeedIndex]   = 580

std::sort is faster than ir_sort 58 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.001321725882

#####################################################################
Debug: arrayLength                    = 924
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 437, 563, 
Debug: bestThreshold[maxSpeedIndex]   = 563

std::sort is faster than ir_sort 56.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.021825860297

#####################################################################
Debug: arrayLength                    = 925
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 496, 504, 
Debug: bestThreshold[maxSpeedIndex]   = 504

std::sort is faster than ir_sort 50.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.023958969927

#####################################################################
Debug: arrayLength                    = 926
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 429, 571, 
Debug: bestThreshold[maxSpeedIndex]   = 571

std::sort is faster than ir_sort 57.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.026176952715

#####################################################################
Debug: arrayLength                    = 927
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 408, 592, 
Debug: bestThreshold[maxSpeedIndex]   = 592

std::sort is faster than ir_sort 59.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.02745485782

#####################################################################
Debug: arrayLength                    = 928
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 437, 563, 
Debug: bestThreshold[maxSpeedIndex]   = 563

std::sort is faster than ir_sort 56.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.024501968694

#####################################################################
Debug: arrayLength                    = 929
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 455, 545, 
Debug: bestThreshold[maxSpeedIndex]   = 545

std::sort is faster than ir_sort 54.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.018493333617

#####################################################################
Debug: arrayLength                    = 930
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 450, 550, 
Debug: bestThreshold[maxSpeedIndex]   = 550

std::sort is faster than ir_sort 55 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010153271237

#####################################################################
Debug: arrayLength                    = 931
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 443, 557, 
Debug: bestThreshold[maxSpeedIndex]   = 557

std::sort is faster than ir_sort 55.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005438235901

#####################################################################
Debug: arrayLength                    = 932
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 433, 567, 
Debug: bestThreshold[maxSpeedIndex]   = 567

std::sort is faster than ir_sort 56.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004420597304

#####################################################################
Debug: arrayLength                    = 933
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 450, 550, 
Debug: bestThreshold[maxSpeedIndex]   = 550

std::sort is faster than ir_sort 55 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006748369468

#####################################################################
Debug: arrayLength                    = 934
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 436, 564, 
Debug: bestThreshold[maxSpeedIndex]   = 564

std::sort is faster than ir_sort 56.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007597410957

#####################################################################
Debug: arrayLength                    = 935
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 469, 531, 
Debug: bestThreshold[maxSpeedIndex]   = 531

std::sort is faster than ir_sort 53.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00889753688

#####################################################################
Debug: arrayLength                    = 936
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 458, 542, 
Debug: bestThreshold[maxSpeedIndex]   = 542

std::sort is faster than ir_sort 54.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009355049656

#####################################################################
Debug: arrayLength                    = 937
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 441, 559, 
Debug: bestThreshold[maxSpeedIndex]   = 559

std::sort is faster than ir_sort 55.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012466060911

#####################################################################
Debug: arrayLength                    = 938
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 454, 546, 
Debug: bestThreshold[maxSpeedIndex]   = 546

std::sort is faster than ir_sort 54.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010706879467

#####################################################################
Debug: arrayLength                    = 939
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 450, 550, 
Debug: bestThreshold[maxSpeedIndex]   = 550

std::sort is faster than ir_sort 55 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013743549926

#####################################################################
Debug: arrayLength                    = 940
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 573, 427, 
Debug: bestThreshold[maxSpeedIndex]   = 573

ir_sort is faster than std::sort 57.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010862601624

#####################################################################
Debug: arrayLength                    = 941
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 505, 495, 
Debug: bestThreshold[maxSpeedIndex]   = 505

ir_sort is faster than std::sort 50.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00956604468

#####################################################################
Debug: arrayLength                    = 942
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 556, 444, 
Debug: bestThreshold[maxSpeedIndex]   = 556

ir_sort is faster than std::sort 55.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012836583526

#####################################################################
Debug: arrayLength                    = 943
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 539, 461, 
Debug: bestThreshold[maxSpeedIndex]   = 539

ir_sort is faster than std::sort 53.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.005906636985

#####################################################################
Debug: arrayLength                    = 944
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 537, 463, 
Debug: bestThreshold[maxSpeedIndex]   = 537

ir_sort is faster than std::sort 53.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00790982201

#####################################################################
Debug: arrayLength                    = 945
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 528, 472, 
Debug: bestThreshold[maxSpeedIndex]   = 528

ir_sort is faster than std::sort 52.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007225810255

#####################################################################
Debug: arrayLength                    = 946
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 541, 459, 
Debug: bestThreshold[maxSpeedIndex]   = 541

ir_sort is faster than std::sort 54.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01025769565

#####################################################################
Debug: arrayLength                    = 947
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 508, 492, 
Debug: bestThreshold[maxSpeedIndex]   = 508

ir_sort is faster than std::sort 50.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.0057723127

#####################################################################
Debug: arrayLength                    = 948
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 512, 488, 
Debug: bestThreshold[maxSpeedIndex]   = 512

ir_sort is faster than std::sort 51.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01107363097

#####################################################################
Debug: arrayLength                    = 949
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 512, 488, 
Debug: bestThreshold[maxSpeedIndex]   = 512

ir_sort is faster than std::sort 51.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009851927054

#####################################################################
Debug: arrayLength                    = 950
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 538, 462, 
Debug: bestThreshold[maxSpeedIndex]   = 538

ir_sort is faster than std::sort 53.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012088093374

#####################################################################
Debug: arrayLength                    = 951
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 520, 480, 
Debug: bestThreshold[maxSpeedIndex]   = 520

ir_sort is faster than std::sort 52 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.021774357629

#####################################################################
Debug: arrayLength                    = 952
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 580, 420, 
Debug: bestThreshold[maxSpeedIndex]   = 580

ir_sort is faster than std::sort 58 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.028883158095

#####################################################################
Debug: arrayLength                    = 953
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 548, 452, 
Debug: bestThreshold[maxSpeedIndex]   = 548

ir_sort is faster than std::sort 54.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.019770318276

#####################################################################
Debug: arrayLength                    = 954
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 577, 423, 
Debug: bestThreshold[maxSpeedIndex]   = 577

ir_sort is faster than std::sort 57.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.042246778301

#####################################################################
Debug: arrayLength                    = 955
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 536, 464, 
Debug: bestThreshold[maxSpeedIndex]   = 536

ir_sort is faster than std::sort 53.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013006294876

#####################################################################
Debug: arrayLength                    = 956
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 535, 465, 
Debug: bestThreshold[maxSpeedIndex]   = 535

ir_sort is faster than std::sort 53.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017273163386

#####################################################################
Debug: arrayLength                    = 957
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 502, 498, 
Debug: bestThreshold[maxSpeedIndex]   = 502

ir_sort is faster than std::sort 50.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008308470568

#####################################################################
Debug: arrayLength                    = 958
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 518, 482, 
Debug: bestThreshold[maxSpeedIndex]   = 518

ir_sort is faster than std::sort 51.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009500710411

#####################################################################
Debug: arrayLength                    = 959
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 536, 464, 
Debug: bestThreshold[maxSpeedIndex]   = 536

ir_sort is faster than std::sort 53.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009936917839

#####################################################################
Debug: arrayLength                    = 960
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 541, 459, 
Debug: bestThreshold[maxSpeedIndex]   = 541

ir_sort is faster than std::sort 54.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.013809085178

#####################################################################
Debug: arrayLength                    = 961
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 536, 464, 
Debug: bestThreshold[maxSpeedIndex]   = 536

ir_sort is faster than std::sort 53.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.031812248834

#####################################################################
Debug: arrayLength                    = 962
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 583, 417, 
Debug: bestThreshold[maxSpeedIndex]   = 583

ir_sort is faster than std::sort 58.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.052743634612

#####################################################################
Debug: arrayLength                    = 963
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 487, 513, 
Debug: bestThreshold[maxSpeedIndex]   = 513

std::sort is faster than ir_sort 51.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.00690294267

#####################################################################
Debug: arrayLength                    = 964
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 570, 430, 
Debug: bestThreshold[maxSpeedIndex]   = 570

ir_sort is faster than std::sort 57 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.044929063966

#####################################################################
Debug: arrayLength                    = 965
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 573, 427, 
Debug: bestThreshold[maxSpeedIndex]   = 573

ir_sort is faster than std::sort 57.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.040570263341

#####################################################################
Debug: arrayLength                    = 966
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 591, 409, 
Debug: bestThreshold[maxSpeedIndex]   = 591

ir_sort is faster than std::sort 59.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.042060231438

#####################################################################
Debug: arrayLength                    = 967
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 598, 402, 
Debug: bestThreshold[maxSpeedIndex]   = 598

ir_sort is faster than std::sort 59.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.023142949103

#####################################################################
Debug: arrayLength                    = 968
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 590, 410, 
Debug: bestThreshold[maxSpeedIndex]   = 590

ir_sort is faster than std::sort 59 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007175720846

#####################################################################
Debug: arrayLength                    = 969
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 602, 398, 
Debug: bestThreshold[maxSpeedIndex]   = 602

ir_sort is faster than std::sort 60.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008420171947

#####################################################################
Debug: arrayLength                    = 970
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 589, 411, 
Debug: bestThreshold[maxSpeedIndex]   = 589

ir_sort is faster than std::sort 58.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.029064641836

#####################################################################
Debug: arrayLength                    = 971
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 529, 471, 
Debug: bestThreshold[maxSpeedIndex]   = 529

ir_sort is faster than std::sort 52.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.010409000067

#####################################################################
Debug: arrayLength                    = 972
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 553, 447, 
Debug: bestThreshold[maxSpeedIndex]   = 553

ir_sort is faster than std::sort 55.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007139050808

#####################################################################
Debug: arrayLength                    = 973
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 556, 444, 
Debug: bestThreshold[maxSpeedIndex]   = 556

ir_sort is faster than std::sort 55.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011061919825

#####################################################################
Debug: arrayLength                    = 974
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 546, 454, 
Debug: bestThreshold[maxSpeedIndex]   = 546

ir_sort is faster than std::sort 54.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011521652197

#####################################################################
Debug: arrayLength                    = 975
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 561, 439, 
Debug: bestThreshold[maxSpeedIndex]   = 561

ir_sort is faster than std::sort 56.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004470012335

#####################################################################
Debug: arrayLength                    = 976
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 559, 441, 
Debug: bestThreshold[maxSpeedIndex]   = 559

ir_sort is faster than std::sort 55.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.0078502574

#####################################################################
Debug: arrayLength                    = 977
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 556, 444, 
Debug: bestThreshold[maxSpeedIndex]   = 556

ir_sort is faster than std::sort 55.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.02972821209

#####################################################################
Debug: arrayLength                    = 978
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 559, 441, 
Debug: bestThreshold[maxSpeedIndex]   = 559

ir_sort is faster than std::sort 55.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.022793916003

#####################################################################
Debug: arrayLength                    = 979
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 582, 418, 
Debug: bestThreshold[maxSpeedIndex]   = 582

ir_sort is faster than std::sort 58.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.009552803371

#####################################################################
Debug: arrayLength                    = 980
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 715, 285, 
Debug: bestThreshold[maxSpeedIndex]   = 715

ir_sort is faster than std::sort 71.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.046895928486

#####################################################################
Debug: arrayLength                    = 981
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 779, 221, 
Debug: bestThreshold[maxSpeedIndex]   = 779

ir_sort is faster than std::sort 77.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.091419397208

#####################################################################
Debug: arrayLength                    = 982
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 715, 285, 
Debug: bestThreshold[maxSpeedIndex]   = 715

ir_sort is faster than std::sort 71.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.062320797478

#####################################################################
Debug: arrayLength                    = 983
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 577, 423, 
Debug: bestThreshold[maxSpeedIndex]   = 577

ir_sort is faster than std::sort 57.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.025312879265

#####################################################################
Debug: arrayLength                    = 984
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 659, 341, 
Debug: bestThreshold[maxSpeedIndex]   = 659

ir_sort is faster than std::sort 65.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.047460102644

#####################################################################
Debug: arrayLength                    = 985
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 560, 440, 
Debug: bestThreshold[maxSpeedIndex]   = 560

ir_sort is faster than std::sort 56 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.02169956669

#####################################################################
Debug: arrayLength                    = 986
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 462, 538, 
Debug: bestThreshold[maxSpeedIndex]   = 538

std::sort is faster than ir_sort 53.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.017427598795

#####################################################################
Debug: arrayLength                    = 987
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 394, 606, 
Debug: bestThreshold[maxSpeedIndex]   = 606

std::sort is faster than ir_sort 60.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011790184429

#####################################################################
Debug: arrayLength                    = 988
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 366, 634, 
Debug: bestThreshold[maxSpeedIndex]   = 634

std::sort is faster than ir_sort 63.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007825474082

#####################################################################
Debug: arrayLength                    = 989
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 395, 605, 
Debug: bestThreshold[maxSpeedIndex]   = 605

std::sort is faster than ir_sort 60.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.012032485241

#####################################################################
Debug: arrayLength                    = 990
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 376, 624, 
Debug: bestThreshold[maxSpeedIndex]   = 624

std::sort is faster than ir_sort 62.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004296339674

#####################################################################
Debug: arrayLength                    = 991
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 361, 639, 
Debug: bestThreshold[maxSpeedIndex]   = 639

std::sort is faster than ir_sort 63.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.004436720038

#####################################################################
Debug: arrayLength                    = 992
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 386, 614, 
Debug: bestThreshold[maxSpeedIndex]   = 614

std::sort is faster than ir_sort 61.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.007043682897

#####################################################################
Debug: arrayLength                    = 993
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 358, 642, 
Debug: bestThreshold[maxSpeedIndex]   = 642

std::sort is faster than ir_sort 64.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008460143497

#####################################################################
Debug: arrayLength                    = 994
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 710, 290, 
Debug: bestThreshold[maxSpeedIndex]   = 710

ir_sort is faster than std::sort 71 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.081236226779

#####################################################################
Debug: arrayLength                    = 995
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 483, 517, 
Debug: bestThreshold[maxSpeedIndex]   = 517

std::sort is faster than ir_sort 51.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.027405536972

#####################################################################
Debug: arrayLength                    = 996
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 386, 614, 
Debug: bestThreshold[maxSpeedIndex]   = 614

std::sort is faster than ir_sort 61.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.008688572314

#####################################################################
Debug: arrayLength                    = 997
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 372, 628, 
Debug: bestThreshold[maxSpeedIndex]   = 628

std::sort is faster than ir_sort 62.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.011374570014

#####################################################################
Debug: arrayLength                    = 998
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 388, 612, 
Debug: bestThreshold[maxSpeedIndex]   = 612

std::sort is faster than ir_sort 61.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.006422186351

#####################################################################
Debug: arrayLength                    = 999
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 393, 607, 
Debug: bestThreshold[maxSpeedIndex]   = 607

std::sort is faster than ir_sort 60.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.01188872176

#####################################################################
Debug: arrayLength                    = 1000
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 419, 581, 
Debug: bestThreshold[maxSpeedIndex]   = 581

std::sort is faster than ir_sort 58.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 1.016089589061

