Input: (minArrayLength, maxArrayLength, testCases) = 
#####################################################################
Debug: arrayLength                    = 0
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 492, 508, 
Debug: bestThreshold[maxSpeedIndex]   = 508

std::sort is faster than ir_sort 50.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.9996156644519

#####################################################################
Debug: arrayLength                    = 1
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 264, 736, 
Debug: bestThreshold[maxSpeedIndex]   = 736

std::sort is faster than ir_sort 73.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.8886769143921

#####################################################################
Debug: arrayLength                    = 2
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5057931436147

#####################################################################
Debug: arrayLength                    = 3
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4969177946632

#####################################################################
Debug: arrayLength                    = 4
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4906714814083

#####################################################################
Debug: arrayLength                    = 5
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4975666373037

#####################################################################
Debug: arrayLength                    = 6
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5075444941701

#####################################################################
Debug: arrayLength                    = 7
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5008680842491

#####################################################################
Debug: arrayLength                    = 8
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5009910801281

#####################################################################
Debug: arrayLength                    = 9
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.503281342316

#####################################################################
Debug: arrayLength                    = 10
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4980705117291

#####################################################################
Debug: arrayLength                    = 11
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5031660365731

#####################################################################
Debug: arrayLength                    = 12
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4963750674446

#####################################################################
Debug: arrayLength                    = 13
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4979665165172

#####################################################################
Debug: arrayLength                    = 14
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4941942032211

#####################################################################
Debug: arrayLength                    = 15
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4979592822305

#####################################################################
Debug: arrayLength                    = 16
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4955693713407

#####################################################################
Debug: arrayLength                    = 17
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.498465634108

#####################################################################
Debug: arrayLength                    = 18
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4983279993234

#####################################################################
Debug: arrayLength                    = 19
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5250805813265

#####################################################################
Debug: arrayLength                    = 20
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5047892473265

#####################################################################
Debug: arrayLength                    = 21
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4991449165032

#####################################################################
Debug: arrayLength                    = 22
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4990746782825

#####################################################################
Debug: arrayLength                    = 23
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4967780752251

#####################################################################
Debug: arrayLength                    = 24
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5016165487047

#####################################################################
Debug: arrayLength                    = 25
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5007447479723

#####################################################################
Debug: arrayLength                    = 26
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5033513108327

#####################################################################
Debug: arrayLength                    = 27
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4997559937152

#####################################################################
Debug: arrayLength                    = 28
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5035915631504

#####################################################################
Debug: arrayLength                    = 29
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5026508723688

#####################################################################
Debug: arrayLength                    = 30
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5086543548845

#####################################################################
Debug: arrayLength                    = 31
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.502202184477

#####################################################################
Debug: arrayLength                    = 32
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5018094026615

#####################################################################
Debug: arrayLength                    = 33
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5009716127912

#####################################################################
Debug: arrayLength                    = 34
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5020913132901

#####################################################################
Debug: arrayLength                    = 35
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4999312645762

#####################################################################
Debug: arrayLength                    = 36
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4993136795104

#####################################################################
Debug: arrayLength                    = 37
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5030182095061

#####################################################################
Debug: arrayLength                    = 38
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4992502239343

#####################################################################
Debug: arrayLength                    = 39
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 6, 994, 
Debug: bestThreshold[maxSpeedIndex]   = 994

std::sort is faster than ir_sort 99.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5012800817553

#####################################################################
Debug: arrayLength                    = 40
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5038720341757

#####################################################################
Debug: arrayLength                    = 41
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5004656141037

#####################################################################
Debug: arrayLength                    = 42
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5003918466278

#####################################################################
Debug: arrayLength                    = 43
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5018255131988

#####################################################################
Debug: arrayLength                    = 44
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5035083880806

#####################################################################
Debug: arrayLength                    = 45
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4977751941177

#####################################################################
Debug: arrayLength                    = 46
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5007289692453

#####################################################################
Debug: arrayLength                    = 47
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5024145038668

#####################################################################
Debug: arrayLength                    = 48
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5000474008142

#####################################################################
Debug: arrayLength                    = 49
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5026263002948

#####################################################################
Debug: arrayLength                    = 50
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5047211074497

#####################################################################
Debug: arrayLength                    = 51
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5029365420486

#####################################################################
Debug: arrayLength                    = 52
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.50266864192

#####################################################################
Debug: arrayLength                    = 53
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5031174780058

#####################################################################
Debug: arrayLength                    = 54
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5026814499381

#####################################################################
Debug: arrayLength                    = 55
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5031377794917

#####################################################################
Debug: arrayLength                    = 56
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5022349435704

#####################################################################
Debug: arrayLength                    = 57
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5053049048932

#####################################################################
Debug: arrayLength                    = 58
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4983080988704

#####################################################################
Debug: arrayLength                    = 59
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4982387412682

#####################################################################
Debug: arrayLength                    = 60
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5021038349012

#####################################################################
Debug: arrayLength                    = 61
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.502105375296

#####################################################################
Debug: arrayLength                    = 62
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5064935047736

#####################################################################
Debug: arrayLength                    = 63
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5013243846018

#####################################################################
Debug: arrayLength                    = 64
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5004084947284

#####################################################################
Debug: arrayLength                    = 65
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4997721702511

#####################################################################
Debug: arrayLength                    = 66
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5001853286872

#####################################################################
Debug: arrayLength                    = 67
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.504677285484

#####################################################################
Debug: arrayLength                    = 68
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5063987570932

#####################################################################
Debug: arrayLength                    = 69
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5032512298637

#####################################################################
Debug: arrayLength                    = 70
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5030529576314

#####################################################################
Debug: arrayLength                    = 71
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5017214978447

#####################################################################
Debug: arrayLength                    = 72
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5135757159893

#####################################################################
Debug: arrayLength                    = 73
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5038903065599

#####################################################################
Debug: arrayLength                    = 74
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5061337751022

#####################################################################
Debug: arrayLength                    = 75
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5026141394901

#####################################################################
Debug: arrayLength                    = 76
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5034297391446

#####################################################################
Debug: arrayLength                    = 77
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5062919204258

#####################################################################
Debug: arrayLength                    = 78
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5047845725492

#####################################################################
Debug: arrayLength                    = 79
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5044074266378

#####################################################################
Debug: arrayLength                    = 80
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5049551113537

#####################################################################
Debug: arrayLength                    = 81
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5087296346523

#####################################################################
Debug: arrayLength                    = 82
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5042288786532

#####################################################################
Debug: arrayLength                    = 83
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5040135489981

#####################################################################
Debug: arrayLength                    = 84
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5057832709929

#####################################################################
Debug: arrayLength                    = 85
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.504174440848

#####################################################################
Debug: arrayLength                    = 86
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5063111265201

#####################################################################
Debug: arrayLength                    = 87
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5030481351323

#####################################################################
Debug: arrayLength                    = 88
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5156667432148

#####################################################################
Debug: arrayLength                    = 89
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5026950794211

#####################################################################
Debug: arrayLength                    = 90
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5042879937079

#####################################################################
Debug: arrayLength                    = 91
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5025525222527

#####################################################################
Debug: arrayLength                    = 92
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5005684396233

#####################################################################
Debug: arrayLength                    = 93
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.503034074622

#####################################################################
Debug: arrayLength                    = 94
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5023644110563

#####################################################################
Debug: arrayLength                    = 95
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5076644734818

#####################################################################
Debug: arrayLength                    = 96
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5015611743807

#####################################################################
Debug: arrayLength                    = 97
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5007209877158

#####################################################################
Debug: arrayLength                    = 98
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5017869611987

#####################################################################
Debug: arrayLength                    = 99
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5085063588358

#####################################################################
Debug: arrayLength                    = 100
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5053208143725

#####################################################################
Debug: arrayLength                    = 101
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4931789900759

#####################################################################
Debug: arrayLength                    = 102
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4980181000563

#####################################################################
Debug: arrayLength                    = 103
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5046510392843

#####################################################################
Debug: arrayLength                    = 104
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5006014088047

#####################################################################
Debug: arrayLength                    = 105
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4996924369957

#####################################################################
Debug: arrayLength                    = 106
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.4996191437197

#####################################################################
Debug: arrayLength                    = 107
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5032217752632

#####################################################################
Debug: arrayLength                    = 108
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5023676124907

#####################################################################
Debug: arrayLength                    = 109
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5026138759646

#####################################################################
Debug: arrayLength                    = 110
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5037988095077

#####################################################################
Debug: arrayLength                    = 111
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5056502458164

#####################################################################
Debug: arrayLength                    = 112
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5034141014257

#####################################################################
Debug: arrayLength                    = 113
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.503179750295

#####################################################################
Debug: arrayLength                    = 114
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5035768740771

#####################################################################
Debug: arrayLength                    = 115
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5032569704398

#####################################################################
Debug: arrayLength                    = 116
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5027508863719

#####################################################################
Debug: arrayLength                    = 117
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5032609994675

#####################################################################
Debug: arrayLength                    = 118
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5045978734004

#####################################################################
Debug: arrayLength                    = 119
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5015551378005

#####################################################################
Debug: arrayLength                    = 120
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5040231662123

#####################################################################
Debug: arrayLength                    = 121
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5046436801963

#####################################################################
Debug: arrayLength                    = 122
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5075044888844

#####################################################################
Debug: arrayLength                    = 123
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5072378037193

#####################################################################
Debug: arrayLength                    = 124
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5042037629567

#####################################################################
Debug: arrayLength                    = 125
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5028634721129

#####################################################################
Debug: arrayLength                    = 126
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5044330473582

#####################################################################
Debug: arrayLength                    = 127
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5094696374584

#####################################################################
Debug: arrayLength                    = 128
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5094395997568

#####################################################################
Debug: arrayLength                    = 129
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5088317362166

#####################################################################
Debug: arrayLength                    = 130
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5071332451054

#####################################################################
Debug: arrayLength                    = 131
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.509518474643

#####################################################################
Debug: arrayLength                    = 132
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5153404090876

#####################################################################
Debug: arrayLength                    = 133
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5062589448425

#####################################################################
Debug: arrayLength                    = 134
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.507692071089

#####################################################################
Debug: arrayLength                    = 135
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5081586024289

#####################################################################
Debug: arrayLength                    = 136
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5064959962816

#####################################################################
Debug: arrayLength                    = 137
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5044426642176

#####################################################################
Debug: arrayLength                    = 138
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5057364950529

#####################################################################
Debug: arrayLength                    = 139
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.508463689558

#####################################################################
Debug: arrayLength                    = 140
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5063834344725

#####################################################################
Debug: arrayLength                    = 141
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5032900621382

#####################################################################
Debug: arrayLength                    = 142
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5019484743046

#####################################################################
Debug: arrayLength                    = 143
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5025087797876

#####################################################################
Debug: arrayLength                    = 144
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5023335917691

#####################################################################
Debug: arrayLength                    = 145
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5057271754774

#####################################################################
Debug: arrayLength                    = 146
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5034907964078

#####################################################################
Debug: arrayLength                    = 147
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5052017677573

#####################################################################
Debug: arrayLength                    = 148
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5086091401287

#####################################################################
Debug: arrayLength                    = 149
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.511737869915

#####################################################################
Debug: arrayLength                    = 150
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5054736024682

#####################################################################
Debug: arrayLength                    = 151
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5064508157657

#####################################################################
Debug: arrayLength                    = 152
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5072858093264

#####################################################################
Debug: arrayLength                    = 153
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5050253696921

#####################################################################
Debug: arrayLength                    = 154
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5112642501984

#####################################################################
Debug: arrayLength                    = 155
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5123313602946

#####################################################################
Debug: arrayLength                    = 156
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5101417156441

#####################################################################
Debug: arrayLength                    = 157
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5084666591334

#####################################################################
Debug: arrayLength                    = 158
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.509295441869

#####################################################################
Debug: arrayLength                    = 159
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5064473018944

#####################################################################
Debug: arrayLength                    = 160
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5101463596614

#####################################################################
Debug: arrayLength                    = 161
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5060649203121

#####################################################################
Debug: arrayLength                    = 162
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5132788865205

#####################################################################
Debug: arrayLength                    = 163
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5070816209053

#####################################################################
Debug: arrayLength                    = 164
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5107236798821

#####################################################################
Debug: arrayLength                    = 165
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5099155327342

#####################################################################
Debug: arrayLength                    = 166
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5174841316624

#####################################################################
Debug: arrayLength                    = 167
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5245957905822

#####################################################################
Debug: arrayLength                    = 168
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5207482386695

#####################################################################
Debug: arrayLength                    = 169
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5152818040786

#####################################################################
Debug: arrayLength                    = 170
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5183858961628

#####################################################################
Debug: arrayLength                    = 171
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5223306316603

#####################################################################
Debug: arrayLength                    = 172
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5200219529421

#####################################################################
Debug: arrayLength                    = 173
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5188911062416

#####################################################################
Debug: arrayLength                    = 174
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5196191658747

#####################################################################
Debug: arrayLength                    = 175
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5199318884853

#####################################################################
Debug: arrayLength                    = 176
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5148023622707

#####################################################################
Debug: arrayLength                    = 177
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5228214438133

#####################################################################
Debug: arrayLength                    = 178
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5236682672736

#####################################################################
Debug: arrayLength                    = 179
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5157947896176

#####################################################################
Debug: arrayLength                    = 180
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5158520009465

#####################################################################
Debug: arrayLength                    = 181
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.512099679117

#####################################################################
Debug: arrayLength                    = 182
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5127556142744

#####################################################################
Debug: arrayLength                    = 183
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5120886207067

#####################################################################
Debug: arrayLength                    = 184
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5060444687684

#####################################################################
Debug: arrayLength                    = 185
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5120877048928

#####################################################################
Debug: arrayLength                    = 186
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5105250951975

#####################################################################
Debug: arrayLength                    = 187
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5074242421542

#####################################################################
Debug: arrayLength                    = 188
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5062265692669

#####################################################################
Debug: arrayLength                    = 189
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5055735136829

#####################################################################
Debug: arrayLength                    = 190
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5060693069511

#####################################################################
Debug: arrayLength                    = 191
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.507804213953

#####################################################################
Debug: arrayLength                    = 192
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5070504916623

#####################################################################
Debug: arrayLength                    = 193
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5069771596832

#####################################################################
Debug: arrayLength                    = 194
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5112186663973

#####################################################################
Debug: arrayLength                    = 195
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5126953548567

#####################################################################
Debug: arrayLength                    = 196
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5090566735846

#####################################################################
Debug: arrayLength                    = 197
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5104910560479

#####################################################################
Debug: arrayLength                    = 198
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5094542553733

#####################################################################
Debug: arrayLength                    = 199
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5122977926278

#####################################################################
Debug: arrayLength                    = 200
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5100621508603

#####################################################################
Debug: arrayLength                    = 201
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5097727494042

#####################################################################
Debug: arrayLength                    = 202
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5089815265249

#####################################################################
Debug: arrayLength                    = 203
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5121636281997

#####################################################################
Debug: arrayLength                    = 204
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5123778302526

#####################################################################
Debug: arrayLength                    = 205
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5116867324172

#####################################################################
Debug: arrayLength                    = 206
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5105360733021

#####################################################################
Debug: arrayLength                    = 207
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5100961597124

#####################################################################
Debug: arrayLength                    = 208
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5140222319242

#####################################################################
Debug: arrayLength                    = 209
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5146090950233

#####################################################################
Debug: arrayLength                    = 210
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5106873517509

#####################################################################
Debug: arrayLength                    = 211
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5125653008268

#####################################################################
Debug: arrayLength                    = 212
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5120720602098

#####################################################################
Debug: arrayLength                    = 213
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5131558277482

#####################################################################
Debug: arrayLength                    = 214
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5102803384079

#####################################################################
Debug: arrayLength                    = 215
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5125240159248

#####################################################################
Debug: arrayLength                    = 216
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5111152460148

#####################################################################
Debug: arrayLength                    = 217
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5100734351597

#####################################################################
Debug: arrayLength                    = 218
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.51678350535

#####################################################################
Debug: arrayLength                    = 219
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5106175065408

#####################################################################
Debug: arrayLength                    = 220
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5134846526017

#####################################################################
Debug: arrayLength                    = 221
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5133968917822

#####################################################################
Debug: arrayLength                    = 222
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5121539340739

#####################################################################
Debug: arrayLength                    = 223
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5125368875562

#####################################################################
Debug: arrayLength                    = 224
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5132214584589

#####################################################################
Debug: arrayLength                    = 225
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.508198491316

#####################################################################
Debug: arrayLength                    = 226
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5110034199729

#####################################################################
Debug: arrayLength                    = 227
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5104997716851

#####################################################################
Debug: arrayLength                    = 228
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5090299332883

#####################################################################
Debug: arrayLength                    = 229
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5092417771201

#####################################################################
Debug: arrayLength                    = 230
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5072298045799

#####################################################################
Debug: arrayLength                    = 231
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5093342068025

#####################################################################
Debug: arrayLength                    = 232
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5132959680702

#####################################################################
Debug: arrayLength                    = 233
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5094535941696

#####################################################################
Debug: arrayLength                    = 234
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5071498481444

#####################################################################
Debug: arrayLength                    = 235
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5083355240212

#####################################################################
Debug: arrayLength                    = 236
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5122743264827

#####################################################################
Debug: arrayLength                    = 237
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5110324387752

#####################################################################
Debug: arrayLength                    = 238
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5117460169216

#####################################################################
Debug: arrayLength                    = 239
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5110916033173

#####################################################################
Debug: arrayLength                    = 240
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5108813309348

#####################################################################
Debug: arrayLength                    = 241
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5128034166158

#####################################################################
Debug: arrayLength                    = 242
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5114631570861

#####################################################################
Debug: arrayLength                    = 243
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5102535281337

#####################################################################
Debug: arrayLength                    = 244
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5105027815029

#####################################################################
Debug: arrayLength                    = 245
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5101827781534

#####################################################################
Debug: arrayLength                    = 246
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5109991529171

#####################################################################
Debug: arrayLength                    = 247
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5114383830163

#####################################################################
Debug: arrayLength                    = 248
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5139369528812

#####################################################################
Debug: arrayLength                    = 249
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5105490978768

#####################################################################
Debug: arrayLength                    = 250
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5098463216268

#####################################################################
Debug: arrayLength                    = 251
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5091797785397

#####################################################################
Debug: arrayLength                    = 252
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5120974828612

#####################################################################
Debug: arrayLength                    = 253
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5096353900189

#####################################################################
Debug: arrayLength                    = 254
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5135362851483

#####################################################################
Debug: arrayLength                    = 255
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5119500655088

#####################################################################
Debug: arrayLength                    = 256
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5113266079426

#####################################################################
Debug: arrayLength                    = 257
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5134285965143

#####################################################################
Debug: arrayLength                    = 258
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5103099028653

#####################################################################
Debug: arrayLength                    = 259
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.511770315145

#####################################################################
Debug: arrayLength                    = 260
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5112168641162

#####################################################################
Debug: arrayLength                    = 261
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5104319405059

#####################################################################
Debug: arrayLength                    = 262
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5120627311218

#####################################################################
Debug: arrayLength                    = 263
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5121345154214

#####################################################################
Debug: arrayLength                    = 264
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5122717036555

#####################################################################
Debug: arrayLength                    = 265
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5129302348002

#####################################################################
Debug: arrayLength                    = 266
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.510452613737

#####################################################################
Debug: arrayLength                    = 267
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5125827842387

#####################################################################
Debug: arrayLength                    = 268
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5111778743222

#####################################################################
Debug: arrayLength                    = 269
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5107968451042

#####################################################################
Debug: arrayLength                    = 270
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.508747882891

#####################################################################
Debug: arrayLength                    = 271
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5071654345292

#####################################################################
Debug: arrayLength                    = 272
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5107998617826

#####################################################################
Debug: arrayLength                    = 273
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5104213972264

#####################################################################
Debug: arrayLength                    = 274
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5117600729892

#####################################################################
Debug: arrayLength                    = 275
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5089931851491

#####################################################################
Debug: arrayLength                    = 276
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5110390824522

#####################################################################
Debug: arrayLength                    = 277
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5114689852707

#####################################################################
Debug: arrayLength                    = 278
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5100347372781

#####################################################################
Debug: arrayLength                    = 279
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5114531641009

#####################################################################
Debug: arrayLength                    = 280
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5113778098842

#####################################################################
Debug: arrayLength                    = 281
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5108001291307

#####################################################################
Debug: arrayLength                    = 282
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5133356760954

#####################################################################
Debug: arrayLength                    = 283
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5166397011988

#####################################################################
Debug: arrayLength                    = 284
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5143858760831

#####################################################################
Debug: arrayLength                    = 285
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5117125829197

#####################################################################
Debug: arrayLength                    = 286
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5103763989224

#####################################################################
Debug: arrayLength                    = 287
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5124691738834

#####################################################################
Debug: arrayLength                    = 288
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5110442302049

#####################################################################
Debug: arrayLength                    = 289
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5117612010757

#####################################################################
Debug: arrayLength                    = 290
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5100938749567

#####################################################################
Debug: arrayLength                    = 291
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5113433624497

#####################################################################
Debug: arrayLength                    = 292
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5162825777716

#####################################################################
Debug: arrayLength                    = 293
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5110498435521

#####################################################################
Debug: arrayLength                    = 294
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5173159802575

#####################################################################
Debug: arrayLength                    = 295
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5139935558333

#####################################################################
Debug: arrayLength                    = 296
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5174700273532

#####################################################################
Debug: arrayLength                    = 297
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.513063091459

#####################################################################
Debug: arrayLength                    = 298
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5150953326727

#####################################################################
Debug: arrayLength                    = 299
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5138628512157

#####################################################################
Debug: arrayLength                    = 300
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5178068294088

#####################################################################
Debug: arrayLength                    = 301
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5131540803059

#####################################################################
Debug: arrayLength                    = 302
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5145778154932

#####################################################################
Debug: arrayLength                    = 303
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5140624723747

#####################################################################
Debug: arrayLength                    = 304
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5140651282023

#####################################################################
Debug: arrayLength                    = 305
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5198570452796

#####################################################################
Debug: arrayLength                    = 306
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5113908955014

#####################################################################
Debug: arrayLength                    = 307
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5124081621032

#####################################################################
Debug: arrayLength                    = 308
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5120285674589

#####################################################################
Debug: arrayLength                    = 309
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5096930320573

#####################################################################
Debug: arrayLength                    = 310
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5099840975002

#####################################################################
Debug: arrayLength                    = 311
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5211376676776

#####################################################################
Debug: arrayLength                    = 312
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5117188884979

#####################################################################
Debug: arrayLength                    = 313
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5122249059425

#####################################################################
Debug: arrayLength                    = 314
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.510716205619

#####################################################################
Debug: arrayLength                    = 315
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5095864506807

#####################################################################
Debug: arrayLength                    = 316
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5115575332998

#####################################################################
Debug: arrayLength                    = 317
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5093868212569

#####################################################################
Debug: arrayLength                    = 318
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5110569454102

#####################################################################
Debug: arrayLength                    = 319
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5114355896424

#####################################################################
Debug: arrayLength                    = 320
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 6, 994, 
Debug: bestThreshold[maxSpeedIndex]   = 994

std::sort is faster than ir_sort 99.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5281524444791

#####################################################################
Debug: arrayLength                    = 321
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 7, 993, 
Debug: bestThreshold[maxSpeedIndex]   = 993

std::sort is faster than ir_sort 99.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.523352997953

#####################################################################
Debug: arrayLength                    = 322
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5112132704448

#####################################################################
Debug: arrayLength                    = 323
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5310126054947

#####################################################################
Debug: arrayLength                    = 324
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5176944180986

#####################################################################
Debug: arrayLength                    = 325
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5112263916711

#####################################################################
Debug: arrayLength                    = 326
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5118546637355

#####################################################################
Debug: arrayLength                    = 327
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 6, 994, 
Debug: bestThreshold[maxSpeedIndex]   = 994

std::sort is faster than ir_sort 99.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5255866938383

#####################################################################
Debug: arrayLength                    = 328
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5197792109696

#####################################################################
Debug: arrayLength                    = 329
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5168152541221

#####################################################################
Debug: arrayLength                    = 330
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5168270227817

#####################################################################
Debug: arrayLength                    = 331
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.512392500123

#####################################################################
Debug: arrayLength                    = 332
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5117085634161

#####################################################################
Debug: arrayLength                    = 333
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5107200950154

#####################################################################
Debug: arrayLength                    = 334
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5115676260125

#####################################################################
Debug: arrayLength                    = 335
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5281205015444

#####################################################################
Debug: arrayLength                    = 336
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5114439182953

#####################################################################
Debug: arrayLength                    = 337
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5128685554895

#####################################################################
Debug: arrayLength                    = 338
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5133409490394

#####################################################################
Debug: arrayLength                    = 339
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 7, 993, 
Debug: bestThreshold[maxSpeedIndex]   = 993

std::sort is faster than ir_sort 99.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5373392939076

#####################################################################
Debug: arrayLength                    = 340
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 9, 991, 
Debug: bestThreshold[maxSpeedIndex]   = 991

std::sort is faster than ir_sort 99.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5388185653007

#####################################################################
Debug: arrayLength                    = 341
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 8, 992, 
Debug: bestThreshold[maxSpeedIndex]   = 992

std::sort is faster than ir_sort 99.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.534145688833

#####################################################################
Debug: arrayLength                    = 342
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 10, 990, 
Debug: bestThreshold[maxSpeedIndex]   = 990

std::sort is faster than ir_sort 99 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5391368854009

#####################################################################
Debug: arrayLength                    = 343
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5150873305811

#####################################################################
Debug: arrayLength                    = 344
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5080634304955

#####################################################################
Debug: arrayLength                    = 345
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5093946829006

#####################################################################
Debug: arrayLength                    = 346
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5110694676337

#####################################################################
Debug: arrayLength                    = 347
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5096612670503

#####################################################################
Debug: arrayLength                    = 348
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5111504357908

#####################################################################
Debug: arrayLength                    = 349
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5238951548767

#####################################################################
Debug: arrayLength                    = 350
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5266988412903

#####################################################################
Debug: arrayLength                    = 351
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5093913672768

#####################################################################
Debug: arrayLength                    = 352
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5104063396368

#####################################################################
Debug: arrayLength                    = 353
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5078975361339

#####################################################################
Debug: arrayLength                    = 354
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5102841879003

#####################################################################
Debug: arrayLength                    = 355
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.508995288404

#####################################################################
Debug: arrayLength                    = 356
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5102493823164

#####################################################################
Debug: arrayLength                    = 357
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 9, 991, 
Debug: bestThreshold[maxSpeedIndex]   = 991

std::sort is faster than ir_sort 99.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5359404968376

#####################################################################
Debug: arrayLength                    = 358
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5233054554626

#####################################################################
Debug: arrayLength                    = 359
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5086168858783

#####################################################################
Debug: arrayLength                    = 360
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5120600062811

#####################################################################
Debug: arrayLength                    = 361
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5087907600465

#####################################################################
Debug: arrayLength                    = 362
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5097446062392

#####################################################################
Debug: arrayLength                    = 363
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5203631129533

#####################################################################
Debug: arrayLength                    = 364
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5106221532558

#####################################################################
Debug: arrayLength                    = 365
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5098741761615

#####################################################################
Debug: arrayLength                    = 366
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 8, 992, 
Debug: bestThreshold[maxSpeedIndex]   = 992

std::sort is faster than ir_sort 99.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5366743349449

#####################################################################
Debug: arrayLength                    = 367
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5089068123863

#####################################################################
Debug: arrayLength                    = 368
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5210468847407

#####################################################################
Debug: arrayLength                    = 369
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5165451142089

#####################################################################
Debug: arrayLength                    = 370
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5114971363412

#####################################################################
Debug: arrayLength                    = 371
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5201358372183

#####################################################################
Debug: arrayLength                    = 372
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 7, 993, 
Debug: bestThreshold[maxSpeedIndex]   = 993

std::sort is faster than ir_sort 99.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5247818162628

#####################################################################
Debug: arrayLength                    = 373
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5105070920807

#####################################################################
Debug: arrayLength                    = 374
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5143577697944

#####################################################################
Debug: arrayLength                    = 375
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.510351722191

#####################################################################
Debug: arrayLength                    = 376
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5101775050505

#####################################################################
Debug: arrayLength                    = 377
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.511574342416

#####################################################################
Debug: arrayLength                    = 378
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5105945500075

#####################################################################
Debug: arrayLength                    = 379
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5109406180386

#####################################################################
Debug: arrayLength                    = 380
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5128393577248

#####################################################################
Debug: arrayLength                    = 381
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5104210187255

#####################################################################
Debug: arrayLength                    = 382
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5101586033771

#####################################################################
Debug: arrayLength                    = 383
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5239146111984

#####################################################################
Debug: arrayLength                    = 384
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.510086559026

#####################################################################
Debug: arrayLength                    = 385
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.511882263588

#####################################################################
Debug: arrayLength                    = 386
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.524370445871

#####################################################################
Debug: arrayLength                    = 387
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 15, 985, 
Debug: bestThreshold[maxSpeedIndex]   = 985

std::sort is faster than ir_sort 98.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5429613012561

#####################################################################
Debug: arrayLength                    = 388
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5136251930417

#####################################################################
Debug: arrayLength                    = 389
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5145619688105

#####################################################################
Debug: arrayLength                    = 390
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 12, 988, 
Debug: bestThreshold[maxSpeedIndex]   = 988

std::sort is faster than ir_sort 98.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5453583821036

#####################################################################
Debug: arrayLength                    = 391
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 8, 992, 
Debug: bestThreshold[maxSpeedIndex]   = 992

std::sort is faster than ir_sort 99.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5401988156135

#####################################################################
Debug: arrayLength                    = 392
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 10, 990, 
Debug: bestThreshold[maxSpeedIndex]   = 990

std::sort is faster than ir_sort 99 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.554686084576

#####################################################################
Debug: arrayLength                    = 393
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5384291171567

#####################################################################
Debug: arrayLength                    = 394
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.531500258143

#####################################################################
Debug: arrayLength                    = 395
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5226316144819

#####################################################################
Debug: arrayLength                    = 396
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.530430847851

#####################################################################
Debug: arrayLength                    = 397
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 6, 994, 
Debug: bestThreshold[maxSpeedIndex]   = 994

std::sort is faster than ir_sort 99.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.537104500706

#####################################################################
Debug: arrayLength                    = 398
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 7, 993, 
Debug: bestThreshold[maxSpeedIndex]   = 993

std::sort is faster than ir_sort 99.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5280110330079

#####################################################################
Debug: arrayLength                    = 399
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.51816229416

#####################################################################
Debug: arrayLength                    = 400
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5240819107332

#####################################################################
Debug: arrayLength                    = 401
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5207072834204

#####################################################################
Debug: arrayLength                    = 402
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 8, 992, 
Debug: bestThreshold[maxSpeedIndex]   = 992

std::sort is faster than ir_sort 99.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5249158532177

#####################################################################
Debug: arrayLength                    = 403
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5236325266306

#####################################################################
Debug: arrayLength                    = 404
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5194714708715

#####################################################################
Debug: arrayLength                    = 405
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5328935279433

#####################################################################
Debug: arrayLength                    = 406
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5400452636066

#####################################################################
Debug: arrayLength                    = 407
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5277655694014

#####################################################################
Debug: arrayLength                    = 408
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5203671964516

#####################################################################
Debug: arrayLength                    = 409
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5114167447635

#####################################################################
Debug: arrayLength                    = 410
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5235329284353

#####################################################################
Debug: arrayLength                    = 411
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5148256178519

#####################################################################
Debug: arrayLength                    = 412
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5178659401678

#####################################################################
Debug: arrayLength                    = 413
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.522004816982

#####################################################################
Debug: arrayLength                    = 414
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5134981962259

#####################################################################
Debug: arrayLength                    = 415
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5223739074747

#####################################################################
Debug: arrayLength                    = 416
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5102105482576

#####################################################################
Debug: arrayLength                    = 417
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5073144301112

#####################################################################
Debug: arrayLength                    = 418
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5160591142212

#####################################################################
Debug: arrayLength                    = 419
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5192886181013

#####################################################################
Debug: arrayLength                    = 420
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5260337195971

#####################################################################
Debug: arrayLength                    = 421
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.511923648494

#####################################################################
Debug: arrayLength                    = 422
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.51220920419

#####################################################################
Debug: arrayLength                    = 423
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5146053597865

#####################################################################
Debug: arrayLength                    = 424
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5107489356511

#####################################################################
Debug: arrayLength                    = 425
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5089811130918

#####################################################################
Debug: arrayLength                    = 426
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5096263157075

#####################################################################
Debug: arrayLength                    = 427
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.511821452911

#####################################################################
Debug: arrayLength                    = 428
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.513304952962

#####################################################################
Debug: arrayLength                    = 429
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.508289161347

#####################################################################
Debug: arrayLength                    = 430
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5088677732399

#####################################################################
Debug: arrayLength                    = 431
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5069760491017

#####################################################################
Debug: arrayLength                    = 432
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5116176131204

#####################################################################
Debug: arrayLength                    = 433
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5106250082346

#####################################################################
Debug: arrayLength                    = 434
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.506370786898

#####################################################################
Debug: arrayLength                    = 435
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5077219948858

#####################################################################
Debug: arrayLength                    = 436
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.507676359651

#####################################################################
Debug: arrayLength                    = 437
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5114464919585

#####################################################################
Debug: arrayLength                    = 438
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5129793126869

#####################################################################
Debug: arrayLength                    = 439
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5123671442435

#####################################################################
Debug: arrayLength                    = 440
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5053364956161

#####################################################################
Debug: arrayLength                    = 441
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5063721462589

#####################################################################
Debug: arrayLength                    = 442
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5091945241132

#####################################################################
Debug: arrayLength                    = 443
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.506450335906

#####################################################################
Debug: arrayLength                    = 444
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5085075047441

#####################################################################
Debug: arrayLength                    = 445
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.508080209517

#####################################################################
Debug: arrayLength                    = 446
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5079586742298

#####################################################################
Debug: arrayLength                    = 447
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5070590817934

#####################################################################
Debug: arrayLength                    = 448
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5077023503189

#####################################################################
Debug: arrayLength                    = 449
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5078544392418

#####################################################################
Debug: arrayLength                    = 450
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 6, 994, 
Debug: bestThreshold[maxSpeedIndex]   = 994

std::sort is faster than ir_sort 99.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5261154489137

#####################################################################
Debug: arrayLength                    = 451
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 11, 989, 
Debug: bestThreshold[maxSpeedIndex]   = 989

std::sort is faster than ir_sort 98.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5424517378798

#####################################################################
Debug: arrayLength                    = 452
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5160537992075

#####################################################################
Debug: arrayLength                    = 453
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5092605844339

#####################################################################
Debug: arrayLength                    = 454
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5113729769965

#####################################################################
Debug: arrayLength                    = 455
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.516367498032

#####################################################################
Debug: arrayLength                    = 456
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5173310803626

#####################################################################
Debug: arrayLength                    = 457
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5080772956118

#####################################################################
Debug: arrayLength                    = 458
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5182612540677

#####################################################################
Debug: arrayLength                    = 459
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5099579147575

#####################################################################
Debug: arrayLength                    = 460
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 10, 990, 
Debug: bestThreshold[maxSpeedIndex]   = 990

std::sort is faster than ir_sort 99 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5426589637596

#####################################################################
Debug: arrayLength                    = 461
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5221692609267

#####################################################################
Debug: arrayLength                    = 462
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5209027384296

#####################################################################
Debug: arrayLength                    = 463
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 17, 983, 
Debug: bestThreshold[maxSpeedIndex]   = 983

std::sort is faster than ir_sort 98.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5675387207635

#####################################################################
Debug: arrayLength                    = 464
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 9, 991, 
Debug: bestThreshold[maxSpeedIndex]   = 991

std::sort is faster than ir_sort 99.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5331298359638

#####################################################################
Debug: arrayLength                    = 465
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5326704403718

#####################################################################
Debug: arrayLength                    = 466
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 11, 989, 
Debug: bestThreshold[maxSpeedIndex]   = 989

std::sort is faster than ir_sort 98.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5457336811232

#####################################################################
Debug: arrayLength                    = 467
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 13, 987, 
Debug: bestThreshold[maxSpeedIndex]   = 987

std::sort is faster than ir_sort 98.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5492006464615

#####################################################################
Debug: arrayLength                    = 468
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5216434580986

#####################################################################
Debug: arrayLength                    = 469
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 12, 988, 
Debug: bestThreshold[maxSpeedIndex]   = 988

std::sort is faster than ir_sort 98.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5552461700835

#####################################################################
Debug: arrayLength                    = 470
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 11, 989, 
Debug: bestThreshold[maxSpeedIndex]   = 989

std::sort is faster than ir_sort 98.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5488382362389

#####################################################################
Debug: arrayLength                    = 471
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5285498944557

#####################################################################
Debug: arrayLength                    = 472
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5150053276893

#####################################################################
Debug: arrayLength                    = 473
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5282536374463

#####################################################################
Debug: arrayLength                    = 474
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5223423470644

#####################################################################
Debug: arrayLength                    = 475
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5110996225824

#####################################################################
Debug: arrayLength                    = 476
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5093228476514

#####################################################################
Debug: arrayLength                    = 477
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 9, 991, 
Debug: bestThreshold[maxSpeedIndex]   = 991

std::sort is faster than ir_sort 99.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5317984874271

#####################################################################
Debug: arrayLength                    = 478
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 12, 988, 
Debug: bestThreshold[maxSpeedIndex]   = 988

std::sort is faster than ir_sort 98.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5393277006348

#####################################################################
Debug: arrayLength                    = 479
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5108225613651

#####################################################################
Debug: arrayLength                    = 480
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 6, 994, 
Debug: bestThreshold[maxSpeedIndex]   = 994

std::sort is faster than ir_sort 99.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5229393585708

#####################################################################
Debug: arrayLength                    = 481
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 25, 975, 
Debug: bestThreshold[maxSpeedIndex]   = 975

std::sort is faster than ir_sort 97.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5733356235187

#####################################################################
Debug: arrayLength                    = 482
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 6, 994, 
Debug: bestThreshold[maxSpeedIndex]   = 994

std::sort is faster than ir_sort 99.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5426153496626

#####################################################################
Debug: arrayLength                    = 483
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5328116512361

#####################################################################
Debug: arrayLength                    = 484
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 6, 994, 
Debug: bestThreshold[maxSpeedIndex]   = 994

std::sort is faster than ir_sort 99.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5475709133488

#####################################################################
Debug: arrayLength                    = 485
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 6, 994, 
Debug: bestThreshold[maxSpeedIndex]   = 994

std::sort is faster than ir_sort 99.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5345181985291

#####################################################################
Debug: arrayLength                    = 486
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5374998516207

#####################################################################
Debug: arrayLength                    = 487
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5117598261693

#####################################################################
Debug: arrayLength                    = 488
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5057613428834

#####################################################################
Debug: arrayLength                    = 489
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5132516970142

#####################################################################
Debug: arrayLength                    = 490
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5333991169483

#####################################################################
Debug: arrayLength                    = 491
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5349006897991

#####################################################################
Debug: arrayLength                    = 492
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5317917949806

#####################################################################
Debug: arrayLength                    = 493
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5133361595679

#####################################################################
Debug: arrayLength                    = 494
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.521903713101

#####################################################################
Debug: arrayLength                    = 495
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 15, 985, 
Debug: bestThreshold[maxSpeedIndex]   = 985

std::sort is faster than ir_sort 98.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5666000803855

#####################################################################
Debug: arrayLength                    = 496
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 9, 991, 
Debug: bestThreshold[maxSpeedIndex]   = 991

std::sort is faster than ir_sort 99.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5654147817023

#####################################################################
Debug: arrayLength                    = 497
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 20, 980, 
Debug: bestThreshold[maxSpeedIndex]   = 980

std::sort is faster than ir_sort 98 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5689830508376

#####################################################################
Debug: arrayLength                    = 498
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5438125171832

#####################################################################
Debug: arrayLength                    = 499
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5479441425449

#####################################################################
Debug: arrayLength                    = 500
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5335942551027

#####################################################################
Debug: arrayLength                    = 501
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5239155961195

#####################################################################
Debug: arrayLength                    = 502
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5054853604786

#####################################################################
Debug: arrayLength                    = 503
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5132420884125

#####################################################################
Debug: arrayLength                    = 504
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5168868795812

#####################################################################
Debug: arrayLength                    = 505
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5223523620318

#####################################################################
Debug: arrayLength                    = 506
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5210784475718

#####################################################################
Debug: arrayLength                    = 507
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.507564195564

#####################################################################
Debug: arrayLength                    = 508
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5155067271294

#####################################################################
Debug: arrayLength                    = 509
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5225778540516

#####################################################################
Debug: arrayLength                    = 510
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 8, 992, 
Debug: bestThreshold[maxSpeedIndex]   = 992

std::sort is faster than ir_sort 99.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5226789732104

#####################################################################
Debug: arrayLength                    = 511
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5093560957176

#####################################################################
Debug: arrayLength                    = 512
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5108745858951

#####################################################################
Debug: arrayLength                    = 513
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5053344774471

#####################################################################
Debug: arrayLength                    = 514
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5079063990654

#####################################################################
Debug: arrayLength                    = 515
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5070434291265

#####################################################################
Debug: arrayLength                    = 516
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5080293084435

#####################################################################
Debug: arrayLength                    = 517
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5106324079141

#####################################################################
Debug: arrayLength                    = 518
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.508069809414

#####################################################################
Debug: arrayLength                    = 519
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5070655074231

#####################################################################
Debug: arrayLength                    = 520
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5072314838652

#####################################################################
Debug: arrayLength                    = 521
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5059050787475

#####################################################################
Debug: arrayLength                    = 522
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5081180917091

#####################################################################
Debug: arrayLength                    = 523
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5074352093839

#####################################################################
Debug: arrayLength                    = 524
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5071537389586

#####################################################################
Debug: arrayLength                    = 525
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5058599091088

#####################################################################
Debug: arrayLength                    = 526
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5054662531254

#####################################################################
Debug: arrayLength                    = 527
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5046302556293

#####################################################################
Debug: arrayLength                    = 528
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5061260209681

#####################################################################
Debug: arrayLength                    = 529
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5056558078346

#####################################################################
Debug: arrayLength                    = 530
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5073317748366

#####################################################################
Debug: arrayLength                    = 531
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5070362169597

#####################################################################
Debug: arrayLength                    = 532
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5060982094093

#####################################################################
Debug: arrayLength                    = 533
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5059120297656

#####################################################################
Debug: arrayLength                    = 534
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5064484828921

#####################################################################
Debug: arrayLength                    = 535
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5106579448307

#####################################################################
Debug: arrayLength                    = 536
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5164271847886

#####################################################################
Debug: arrayLength                    = 537
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5059617311222

#####################################################################
Debug: arrayLength                    = 538
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5070102736937

#####################################################################
Debug: arrayLength                    = 539
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.509388648143

#####################################################################
Debug: arrayLength                    = 540
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5089513507205

#####################################################################
Debug: arrayLength                    = 541
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5204680296779

#####################################################################
Debug: arrayLength                    = 542
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 12, 988, 
Debug: bestThreshold[maxSpeedIndex]   = 988

std::sort is faster than ir_sort 98.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5355393219626

#####################################################################
Debug: arrayLength                    = 543
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.508235505426

#####################################################################
Debug: arrayLength                    = 544
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5130202786024

#####################################################################
Debug: arrayLength                    = 545
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 9, 991, 
Debug: bestThreshold[maxSpeedIndex]   = 991

std::sort is faster than ir_sort 99.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5295144897818

#####################################################################
Debug: arrayLength                    = 546
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5231688092457

#####################################################################
Debug: arrayLength                    = 547
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5210683471862

#####################################################################
Debug: arrayLength                    = 548
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5056681251698

#####################################################################
Debug: arrayLength                    = 549
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5061434132891

#####################################################################
Debug: arrayLength                    = 550
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5069344705402

#####################################################################
Debug: arrayLength                    = 551
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5084158219962

#####################################################################
Debug: arrayLength                    = 552
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5092182636124

#####################################################################
Debug: arrayLength                    = 553
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5093208587071

#####################################################################
Debug: arrayLength                    = 554
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5082068449054

#####################################################################
Debug: arrayLength                    = 555
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5084747858038

#####################################################################
Debug: arrayLength                    = 556
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5084442222995

#####################################################################
Debug: arrayLength                    = 557
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5070062917286

#####################################################################
Debug: arrayLength                    = 558
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5079292957909

#####################################################################
Debug: arrayLength                    = 559
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.518624620803

#####################################################################
Debug: arrayLength                    = 560
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5092416173653

#####################################################################
Debug: arrayLength                    = 561
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5100893545419

#####################################################################
Debug: arrayLength                    = 562
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5080270071654

#####################################################################
Debug: arrayLength                    = 563
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.506682755487

#####################################################################
Debug: arrayLength                    = 564
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5068621638753

#####################################################################
Debug: arrayLength                    = 565
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5075272385165

#####################################################################
Debug: arrayLength                    = 566
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5196743824711

#####################################################################
Debug: arrayLength                    = 567
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.514856178602

#####################################################################
Debug: arrayLength                    = 568
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.508501725272

#####################################################################
Debug: arrayLength                    = 569
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 6, 994, 
Debug: bestThreshold[maxSpeedIndex]   = 994

std::sort is faster than ir_sort 99.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5200958089597

#####################################################################
Debug: arrayLength                    = 570
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 19, 981, 
Debug: bestThreshold[maxSpeedIndex]   = 981

std::sort is faster than ir_sort 98.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5936878968367

#####################################################################
Debug: arrayLength                    = 571
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5496225682345

#####################################################################
Debug: arrayLength                    = 572
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 26, 974, 
Debug: bestThreshold[maxSpeedIndex]   = 974

std::sort is faster than ir_sort 97.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.6046013762133

#####################################################################
Debug: arrayLength                    = 573
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 33, 967, 
Debug: bestThreshold[maxSpeedIndex]   = 967

std::sort is faster than ir_sort 96.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.6118420728084

#####################################################################
Debug: arrayLength                    = 574
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 15, 985, 
Debug: bestThreshold[maxSpeedIndex]   = 985

std::sort is faster than ir_sort 98.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5911146224904

#####################################################################
Debug: arrayLength                    = 575
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5447616598941

#####################################################################
Debug: arrayLength                    = 576
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 6, 994, 
Debug: bestThreshold[maxSpeedIndex]   = 994

std::sort is faster than ir_sort 99.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5543304637148

#####################################################################
Debug: arrayLength                    = 577
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 14, 986, 
Debug: bestThreshold[maxSpeedIndex]   = 986

std::sort is faster than ir_sort 98.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5926227735004

#####################################################################
Debug: arrayLength                    = 578
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 15, 985, 
Debug: bestThreshold[maxSpeedIndex]   = 985

std::sort is faster than ir_sort 98.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5695596317935

#####################################################################
Debug: arrayLength                    = 579
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 8, 992, 
Debug: bestThreshold[maxSpeedIndex]   = 992

std::sort is faster than ir_sort 99.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5544747263466

#####################################################################
Debug: arrayLength                    = 580
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 8, 992, 
Debug: bestThreshold[maxSpeedIndex]   = 992

std::sort is faster than ir_sort 99.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5638072883395

#####################################################################
Debug: arrayLength                    = 581
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 8, 992, 
Debug: bestThreshold[maxSpeedIndex]   = 992

std::sort is faster than ir_sort 99.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5385426328373

#####################################################################
Debug: arrayLength                    = 582
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 7, 993, 
Debug: bestThreshold[maxSpeedIndex]   = 993

std::sort is faster than ir_sort 99.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5459184785868

#####################################################################
Debug: arrayLength                    = 583
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5261363961393

#####################################################################
Debug: arrayLength                    = 584
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 7, 993, 
Debug: bestThreshold[maxSpeedIndex]   = 993

std::sort is faster than ir_sort 99.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.530865930622

#####################################################################
Debug: arrayLength                    = 585
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5113509717882

#####################################################################
Debug: arrayLength                    = 586
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5145929873649

#####################################################################
Debug: arrayLength                    = 587
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5102089831516

#####################################################################
Debug: arrayLength                    = 588
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5142423278942

#####################################################################
Debug: arrayLength                    = 589
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5109127735692

#####################################################################
Debug: arrayLength                    = 590
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5114597796054

#####################################################################
Debug: arrayLength                    = 591
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5123728977358

#####################################################################
Debug: arrayLength                    = 592
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5116430001846

#####################################################################
Debug: arrayLength                    = 593
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5137671384475

#####################################################################
Debug: arrayLength                    = 594
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5100635951684

#####################################################################
Debug: arrayLength                    = 595
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5157753706272

#####################################################################
Debug: arrayLength                    = 596
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5117656781899

#####################################################################
Debug: arrayLength                    = 597
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5107065209436

#####################################################################
Debug: arrayLength                    = 598
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5107524487085

#####################################################################
Debug: arrayLength                    = 599
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5090003615091

#####################################################################
Debug: arrayLength                    = 600
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5124182208574

#####################################################################
Debug: arrayLength                    = 601
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5112393308669

#####################################################################
Debug: arrayLength                    = 602
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5072285324954

#####################################################################
Debug: arrayLength                    = 603
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5149828903151

#####################################################################
Debug: arrayLength                    = 604
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5115693555257

#####################################################################
Debug: arrayLength                    = 605
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5123719736942

#####################################################################
Debug: arrayLength                    = 606
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5098968020288

#####################################################################
Debug: arrayLength                    = 607
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5104763520578

#####################################################################
Debug: arrayLength                    = 608
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5151570184338

#####################################################################
Debug: arrayLength                    = 609
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 6, 994, 
Debug: bestThreshold[maxSpeedIndex]   = 994

std::sort is faster than ir_sort 99.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5215691643129

#####################################################################
Debug: arrayLength                    = 610
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.512945953995

#####################################################################
Debug: arrayLength                    = 611
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5149614470531

#####################################################################
Debug: arrayLength                    = 612
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5113987105217

#####################################################################
Debug: arrayLength                    = 613
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5090465766309

#####################################################################
Debug: arrayLength                    = 614
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5133679603298

#####################################################################
Debug: arrayLength                    = 615
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5080795909534

#####################################################################
Debug: arrayLength                    = 616
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5127461580259

#####################################################################
Debug: arrayLength                    = 617
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5076222039735

#####################################################################
Debug: arrayLength                    = 618
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5132224369191

#####################################################################
Debug: arrayLength                    = 619
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5085395745215

#####################################################################
Debug: arrayLength                    = 620
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5111315425022

#####################################################################
Debug: arrayLength                    = 621
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5104737418169

#####################################################################
Debug: arrayLength                    = 622
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5133438230454

#####################################################################
Debug: arrayLength                    = 623
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.50952617254

#####################################################################
Debug: arrayLength                    = 624
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5093599354367

#####################################################################
Debug: arrayLength                    = 625
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5127201784073

#####################################################################
Debug: arrayLength                    = 626
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5086102386038

#####################################################################
Debug: arrayLength                    = 627
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5150880983144

#####################################################################
Debug: arrayLength                    = 628
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5092777191041

#####################################################################
Debug: arrayLength                    = 629
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.512993435361

#####################################################################
Debug: arrayLength                    = 630
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5103692992279

#####################################################################
Debug: arrayLength                    = 631
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5111845738957

#####################################################################
Debug: arrayLength                    = 632
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5085268119149

#####################################################################
Debug: arrayLength                    = 633
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5160327700112

#####################################################################
Debug: arrayLength                    = 634
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5078765381127

#####################################################################
Debug: arrayLength                    = 635
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5125550071463

#####################################################################
Debug: arrayLength                    = 636
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5108452098138

#####################################################################
Debug: arrayLength                    = 637
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5119653588153

#####################################################################
Debug: arrayLength                    = 638
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5090047919148

#####################################################################
Debug: arrayLength                    = 639
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5138743074542

#####################################################################
Debug: arrayLength                    = 640
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5111372176229

#####################################################################
Debug: arrayLength                    = 641
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5144850099562

#####################################################################
Debug: arrayLength                    = 642
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5104274623604

#####################################################################
Debug: arrayLength                    = 643
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5149717711302

#####################################################################
Debug: arrayLength                    = 644
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5126967744134

#####################################################################
Debug: arrayLength                    = 645
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5141453634465

#####################################################################
Debug: arrayLength                    = 646
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5123211743262

#####################################################################
Debug: arrayLength                    = 647
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5107819701441

#####################################################################
Debug: arrayLength                    = 648
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5105988277632

#####################################################################
Debug: arrayLength                    = 649
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.513087210986

#####################################################################
Debug: arrayLength                    = 650
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5185686518857

#####################################################################
Debug: arrayLength                    = 651
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5152521777972

#####################################################################
Debug: arrayLength                    = 652
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5124909081283

#####################################################################
Debug: arrayLength                    = 653
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5155198401575

#####################################################################
Debug: arrayLength                    = 654
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5122312693779

#####################################################################
Debug: arrayLength                    = 655
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5133721139801

#####################################################################
Debug: arrayLength                    = 656
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.515594582738

#####################################################################
Debug: arrayLength                    = 657
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 10, 990, 
Debug: bestThreshold[maxSpeedIndex]   = 990

std::sort is faster than ir_sort 99 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5355820123252

#####################################################################
Debug: arrayLength                    = 658
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 14, 986, 
Debug: bestThreshold[maxSpeedIndex]   = 986

std::sort is faster than ir_sort 98.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5371033169556

#####################################################################
Debug: arrayLength                    = 659
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 9, 991, 
Debug: bestThreshold[maxSpeedIndex]   = 991

std::sort is faster than ir_sort 99.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5308547060286

#####################################################################
Debug: arrayLength                    = 660
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 23, 977, 
Debug: bestThreshold[maxSpeedIndex]   = 977

std::sort is faster than ir_sort 97.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.6081877422037

#####################################################################
Debug: arrayLength                    = 661
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 10, 990, 
Debug: bestThreshold[maxSpeedIndex]   = 990

std::sort is faster than ir_sort 99 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5893022190393

#####################################################################
Debug: arrayLength                    = 662
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5596183040431

#####################################################################
Debug: arrayLength                    = 663
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 15, 985, 
Debug: bestThreshold[maxSpeedIndex]   = 985

std::sort is faster than ir_sort 98.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5697383947771

#####################################################################
Debug: arrayLength                    = 664
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 14, 986, 
Debug: bestThreshold[maxSpeedIndex]   = 986

std::sort is faster than ir_sort 98.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.576830359432

#####################################################################
Debug: arrayLength                    = 665
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5628067344502

#####################################################################
Debug: arrayLength                    = 666
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5630049322809

#####################################################################
Debug: arrayLength                    = 667
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5190219696946

#####################################################################
Debug: arrayLength                    = 668
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5114701372155

#####################################################################
Debug: arrayLength                    = 669
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 6, 994, 
Debug: bestThreshold[maxSpeedIndex]   = 994

std::sort is faster than ir_sort 99.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5209025269553

#####################################################################
Debug: arrayLength                    = 670
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5197694636379

#####################################################################
Debug: arrayLength                    = 671
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5102355543098

#####################################################################
Debug: arrayLength                    = 672
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5138878842347

#####################################################################
Debug: arrayLength                    = 673
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5128669390252

#####################################################################
Debug: arrayLength                    = 674
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5118635730279

#####################################################################
Debug: arrayLength                    = 675
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5138290560146

#####################################################################
Debug: arrayLength                    = 676
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5152357780585

#####################################################################
Debug: arrayLength                    = 677
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 7, 993, 
Debug: bestThreshold[maxSpeedIndex]   = 993

std::sort is faster than ir_sort 99.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5324370978488

#####################################################################
Debug: arrayLength                    = 678
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5086870257166

#####################################################################
Debug: arrayLength                    = 679
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5058077010593

#####################################################################
Debug: arrayLength                    = 680
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5096753238946

#####################################################################
Debug: arrayLength                    = 681
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5063342895857

#####################################################################
Debug: arrayLength                    = 682
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.506894092406

#####################################################################
Debug: arrayLength                    = 683
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5086590546553

#####################################################################
Debug: arrayLength                    = 684
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5064934757398

#####################################################################
Debug: arrayLength                    = 685
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5074828479241

#####################################################################
Debug: arrayLength                    = 686
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5098353444807

#####################################################################
Debug: arrayLength                    = 687
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5092881084729

#####################################################################
Debug: arrayLength                    = 688
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5075531027554

#####################################################################
Debug: arrayLength                    = 689
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5060291709657

#####################################################################
Debug: arrayLength                    = 690
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5079257128156

#####################################################################
Debug: arrayLength                    = 691
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5081629256378

#####################################################################
Debug: arrayLength                    = 692
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.507181150147

#####################################################################
Debug: arrayLength                    = 693
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5068484557195

#####################################################################
Debug: arrayLength                    = 694
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5075069317499

#####################################################################
Debug: arrayLength                    = 695
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5081220551847

#####################################################################
Debug: arrayLength                    = 696
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5071241571926

#####################################################################
Debug: arrayLength                    = 697
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.505851482426

#####################################################################
Debug: arrayLength                    = 698
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5088411224407

#####################################################################
Debug: arrayLength                    = 699
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5089269888663

#####################################################################
Debug: arrayLength                    = 700
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5066202799071

#####################################################################
Debug: arrayLength                    = 701
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5080023051049

#####################################################################
Debug: arrayLength                    = 702
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5071877925868

#####################################################################
Debug: arrayLength                    = 703
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5085322517921

#####################################################################
Debug: arrayLength                    = 704
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5078477001419

#####################################################################
Debug: arrayLength                    = 705
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5071110928702

#####################################################################
Debug: arrayLength                    = 706
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5072152508642

#####################################################################
Debug: arrayLength                    = 707
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5098463142609

#####################################################################
Debug: arrayLength                    = 708
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5094968500474

#####################################################################
Debug: arrayLength                    = 709
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5087695210694

#####################################################################
Debug: arrayLength                    = 710
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5078714258594

#####################################################################
Debug: arrayLength                    = 711
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5092552149436

#####################################################################
Debug: arrayLength                    = 712
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5095830411274

#####################################################################
Debug: arrayLength                    = 713
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5084672120261

#####################################################################
Debug: arrayLength                    = 714
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5084690382979

#####################################################################
Debug: arrayLength                    = 715
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5092753533235

#####################################################################
Debug: arrayLength                    = 716
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5081299501194

#####################################################################
Debug: arrayLength                    = 717
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5084940080565

#####################################################################
Debug: arrayLength                    = 718
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5074620598813

#####################################################################
Debug: arrayLength                    = 719
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5092881606897

#####################################################################
Debug: arrayLength                    = 720
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.508423193834

#####################################################################
Debug: arrayLength                    = 721
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5084408808751

#####################################################################
Debug: arrayLength                    = 722
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5082532598312

#####################################################################
Debug: arrayLength                    = 723
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5087946746071

#####################################################################
Debug: arrayLength                    = 724
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5096125213004

#####################################################################
Debug: arrayLength                    = 725
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5103552610678

#####################################################################
Debug: arrayLength                    = 726
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 8, 992, 
Debug: bestThreshold[maxSpeedIndex]   = 992

std::sort is faster than ir_sort 99.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5454588773132

#####################################################################
Debug: arrayLength                    = 727
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5318220907856

#####################################################################
Debug: arrayLength                    = 728
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5117027823821

#####################################################################
Debug: arrayLength                    = 729
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5087318717044

#####################################################################
Debug: arrayLength                    = 730
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5264178597971

#####################################################################
Debug: arrayLength                    = 731
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 9, 991, 
Debug: bestThreshold[maxSpeedIndex]   = 991

std::sort is faster than ir_sort 99.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5342461070177

#####################################################################
Debug: arrayLength                    = 732
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5089504219465

#####################################################################
Debug: arrayLength                    = 733
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5074770193913

#####################################################################
Debug: arrayLength                    = 734
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5089584152526

#####################################################################
Debug: arrayLength                    = 735
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5082141710221

#####################################################################
Debug: arrayLength                    = 736
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5088979183056

#####################################################################
Debug: arrayLength                    = 737
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5082031493136

#####################################################################
Debug: arrayLength                    = 738
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5076925618607

#####################################################################
Debug: arrayLength                    = 739
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5077104048268

#####################################################################
Debug: arrayLength                    = 740
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5084040271972

#####################################################################
Debug: arrayLength                    = 741
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.508142440328

#####################################################################
Debug: arrayLength                    = 742
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5083510428315

#####################################################################
Debug: arrayLength                    = 743
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5075662246749

#####################################################################
Debug: arrayLength                    = 744
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5073093071851

#####################################################################
Debug: arrayLength                    = 745
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5074687257448

#####################################################################
Debug: arrayLength                    = 746
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5085994504573

#####################################################################
Debug: arrayLength                    = 747
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5083793424244

#####################################################################
Debug: arrayLength                    = 748
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5099018650837

#####################################################################
Debug: arrayLength                    = 749
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5090011586748

#####################################################################
Debug: arrayLength                    = 750
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5078884654918

#####################################################################
Debug: arrayLength                    = 751
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5074492508842

#####################################################################
Debug: arrayLength                    = 752
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5084614038047

#####################################################################
Debug: arrayLength                    = 753
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5096151328043

#####################################################################
Debug: arrayLength                    = 754
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5101895149828

#####################################################################
Debug: arrayLength                    = 755
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.508175890326

#####################################################################
Debug: arrayLength                    = 756
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5066469806071

#####################################################################
Debug: arrayLength                    = 757
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.508300982873

#####################################################################
Debug: arrayLength                    = 758
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5095066783014

#####################################################################
Debug: arrayLength                    = 759
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5100114839819

#####################################################################
Debug: arrayLength                    = 760
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5074849701615

#####################################################################
Debug: arrayLength                    = 761
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5079558276825

#####################################################################
Debug: arrayLength                    = 762
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5096096693448

#####################################################################
Debug: arrayLength                    = 763
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5099566765311

#####################################################################
Debug: arrayLength                    = 764
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5089903997174

#####################################################################
Debug: arrayLength                    = 765
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5074875501065

#####################################################################
Debug: arrayLength                    = 766
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5077701922468

#####################################################################
Debug: arrayLength                    = 767
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5207444484092

#####################################################################
Debug: arrayLength                    = 768
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5181839630219

#####################################################################
Debug: arrayLength                    = 769
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 7, 993, 
Debug: bestThreshold[maxSpeedIndex]   = 993

std::sort is faster than ir_sort 99.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5406479465687

#####################################################################
Debug: arrayLength                    = 770
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5417117615977

#####################################################################
Debug: arrayLength                    = 771
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 18, 982, 
Debug: bestThreshold[maxSpeedIndex]   = 982

std::sort is faster than ir_sort 98.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.554540994272

#####################################################################
Debug: arrayLength                    = 772
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 17, 983, 
Debug: bestThreshold[maxSpeedIndex]   = 983

std::sort is faster than ir_sort 98.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5430966519619

#####################################################################
Debug: arrayLength                    = 773
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 19, 981, 
Debug: bestThreshold[maxSpeedIndex]   = 981

std::sort is faster than ir_sort 98.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5570208133272

#####################################################################
Debug: arrayLength                    = 774
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 9, 991, 
Debug: bestThreshold[maxSpeedIndex]   = 991

std::sort is faster than ir_sort 99.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5382145130792

#####################################################################
Debug: arrayLength                    = 775
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.511247805251

#####################################################################
Debug: arrayLength                    = 776
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5118750700701

#####################################################################
Debug: arrayLength                    = 777
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.509934994543

#####################################################################
Debug: arrayLength                    = 778
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.510028038165

#####################################################################
Debug: arrayLength                    = 779
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5112761154839

#####################################################################
Debug: arrayLength                    = 780
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5083433090256

#####################################################################
Debug: arrayLength                    = 781
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.509148709418

#####################################################################
Debug: arrayLength                    = 782
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5077116036282

#####################################################################
Debug: arrayLength                    = 783
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5100775224071

#####################################################################
Debug: arrayLength                    = 784
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5112128684607

#####################################################################
Debug: arrayLength                    = 785
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5113075021742

#####################################################################
Debug: arrayLength                    = 786
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5084005743642

#####################################################################
Debug: arrayLength                    = 787
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5075640544257

#####################################################################
Debug: arrayLength                    = 788
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5088776991495

#####################################################################
Debug: arrayLength                    = 789
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5117979648004

#####################################################################
Debug: arrayLength                    = 790
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5113579139904

#####################################################################
Debug: arrayLength                    = 791
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5094583021739

#####################################################################
Debug: arrayLength                    = 792
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.509016015359

#####################################################################
Debug: arrayLength                    = 793
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5101340653433

#####################################################################
Debug: arrayLength                    = 794
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5103446863629

#####################################################################
Debug: arrayLength                    = 795
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5099065592648

#####################################################################
Debug: arrayLength                    = 796
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5093986193887

#####################################################################
Debug: arrayLength                    = 797
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5100016647322

#####################################################################
Debug: arrayLength                    = 798
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5087709065016

#####################################################################
Debug: arrayLength                    = 799
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5109616569743

#####################################################################
Debug: arrayLength                    = 800
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.511269859364

#####################################################################
Debug: arrayLength                    = 801
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5111659993377

#####################################################################
Debug: arrayLength                    = 802
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5114606286674

#####################################################################
Debug: arrayLength                    = 803
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5104980536923

#####################################################################
Debug: arrayLength                    = 804
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5098625234546

#####################################################################
Debug: arrayLength                    = 805
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5111297488364

#####################################################################
Debug: arrayLength                    = 806
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5107814660087

#####################################################################
Debug: arrayLength                    = 807
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5091148368599

#####################################################################
Debug: arrayLength                    = 808
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5117496522744

#####################################################################
Debug: arrayLength                    = 809
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5112677153439

#####################################################################
Debug: arrayLength                    = 810
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5106398356767

#####################################################################
Debug: arrayLength                    = 811
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5159282933343

#####################################################################
Debug: arrayLength                    = 812
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5109775783776

#####################################################################
Debug: arrayLength                    = 813
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5123297818281

#####################################################################
Debug: arrayLength                    = 814
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5105846308885

#####################################################################
Debug: arrayLength                    = 815
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5102373471004

#####################################################################
Debug: arrayLength                    = 816
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5122899013997

#####################################################################
Debug: arrayLength                    = 817
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5112480858263

#####################################################################
Debug: arrayLength                    = 818
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5105726598088

#####################################################################
Debug: arrayLength                    = 819
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5101946565096

#####################################################################
Debug: arrayLength                    = 820
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5190239293222

#####################################################################
Debug: arrayLength                    = 821
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.510470129144

#####################################################################
Debug: arrayLength                    = 822
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5098008706217

#####################################################################
Debug: arrayLength                    = 823
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5114577438885

#####################################################################
Debug: arrayLength                    = 824
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5240049825763

#####################################################################
Debug: arrayLength                    = 825
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5106074178702

#####################################################################
Debug: arrayLength                    = 826
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5092806405665

#####################################################################
Debug: arrayLength                    = 827
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5100911336468

#####################################################################
Debug: arrayLength                    = 828
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5098376751823

#####################################################################
Debug: arrayLength                    = 829
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5184686478505

#####################################################################
Debug: arrayLength                    = 830
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5201101326099

#####################################################################
Debug: arrayLength                    = 831
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5151271132975

#####################################################################
Debug: arrayLength                    = 832
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.519571444428

#####################################################################
Debug: arrayLength                    = 833
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5122800214944

#####################################################################
Debug: arrayLength                    = 834
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5146332204872

#####################################################################
Debug: arrayLength                    = 835
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5139391706303

#####################################################################
Debug: arrayLength                    = 836
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5099619997257

#####################################################################
Debug: arrayLength                    = 837
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5116070901034

#####################################################################
Debug: arrayLength                    = 838
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5129681750536

#####################################################################
Debug: arrayLength                    = 839
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5105278671945

#####################################################################
Debug: arrayLength                    = 840
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5149584380601

#####################################################################
Debug: arrayLength                    = 841
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5162650777207

#####################################################################
Debug: arrayLength                    = 842
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5126571073287

#####################################################################
Debug: arrayLength                    = 843
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5185439939922

#####################################################################
Debug: arrayLength                    = 844
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5191250366823

#####################################################################
Debug: arrayLength                    = 845
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5262015009143

#####################################################################
Debug: arrayLength                    = 846
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5239502845655

#####################################################################
Debug: arrayLength                    = 847
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 6, 994, 
Debug: bestThreshold[maxSpeedIndex]   = 994

std::sort is faster than ir_sort 99.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5269450087999

#####################################################################
Debug: arrayLength                    = 848
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 8, 992, 
Debug: bestThreshold[maxSpeedIndex]   = 992

std::sort is faster than ir_sort 99.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5381915267612

#####################################################################
Debug: arrayLength                    = 849
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 9, 991, 
Debug: bestThreshold[maxSpeedIndex]   = 991

std::sort is faster than ir_sort 99.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5390203740269

#####################################################################
Debug: arrayLength                    = 850
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 18, 982, 
Debug: bestThreshold[maxSpeedIndex]   = 982

std::sort is faster than ir_sort 98.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5399333496506

#####################################################################
Debug: arrayLength                    = 851
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 11, 989, 
Debug: bestThreshold[maxSpeedIndex]   = 989

std::sort is faster than ir_sort 98.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5420611003713

#####################################################################
Debug: arrayLength                    = 852
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5262526380953

#####################################################################
Debug: arrayLength                    = 853
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5174112399023

#####################################################################
Debug: arrayLength                    = 854
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5304159718241

#####################################################################
Debug: arrayLength                    = 855
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5207311236041

#####################################################################
Debug: arrayLength                    = 856
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5128004053208

#####################################################################
Debug: arrayLength                    = 857
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 19, 981, 
Debug: bestThreshold[maxSpeedIndex]   = 981

std::sort is faster than ir_sort 98.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5435385678562

#####################################################################
Debug: arrayLength                    = 858
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5242821635356

#####################################################################
Debug: arrayLength                    = 859
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5170485091338

#####################################################################
Debug: arrayLength                    = 860
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5149896392548

#####################################################################
Debug: arrayLength                    = 861
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5146595574966

#####################################################################
Debug: arrayLength                    = 862
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.512570363331

#####################################################################
Debug: arrayLength                    = 863
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5123615569675

#####################################################################
Debug: arrayLength                    = 864
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5157334407549

#####################################################################
Debug: arrayLength                    = 865
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 17, 983, 
Debug: bestThreshold[maxSpeedIndex]   = 983

std::sort is faster than ir_sort 98.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5467987408439

#####################################################################
Debug: arrayLength                    = 866
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5210360754905

#####################################################################
Debug: arrayLength                    = 867
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 8, 992, 
Debug: bestThreshold[maxSpeedIndex]   = 992

std::sort is faster than ir_sort 99.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5303552063023

#####################################################################
Debug: arrayLength                    = 868
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5202642885187

#####################################################################
Debug: arrayLength                    = 869
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 7, 993, 
Debug: bestThreshold[maxSpeedIndex]   = 993

std::sort is faster than ir_sort 99.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5220208957851

#####################################################################
Debug: arrayLength                    = 870
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 8, 992, 
Debug: bestThreshold[maxSpeedIndex]   = 992

std::sort is faster than ir_sort 99.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5320448256114

#####################################################################
Debug: arrayLength                    = 871
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5210110456912

#####################################################################
Debug: arrayLength                    = 872
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 10, 990, 
Debug: bestThreshold[maxSpeedIndex]   = 990

std::sort is faster than ir_sort 99 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5256721823925

#####################################################################
Debug: arrayLength                    = 873
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.519768602496

#####################################################################
Debug: arrayLength                    = 874
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5197315530551

#####################################################################
Debug: arrayLength                    = 875
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.52106158239

#####################################################################
Debug: arrayLength                    = 876
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5160122492869

#####################################################################
Debug: arrayLength                    = 877
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5127277022255

#####################################################################
Debug: arrayLength                    = 878
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.513014460507

#####################################################################
Debug: arrayLength                    = 879
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5117551868885

#####################################################################
Debug: arrayLength                    = 880
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 27, 973, 
Debug: bestThreshold[maxSpeedIndex]   = 973

std::sort is faster than ir_sort 97.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5544709884288

#####################################################################
Debug: arrayLength                    = 881
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 14, 986, 
Debug: bestThreshold[maxSpeedIndex]   = 986

std::sort is faster than ir_sort 98.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5546555874381

#####################################################################
Debug: arrayLength                    = 882
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 22, 978, 
Debug: bestThreshold[maxSpeedIndex]   = 978

std::sort is faster than ir_sort 97.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5500765729202

#####################################################################
Debug: arrayLength                    = 883
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 54, 946, 
Debug: bestThreshold[maxSpeedIndex]   = 946

std::sort is faster than ir_sort 94.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.6176519299306

#####################################################################
Debug: arrayLength                    = 884
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 26, 974, 
Debug: bestThreshold[maxSpeedIndex]   = 974

std::sort is faster than ir_sort 97.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.594687162607

#####################################################################
Debug: arrayLength                    = 885
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 34, 966, 
Debug: bestThreshold[maxSpeedIndex]   = 966

std::sort is faster than ir_sort 96.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5646678642118

#####################################################################
Debug: arrayLength                    = 886
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 37, 963, 
Debug: bestThreshold[maxSpeedIndex]   = 963

std::sort is faster than ir_sort 96.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.585883445347

#####################################################################
Debug: arrayLength                    = 887
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 40, 960, 
Debug: bestThreshold[maxSpeedIndex]   = 960

std::sort is faster than ir_sort 96 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5675433346603

#####################################################################
Debug: arrayLength                    = 888
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 40, 960, 
Debug: bestThreshold[maxSpeedIndex]   = 960

std::sort is faster than ir_sort 96 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5950216406888

#####################################################################
Debug: arrayLength                    = 889
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 21, 979, 
Debug: bestThreshold[maxSpeedIndex]   = 979

std::sort is faster than ir_sort 97.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5531470299529

#####################################################################
Debug: arrayLength                    = 890
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 7, 993, 
Debug: bestThreshold[maxSpeedIndex]   = 993

std::sort is faster than ir_sort 99.3 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5274401983134

#####################################################################
Debug: arrayLength                    = 891
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 6, 994, 
Debug: bestThreshold[maxSpeedIndex]   = 994

std::sort is faster than ir_sort 99.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5322391967932

#####################################################################
Debug: arrayLength                    = 892
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 12, 988, 
Debug: bestThreshold[maxSpeedIndex]   = 988

std::sort is faster than ir_sort 98.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5402094680259

#####################################################################
Debug: arrayLength                    = 893
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5182804287426

#####################################################################
Debug: arrayLength                    = 894
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5187064621055

#####################################################################
Debug: arrayLength                    = 895
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5181855436967

#####################################################################
Debug: arrayLength                    = 896
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5205486457336

#####################################################################
Debug: arrayLength                    = 897
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5204044280173

#####################################################################
Debug: arrayLength                    = 898
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5273892932218

#####################################################################
Debug: arrayLength                    = 899
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 20, 980, 
Debug: bestThreshold[maxSpeedIndex]   = 980

std::sort is faster than ir_sort 98 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5599133939037

#####################################################################
Debug: arrayLength                    = 900
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5216516287898

#####################################################################
Debug: arrayLength                    = 901
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 12, 988, 
Debug: bestThreshold[maxSpeedIndex]   = 988

std::sort is faster than ir_sort 98.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5406214409127

#####################################################################
Debug: arrayLength                    = 902
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 19, 981, 
Debug: bestThreshold[maxSpeedIndex]   = 981

std::sort is faster than ir_sort 98.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5420803216055

#####################################################################
Debug: arrayLength                    = 903
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5176841904861

#####################################################################
Debug: arrayLength                    = 904
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 10, 990, 
Debug: bestThreshold[maxSpeedIndex]   = 990

std::sort is faster than ir_sort 99 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5303895519285

#####################################################################
Debug: arrayLength                    = 905
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 6, 994, 
Debug: bestThreshold[maxSpeedIndex]   = 994

std::sort is faster than ir_sort 99.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.526909548828

#####################################################################
Debug: arrayLength                    = 906
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5162853910411

#####################################################################
Debug: arrayLength                    = 907
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 22, 978, 
Debug: bestThreshold[maxSpeedIndex]   = 978

std::sort is faster than ir_sort 97.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.547133539877

#####################################################################
Debug: arrayLength                    = 908
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 25, 975, 
Debug: bestThreshold[maxSpeedIndex]   = 975

std::sort is faster than ir_sort 97.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5485122423186

#####################################################################
Debug: arrayLength                    = 909
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 18, 982, 
Debug: bestThreshold[maxSpeedIndex]   = 982

std::sort is faster than ir_sort 98.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5503249084902

#####################################################################
Debug: arrayLength                    = 910
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5200898867222

#####################################################################
Debug: arrayLength                    = 911
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 10, 990, 
Debug: bestThreshold[maxSpeedIndex]   = 990

std::sort is faster than ir_sort 99 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5245123283062

#####################################################################
Debug: arrayLength                    = 912
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5118874457162

#####################################################################
Debug: arrayLength                    = 913
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5141135309893

#####################################################################
Debug: arrayLength                    = 914
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5159628627959

#####################################################################
Debug: arrayLength                    = 915
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5132618566754

#####################################################################
Debug: arrayLength                    = 916
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.513781757656

#####################################################################
Debug: arrayLength                    = 917
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5135476149413

#####################################################################
Debug: arrayLength                    = 918
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5130778285616

#####################################################################
Debug: arrayLength                    = 919
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5126089569744

#####################################################################
Debug: arrayLength                    = 920
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5118390632538

#####################################################################
Debug: arrayLength                    = 921
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 6, 994, 
Debug: bestThreshold[maxSpeedIndex]   = 994

std::sort is faster than ir_sort 99.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5419945898336

#####################################################################
Debug: arrayLength                    = 922
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5130460181467

#####################################################################
Debug: arrayLength                    = 923
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5133920178914

#####################################################################
Debug: arrayLength                    = 924
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5119268562093

#####################################################################
Debug: arrayLength                    = 925
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 9, 991, 
Debug: bestThreshold[maxSpeedIndex]   = 991

std::sort is faster than ir_sort 99.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5218891044174

#####################################################################
Debug: arrayLength                    = 926
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5146306202025

#####################################################################
Debug: arrayLength                    = 927
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5198245290784

#####################################################################
Debug: arrayLength                    = 928
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5197486762579

#####################################################################
Debug: arrayLength                    = 929
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 22, 978, 
Debug: bestThreshold[maxSpeedIndex]   = 978

std::sort is faster than ir_sort 97.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5587092817561

#####################################################################
Debug: arrayLength                    = 930
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5384276373825

#####################################################################
Debug: arrayLength                    = 931
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 19, 981, 
Debug: bestThreshold[maxSpeedIndex]   = 981

std::sort is faster than ir_sort 98.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5468610229518

#####################################################################
Debug: arrayLength                    = 932
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 15, 985, 
Debug: bestThreshold[maxSpeedIndex]   = 985

std::sort is faster than ir_sort 98.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5481778242796

#####################################################################
Debug: arrayLength                    = 933
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 9, 991, 
Debug: bestThreshold[maxSpeedIndex]   = 991

std::sort is faster than ir_sort 99.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5383841008788

#####################################################################
Debug: arrayLength                    = 934
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5169267703812

#####################################################################
Debug: arrayLength                    = 935
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5202998949937

#####################################################################
Debug: arrayLength                    = 936
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5183879479528

#####################################################################
Debug: arrayLength                    = 937
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 5, 995, 
Debug: bestThreshold[maxSpeedIndex]   = 995

std::sort is faster than ir_sort 99.5 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5213551663613

#####################################################################
Debug: arrayLength                    = 938
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 32, 968, 
Debug: bestThreshold[maxSpeedIndex]   = 968

std::sort is faster than ir_sort 96.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5552965812802

#####################################################################
Debug: arrayLength                    = 939
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 20, 980, 
Debug: bestThreshold[maxSpeedIndex]   = 980

std::sort is faster than ir_sort 98 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5468685214172

#####################################################################
Debug: arrayLength                    = 940
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5154285165096

#####################################################################
Debug: arrayLength                    = 941
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5129461545481

#####################################################################
Debug: arrayLength                    = 942
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5157584201155

#####################################################################
Debug: arrayLength                    = 943
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5179556486821

#####################################################################
Debug: arrayLength                    = 944
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 14, 986, 
Debug: bestThreshold[maxSpeedIndex]   = 986

std::sort is faster than ir_sort 98.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5405682864896

#####################################################################
Debug: arrayLength                    = 945
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 14, 986, 
Debug: bestThreshold[maxSpeedIndex]   = 986

std::sort is faster than ir_sort 98.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5348013054615

#####################################################################
Debug: arrayLength                    = 946
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5148090566813

#####################################################################
Debug: arrayLength                    = 947
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5143157687524

#####################################################################
Debug: arrayLength                    = 948
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5145773444454

#####################################################################
Debug: arrayLength                    = 949
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5261974699929

#####################################################################
Debug: arrayLength                    = 950
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.518428340081

#####################################################################
Debug: arrayLength                    = 951
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5165824730964

#####################################################################
Debug: arrayLength                    = 952
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 8, 992, 
Debug: bestThreshold[maxSpeedIndex]   = 992

std::sort is faster than ir_sort 99.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5353131055434

#####################################################################
Debug: arrayLength                    = 953
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5227383158034

#####################################################################
Debug: arrayLength                    = 954
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 16, 984, 
Debug: bestThreshold[maxSpeedIndex]   = 984

std::sort is faster than ir_sort 98.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5539240836912

#####################################################################
Debug: arrayLength                    = 955
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 8, 992, 
Debug: bestThreshold[maxSpeedIndex]   = 992

std::sort is faster than ir_sort 99.2 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5287427675098

#####################################################################
Debug: arrayLength                    = 956
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5325933033552

#####################################################################
Debug: arrayLength                    = 957
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 19, 981, 
Debug: bestThreshold[maxSpeedIndex]   = 981

std::sort is faster than ir_sort 98.1 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5543141202118

#####################################################################
Debug: arrayLength                    = 958
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 31, 969, 
Debug: bestThreshold[maxSpeedIndex]   = 969

std::sort is faster than ir_sort 96.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5791850206332

#####################################################################
Debug: arrayLength                    = 959
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 6, 994, 
Debug: bestThreshold[maxSpeedIndex]   = 994

std::sort is faster than ir_sort 99.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5309084674046

#####################################################################
Debug: arrayLength                    = 960
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5223246926266

#####################################################################
Debug: arrayLength                    = 961
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5157266005732

#####################################################################
Debug: arrayLength                    = 962
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5154374478085

#####################################################################
Debug: arrayLength                    = 963
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5124356678164

#####################################################################
Debug: arrayLength                    = 964
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5131967223447

#####################################################################
Debug: arrayLength                    = 965
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5140850185285

#####################################################################
Debug: arrayLength                    = 966
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5183010294874

#####################################################################
Debug: arrayLength                    = 967
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5130086078596

#####################################################################
Debug: arrayLength                    = 968
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5132740191294

#####################################################################
Debug: arrayLength                    = 969
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5149072258899

#####################################################################
Debug: arrayLength                    = 970
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.51312508603

#####################################################################
Debug: arrayLength                    = 971
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5158232494012

#####################################################################
Debug: arrayLength                    = 972
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5145815850448

#####################################################################
Debug: arrayLength                    = 973
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5149699014452

#####################################################################
Debug: arrayLength                    = 974
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5153345373826

#####################################################################
Debug: arrayLength                    = 975
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5167855871884

#####################################################################
Debug: arrayLength                    = 976
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5137383015503

#####################################################################
Debug: arrayLength                    = 977
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5176204505042

#####################################################################
Debug: arrayLength                    = 978
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5140517476178

#####################################################################
Debug: arrayLength                    = 979
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5142028250869

#####################################################################
Debug: arrayLength                    = 980
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5148943765124

#####################################################################
Debug: arrayLength                    = 981
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5121858865343

#####################################################################
Debug: arrayLength                    = 982
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5158024374978

#####################################################################
Debug: arrayLength                    = 983
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5160404023067

#####################################################################
Debug: arrayLength                    = 984
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 6, 994, 
Debug: bestThreshold[maxSpeedIndex]   = 994

std::sort is faster than ir_sort 99.4 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5176690239873

#####################################################################
Debug: arrayLength                    = 985
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5139599641623

#####################################################################
Debug: arrayLength                    = 986
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.514179335929

#####################################################################
Debug: arrayLength                    = 987
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5150157193698

#####################################################################
Debug: arrayLength                    = 988
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5151516999958

#####################################################################
Debug: arrayLength                    = 989
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5112606706011

#####################################################################
Debug: arrayLength                    = 990
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5138006494695

#####################################################################
Debug: arrayLength                    = 991
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5147257588178

#####################################################################
Debug: arrayLength                    = 992
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5129658118368

#####################################################################
Debug: arrayLength                    = 993
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5121164665824

#####################################################################
Debug: arrayLength                    = 994
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 4, 996, 
Debug: bestThreshold[maxSpeedIndex]   = 996

std::sort is faster than ir_sort 99.6 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5172137195457

#####################################################################
Debug: arrayLength                    = 995
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5199793577923

#####################################################################
Debug: arrayLength                    = 996
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5125069379771

#####################################################################
Debug: arrayLength                    = 997
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 3, 997, 
Debug: bestThreshold[maxSpeedIndex]   = 997

std::sort is faster than ir_sort 99.7 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5188352296109

#####################################################################
Debug: arrayLength                    = 998
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 2, 998, 
Debug: bestThreshold[maxSpeedIndex]   = 998

std::sort is faster than ir_sort 99.8 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5127585202858

#####################################################################
Debug: arrayLength                    = 999
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 0, 1000, 
Debug: bestThreshold[maxSpeedIndex]   = 1000

std::sort is faster than ir_sort 100 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.5151270340412

#####################################################################
Debug: arrayLength                    = 1000
Debug: testCases                      = 1000

Debug: bestThreshold [0 : 1] = 1, 999, 
Debug: bestThreshold[maxSpeedIndex]   = 999

std::sort is faster than ir_sort 99.9 % times, for testCases = 1000

ir_sort average speed ratio = 1
std::sort average speed ratio = 0.511747643579

