[student@student-pc test]$ . raw_data_generator.sh "a1.out" "../Graphs/All_Comparisons/rawData_int8_t/"
Object file name       : "a1.out"
Output folder location : "/home/student/Desktop/fenil_practice/project_Sorting/Graphs/All_Comparisons/rawData_int8_t"
Compiling "data_generator_integer.cpp"
Compilation successfully completed

test_cases = 5000

Array size = 10
Input: (arrayLength, testCases) =
#####################################################################
Debug: arrayLength                    = 10
Debug: testCases                      = 5000

Debug: bestThreshold [0 : 5] = 3008, 0, 1056, 656, 280, 0,
Debug: bestThreshold[maxSpeedIndex]   = 3008
Percentage wise comparison of which sort was faster on an average:
60.16
0
21.12
13.12
5.6
0
Speed ratio comparison:
1
1.3236
1.08392
1.10163
1.13112
48.1863
Array size = 100
Input: (arrayLength, testCases) =
#####################################################################
Debug: arrayLength                    = 100
Debug: testCases                      = 5000

Debug: bestThreshold [0 : 5] = 4992, 0, 8, 0, 0, 0,
Debug: bestThreshold[maxSpeedIndex]   = 4992
Percentage wise comparison of which sort was faster on an average:
99.84
0
0.16
0
0
0
Speed ratio comparison:
1
3.05719
2.35439
2.63901
2.99256
7.8578
Array size = 1000
Input: (arrayLength, testCases) =
#####################################################################
Debug: arrayLength                    = 1000
Debug: testCases                      = 5000

Debug: bestThreshold [0 : 5] = 4985, 0, 15, 0, 0, 0,
Debug: bestThreshold[maxSpeedIndex]   = 4985
Percentage wise comparison of which sort was faster on an average:
99.7
0
0.3
0
0
0
Speed ratio comparison:
1
11.3143
1.82037
8.936
11.4785
11.5401
Array size = 10000
Input: (arrayLength, testCases) =
#####################################################################
Debug: arrayLength                    = 10000
Debug: testCases                      = 5000

Debug: bestThreshold [0 : 5] = 4975, 0, 25, 0, 0, 0,
Debug: bestThreshold[maxSpeedIndex]   = 4975
Percentage wise comparison of which sort was faster on an average:
99.5
0
0.5
0
0
0
Speed ratio comparison:
1
18.2819
2.21359
9.85366
18.5411
21.3106
Array size = 100000
Input: (arrayLength, testCases) =
#####################################################################
Debug: arrayLength                    = 100000
Debug: testCases                      = 5000

Debug: bestThreshold [0 : 5] = 4983, 0, 16, 1, 0, 0,
Debug: bestThreshold[maxSpeedIndex]   = 4983
Percentage wise comparison of which sort was faster on an average:
99.66
0
0.32
0.02
0
0
Speed ratio comparison:
1
21.6632
2.18287
8.72802
21.6661
26.8574
[student@student-pc test]$ ./a1.out <<< "1000000 5000" > ../Graphs/All_Comparisons/rawData_int8_t/rawData_5000_1000000.csv
Input: (arrayLength, testCases) =
#####################################################################
Debug: arrayLength                    = 1000000
Debug: testCases                      = 5000

Debug: bestThreshold [0 : 5] = 5000, 0, 0, 0, 0, 0,
Debug: bestThreshold[maxSpeedIndex]   = 5000
Percentage wise comparison of which sort was faster on an average:
100
0
0
0
0
0
Speed ratio comparison:
1
25.6624
2.43508
8.50156
24.7208
32.6029
[student@student-pc test]$
