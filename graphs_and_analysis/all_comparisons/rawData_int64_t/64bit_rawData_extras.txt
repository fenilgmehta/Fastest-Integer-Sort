[student@student-pc project_Sorting]$ g++ data_generator_integer.cpp
[student@student-pc project_Sorting]$ ./a.out <<< "10 5000" > 09_stats/rawData_5000_10.csv
Input: (arrayLength, testCases) =
#####################################################################
Debug: arrayLength                    = 10
Debug: testCases                      = 5000

Debug: bestThreshold [0 : 5] = 4911, 0, 76, 10, 3, 0,
Debug: bestThreshold[maxSpeedIndex]   = 4911
Percentage wise comparison of which sort was faster on an average:
98.22
0
1.52
0.2
0.06
0
Speed ratio comparison:
1
1.62938
1.36814
1.43489
1.45967
30.3063
[student@student-pc project_Sorting]$ ./a.out <<< "100 5000" > 09_stats/rawData_5000_100.csv
Input: (arrayLength, testCases) =
#####################################################################
Debug: arrayLength                    = 100
Debug: testCases                      = 5000

Debug: bestThreshold [0 : 5] = 4902, 0, 87, 7, 4, 0,
Debug: bestThreshold[maxSpeedIndex]   = 4902
Percentage wise comparison of which sort was faster on an average:
98.04
0
1.74
0.14
0.08
0
Speed ratio comparison:
1
1.62607
1.29272
1.47726
1.56387
2.85153
[student@student-pc project_Sorting]$ ./a.out <<< "1000 5000" > 09_stats/rawData_5000_1000.csv
Input: (arrayLength, testCases) =
#####################################################################
Debug: arrayLength                    = 1000
Debug: testCases                      = 5000

Debug: bestThreshold [0 : 5] = 54, 0, 4946, 0, 0, 0,
Debug: bestThreshold[maxSpeedIndex]   = 4946
Percentage wise comparison of which sort was faster on an average:
1.08
0
98.92
0
0
0
Speed ratio comparison:
1
1.88351
0.786451
1.53199
1.81478
1.73968
[student@student-pc project_Sorting]$ ./a.out <<< "10000 5000" > 09_stats/rawData_5000_10000.csv
Input: (arrayLength, testCases) =
#####################################################################
Debug: arrayLength                    = 10000
Debug: testCases                      = 5000

Debug: bestThreshold [0 : 5] = 205, 0, 4795, 0, 0, 0,
Debug: bestThreshold[maxSpeedIndex]   = 4795
Percentage wise comparison of which sort was faster on an average:
4.1
0
95.9
0
0
0
Speed ratio comparison:
1
2.80391
0.931461
2.15524
2.5933
3.12847
[student@student-pc project_Sorting]$ ./a.out <<< "100000 5000" > 09_stats/rawData_5000_100000.csv
Input: (arrayLength, testCases) =
#####################################################################
Debug: arrayLength                    = 100000
Debug: testCases                      = 5000

Debug: bestThreshold [0 : 5] = 4997, 0, 3, 0, 0, 0,
Debug: bestThreshold[maxSpeedIndex]   = 4997
Percentage wise comparison of which sort was faster on an average:
99.94
0
0.06
0
0
0
Speed ratio comparison:
1
3.40302
1.59357
2.50525
3.20449
4.17248
[student@student-pc project_Sorting]$ ./a.out <<< "1000000 5000" > 09_stats/rawData_5000_1000000.csv
Input: (arrayLength, testCases) =
#####################################################################
Debug: arrayLength                    = 1000000
Debug: testCases                      = 5000

Debug: bestThreshold [0 : 5] = 4997, 0, 3, 0, 0, 0,
Debug: bestThreshold[maxSpeedIndex]   = 4997
Percentage wise comparison of which sort was faster on an average:
99.94
0
0.06
0
0
0
Speed ratio comparison:
1
8.08744
2.1796
2.67231
3.60834
4.7925
[student@student-pc project_Sorting]$